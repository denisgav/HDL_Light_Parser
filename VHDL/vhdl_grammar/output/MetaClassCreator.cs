//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g 2014-11-09 14:44:33

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


    using VHDL;
    using VHDL.annotation;
    using VHDL.parser;
    using VHDL.parser.annotation;
    using VHDL.concurrent;
    using VHDL.configuration;
    using VHDL.declaration;
    using VHDL.expression;
    using VHDL.libraryunit;
    using VHDL.literal;
    using VHDL.Object;
    using VHDL.statement;
    using VHDL.type;
    using System;
    using VHDL.parser.antlr;


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;
using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
[System.CLSCompliant(false)]
public partial class MetaClassCreator : AbstractMetaClassCreator
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABS", "ACCESS", "AFTER", "AGGREGATE", "ALIAS", "ALL", "AMPERSAND", "AND", "APOSTROPHE", "ARCHITECTURE", "ARRAY", "ARROW", "ASSERT", "ASSOCIATION_LIST", "ATTRIBUTE", "ATTRIBUTE_DECLARATION", "ATTRIBUTE_SPECIFICATION", "BACKSLASH", "BAR", "BASED_LITERAL", "BASIC_IDENTIFIER", "BEGIN", "BINANRY_BASED_INTEGER", "BINDING_INDICATION", "BIT_STRING_LITERAL_BINARY", "BIT_STRING_LITERAL_HEX", "BIT_STRING_LITERAL_OCTAL", "BLOCK", "BLOCK_CONFIGURATION", "BLOCK_STATEMENT", "BODY", "BOX", "BUFFER", "BUS", "CASE", "CHARACTER_LITERAL", "CHOICES", "COLON", "COMMA", "COMMENT", "COMPONENT", "COMPONENT_CONFIGURATION", "COMPONENT_INSTANCE", "COMPONENT_INSTANTIATION_STATEMENT", "CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT", "CONDITIONAL_WAVEFORMS", "CONFIGURATION", "CONFIGURATION_SPECIFICATION", "CONSTANT", "CONSTRAINED_ARRAY_DEFINITION", "DBLQUOTE", "DEC_BASED_INTEGER", "DIGIT", "DISCONNECT", "DISCRETE_RANGE", "DIV", "DOT", "DOUBLESTAR", "DOWNTO", "ELSE", "ELSIF", "END", "ENTITY", "ENTITY_STATEMENT", "ENUMERATION_TYPE_DEFINITION", "EQ", "EXCLAMATION", "EXIT", "EXPONENT", "EXPRESSION", "EXTENDED_IDENTIFIER", "FILE", "FILE_TYPE_DEFINITION", "FLOAT_POINT_LITERAL", "FOR", "FULL_TYPE_DECLARATION", "FUNCTION", "GE", "GENERATE", "GENERIC", "GENERIC_MAP", "GRAPHIC_CHARACTER", "GROUP", "GROUP_DECLARATION", "GROUP_TEMPLATE_DECLARATION", "GT", "GUARDED", "HEXA_BASED_INTEGER", "IF", "IMPURE", "IN", "INCOMPLETE_TYPE_DECLARATION", "INDEX_CONSTRAINT", "INERTIAL", "INOUT", "INSTANTIATION_LIST", "INTEGER_OR_FLOAT_TYPE_DEFINITION", "INTERFACE_CONSTANT_DECLARATION", "INTERFACE_FILE_DECLARATION", "INTERFACE_SIGNAL_DECLARATION", "INTERFACE_VARIABLE_DECLARATION", "IS", "LABEL", "LABEL_STATEMENT", "LBRACKET", "LE", "LETTER", "LETTER_OR_DIGIT", "LIBRARY", "LINKAGE", "LITERAL", "LOOP", "LOWER_CASE_LETTER", "LPAREN", "LT", "MAP", "MINUS", "MOD", "MUL", "NAME", "NAME_ATTRIBUTE_PART", "NAME_INDEXED_OR_SLICE_PART", "NAME_INDEXED_PART", "NAME_SELECTED_PART", "NAME_SLICE_PART", "NAND", "NEQ", "NEW", "NEXT", "NOR", "NOT", "NULLTOK", "OCTAL_BASED_INTEGER", "OF", "ON", "OPEN", "OR", "OTHERS", "OTHER_SPECIAL_CHARACTER", "OUT", "PACKAGE", "PACKAGE_BODY", "PHYSICAL_LITERAL", "PHYSICAL_TYPE_DEFINITION", "PLUS", "PORT", "PORT_MAP", "POSTPONED", "PROCEDURE", "PROCEDURE_CALL", "PROCESS", "PURE", "QUALIFIED_EXPRESSION", "RANGETOK", "RBRACKET", "RECORD", "RECORD_TYPE_DEFINITION", "REGISTER", "REJECT", "REM", "REPORT", "RESOLVED", "RETURN", "ROL", "ROR", "RPAREN", "SELECT", "SELECTED_SIGNAL_ASSIGNMENT_STATEMENT", "SEMI", "SEVERITY", "SHARED", "SIGNAL", "SIGNAL_ASSIGNMENT_STATEMENT", "SIGNAL_LIST", "SIGNATURE", "SLA", "SLL", "SPACE_CHARACTER", "SPECIAL_CHARACTER", "SRA", "SRL", "STRING_LITERAL", "SUBPROGRAM_BODY", "SUBPROGRAM_DECLARATION", "SUBTYPE", "SUBTYPE_INDICATION", "THEN", "TO", "TRANSPORT", "TYPE", "UNAFFECTED", "UNCONDITIONAL_LOOP", "UNCONSTRAINED_ARRAY_DEFINITION", "UNITS", "UNTIL", "UPPER_CASE_LETTER", "USE", "VARASGN", "VARIABLE", "VARIABLE_ASSIGNMENT_STATEMENT", "WAIT", "WAVEFORM", "WAVEFORM_ELEMENT", "WHEN", "WHILE", "WHITESPACE", "WITH", "XNOR", "XOR"
	};
	public const int EOF=-1;
	public const int ABS=4;
	public const int ACCESS=5;
	public const int AFTER=6;
	public const int AGGREGATE=7;
	public const int ALIAS=8;
	public const int ALL=9;
	public const int AMPERSAND=10;
	public const int AND=11;
	public const int APOSTROPHE=12;
	public const int ARCHITECTURE=13;
	public const int ARRAY=14;
	public const int ARROW=15;
	public const int ASSERT=16;
	public const int ASSOCIATION_LIST=17;
	public const int ATTRIBUTE=18;
	public const int ATTRIBUTE_DECLARATION=19;
	public const int ATTRIBUTE_SPECIFICATION=20;
	public const int BACKSLASH=21;
	public const int BAR=22;
	public const int BASED_LITERAL=23;
	public const int BASIC_IDENTIFIER=24;
	public const int BEGIN=25;
	public const int BINANRY_BASED_INTEGER=26;
	public const int BINDING_INDICATION=27;
	public const int BIT_STRING_LITERAL_BINARY=28;
	public const int BIT_STRING_LITERAL_HEX=29;
	public const int BIT_STRING_LITERAL_OCTAL=30;
	public const int BLOCK=31;
	public const int BLOCK_CONFIGURATION=32;
	public const int BLOCK_STATEMENT=33;
	public const int BODY=34;
	public const int BOX=35;
	public const int BUFFER=36;
	public const int BUS=37;
	public const int CASE=38;
	public const int CHARACTER_LITERAL=39;
	public const int CHOICES=40;
	public const int COLON=41;
	public const int COMMA=42;
	public const int COMMENT=43;
	public const int COMPONENT=44;
	public const int COMPONENT_CONFIGURATION=45;
	public const int COMPONENT_INSTANCE=46;
	public const int COMPONENT_INSTANTIATION_STATEMENT=47;
	public const int CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT=48;
	public const int CONDITIONAL_WAVEFORMS=49;
	public const int CONFIGURATION=50;
	public const int CONFIGURATION_SPECIFICATION=51;
	public const int CONSTANT=52;
	public const int CONSTRAINED_ARRAY_DEFINITION=53;
	public const int DBLQUOTE=54;
	public const int DEC_BASED_INTEGER=55;
	public const int DIGIT=56;
	public const int DISCONNECT=57;
	public const int DISCRETE_RANGE=58;
	public const int DIV=59;
	public const int DOT=60;
	public const int DOUBLESTAR=61;
	public const int DOWNTO=62;
	public const int ELSE=63;
	public const int ELSIF=64;
	public const int END=65;
	public const int ENTITY=66;
	public const int ENTITY_STATEMENT=67;
	public const int ENUMERATION_TYPE_DEFINITION=68;
	public const int EQ=69;
	public const int EXCLAMATION=70;
	public const int EXIT=71;
	public const int EXPONENT=72;
	public const int EXPRESSION=73;
	public const int EXTENDED_IDENTIFIER=74;
	public const int FILE=75;
	public const int FILE_TYPE_DEFINITION=76;
	public const int FLOAT_POINT_LITERAL=77;
	public const int FOR=78;
	public const int FULL_TYPE_DECLARATION=79;
	public const int FUNCTION=80;
	public const int GE=81;
	public const int GENERATE=82;
	public const int GENERIC=83;
	public const int GENERIC_MAP=84;
	public const int GRAPHIC_CHARACTER=85;
	public const int GROUP=86;
	public const int GROUP_DECLARATION=87;
	public const int GROUP_TEMPLATE_DECLARATION=88;
	public const int GT=89;
	public const int GUARDED=90;
	public const int HEXA_BASED_INTEGER=91;
	public const int IF=92;
	public const int IMPURE=93;
	public const int IN=94;
	public const int INCOMPLETE_TYPE_DECLARATION=95;
	public const int INDEX_CONSTRAINT=96;
	public const int INERTIAL=97;
	public const int INOUT=98;
	public const int INSTANTIATION_LIST=99;
	public const int INTEGER_OR_FLOAT_TYPE_DEFINITION=100;
	public const int INTERFACE_CONSTANT_DECLARATION=101;
	public const int INTERFACE_FILE_DECLARATION=102;
	public const int INTERFACE_SIGNAL_DECLARATION=103;
	public const int INTERFACE_VARIABLE_DECLARATION=104;
	public const int IS=105;
	public const int LABEL=106;
	public const int LABEL_STATEMENT=107;
	public const int LBRACKET=108;
	public const int LE=109;
	public const int LETTER=110;
	public const int LETTER_OR_DIGIT=111;
	public const int LIBRARY=112;
	public const int LINKAGE=113;
	public const int LITERAL=114;
	public const int LOOP=115;
	public const int LOWER_CASE_LETTER=116;
	public const int LPAREN=117;
	public const int LT=118;
	public const int MAP=119;
	public const int MINUS=120;
	public const int MOD=121;
	public const int MUL=122;
	public const int NAME=123;
	public const int NAME_ATTRIBUTE_PART=124;
	public const int NAME_INDEXED_OR_SLICE_PART=125;
	public const int NAME_INDEXED_PART=126;
	public const int NAME_SELECTED_PART=127;
	public const int NAME_SLICE_PART=128;
	public const int NAND=129;
	public const int NEQ=130;
	public const int NEW=131;
	public const int NEXT=132;
	public const int NOR=133;
	public const int NOT=134;
	public const int NULLTOK=135;
	public const int OCTAL_BASED_INTEGER=136;
	public const int OF=137;
	public const int ON=138;
	public const int OPEN=139;
	public const int OR=140;
	public const int OTHERS=141;
	public const int OTHER_SPECIAL_CHARACTER=142;
	public const int OUT=143;
	public const int PACKAGE=144;
	public const int PACKAGE_BODY=145;
	public const int PHYSICAL_LITERAL=146;
	public const int PHYSICAL_TYPE_DEFINITION=147;
	public const int PLUS=148;
	public const int PORT=149;
	public const int PORT_MAP=150;
	public const int POSTPONED=151;
	public const int PROCEDURE=152;
	public const int PROCEDURE_CALL=153;
	public const int PROCESS=154;
	public const int PURE=155;
	public const int QUALIFIED_EXPRESSION=156;
	public const int RANGETOK=157;
	public const int RBRACKET=158;
	public const int RECORD=159;
	public const int RECORD_TYPE_DEFINITION=160;
	public const int REGISTER=161;
	public const int REJECT=162;
	public const int REM=163;
	public const int REPORT=164;
	public const int RESOLVED=165;
	public const int RETURN=166;
	public const int ROL=167;
	public const int ROR=168;
	public const int RPAREN=169;
	public const int SELECT=170;
	public const int SELECTED_SIGNAL_ASSIGNMENT_STATEMENT=171;
	public const int SEMI=172;
	public const int SEVERITY=173;
	public const int SHARED=174;
	public const int SIGNAL=175;
	public const int SIGNAL_ASSIGNMENT_STATEMENT=176;
	public const int SIGNAL_LIST=177;
	public const int SIGNATURE=178;
	public const int SLA=179;
	public const int SLL=180;
	public const int SPACE_CHARACTER=181;
	public const int SPECIAL_CHARACTER=182;
	public const int SRA=183;
	public const int SRL=184;
	public const int STRING_LITERAL=185;
	public const int SUBPROGRAM_BODY=186;
	public const int SUBPROGRAM_DECLARATION=187;
	public const int SUBTYPE=188;
	public const int SUBTYPE_INDICATION=189;
	public const int THEN=190;
	public const int TO=191;
	public const int TRANSPORT=192;
	public const int TYPE=193;
	public const int UNAFFECTED=194;
	public const int UNCONDITIONAL_LOOP=195;
	public const int UNCONSTRAINED_ARRAY_DEFINITION=196;
	public const int UNITS=197;
	public const int UNTIL=198;
	public const int UPPER_CASE_LETTER=199;
	public const int USE=200;
	public const int VARASGN=201;
	public const int VARIABLE=202;
	public const int VARIABLE_ASSIGNMENT_STATEMENT=203;
	public const int WAIT=204;
	public const int WAVEFORM=205;
	public const int WAVEFORM_ELEMENT=206;
	public const int WHEN=207;
	public const int WHILE=208;
	public const int WHITESPACE=209;
	public const int WITH=210;
	public const int XNOR=211;
	public const int XOR=212;

	public MetaClassCreator(ITreeNodeStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public MetaClassCreator(ITreeNodeStream input, RecognizerSharedState state)
		: base(input, state)
	{
		OnCreated();
	}

	public override string[] TokenNames { get { return MetaClassCreator.tokenNames; } }
	public override string GrammarFileName { get { return "D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g"; } }


	    public MetaClassCreator(ITreeNodeStream input, VhdlParserSettings settings,
	            RootDeclarativeRegion rootScope, LibraryDeclarativeRegion libraryScope, VHDL_Library_Manager libraryManager)
	        :base(input, settings, rootScope, libraryScope, libraryManager)
	         {}

	    private bool inElementAssociation = false;


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	private sealed partial class abstract_literal_return : TreeRuleReturnScope<CommonTree>
	{
		public AbstractLiteral value;
		public abstract_literal_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_abstract_literal();
	partial void LeaveRule_abstract_literal();

	// $ANTLR start "abstract_literal"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:54:1: abstract_literal returns [AbstractLiteral value] : ( DEC_BASED_INTEGER | BINANRY_BASED_INTEGER | OCTAL_BASED_INTEGER | HEXA_BASED_INTEGER );
	[GrammarRule("abstract_literal")]
	private MetaClassCreator.abstract_literal_return abstract_literal()
	{
		EnterRule_abstract_literal();
		EnterRule("abstract_literal", 1);
		TraceIn("abstract_literal", 1);
		MetaClassCreator.abstract_literal_return retval = new MetaClassCreator.abstract_literal_return(this);
		retval.Start = (CommonTree)input.LT(1);

		CommonTree DEC_BASED_INTEGER1 = default(CommonTree);
		CommonTree BINANRY_BASED_INTEGER2 = default(CommonTree);
		CommonTree OCTAL_BASED_INTEGER3 = default(CommonTree);
		CommonTree HEXA_BASED_INTEGER4 = default(CommonTree);

		try { DebugEnterRule(GrammarFileName, "abstract_literal");
		DebugLocation(54, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:56:5: ( DEC_BASED_INTEGER | BINANRY_BASED_INTEGER | OCTAL_BASED_INTEGER | HEXA_BASED_INTEGER )
			int alt1=4;
			try { DebugEnterDecision(1, false);
			switch (input.LA(1))
			{
			case DEC_BASED_INTEGER:
				{
				alt1 = 1;
				}
				break;
			case BINANRY_BASED_INTEGER:
				{
				alt1 = 2;
				}
				break;
			case OCTAL_BASED_INTEGER:
				{
				alt1 = 3;
				}
				break;
			case HEXA_BASED_INTEGER:
				{
				alt1 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 1, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(1); }
			switch (alt1)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:56:9: DEC_BASED_INTEGER
				{
				DebugLocation(56, 9);
				DEC_BASED_INTEGER1=(CommonTree)Match(input,DEC_BASED_INTEGER,Follow._DEC_BASED_INTEGER_in_abstract_literal103); 
				DebugLocation(56, 28);
				 retval.value = new DecBasedInteger((DEC_BASED_INTEGER1!=null?DEC_BASED_INTEGER1.Text:null)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:57:7: BINANRY_BASED_INTEGER
				{
				DebugLocation(57, 7);
				BINANRY_BASED_INTEGER2=(CommonTree)Match(input,BINANRY_BASED_INTEGER,Follow._BINANRY_BASED_INTEGER_in_abstract_literal114); 
				DebugLocation(57, 29);
				 retval.value = new BinaryBasedInteger((BINANRY_BASED_INTEGER2!=null?BINANRY_BASED_INTEGER2.Text:null)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:58:9: OCTAL_BASED_INTEGER
				{
				DebugLocation(58, 9);
				OCTAL_BASED_INTEGER3=(CommonTree)Match(input,OCTAL_BASED_INTEGER,Follow._OCTAL_BASED_INTEGER_in_abstract_literal126); 
				DebugLocation(58, 29);
				 retval.value = new OctalBasedInteger((OCTAL_BASED_INTEGER3!=null?OCTAL_BASED_INTEGER3.Text:null)); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:59:9: HEXA_BASED_INTEGER
				{
				DebugLocation(59, 9);
				HEXA_BASED_INTEGER4=(CommonTree)Match(input,HEXA_BASED_INTEGER,Follow._HEXA_BASED_INTEGER_in_abstract_literal138); 
				DebugLocation(59, 28);
				 retval.value = new HexBasedInteger((HEXA_BASED_INTEGER4!=null?HEXA_BASED_INTEGER4.Text:null)); 

				}
				break;

			}
			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("abstract_literal", 1);
			LeaveRule("abstract_literal", 1);
			LeaveRule_abstract_literal();
		}
		DebugLocation(62, 4);
		} finally { DebugExitRule(GrammarFileName, "abstract_literal"); }
		return retval;

	}
	// $ANTLR end "abstract_literal"

	private sealed partial class access_type_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public AccessType value;
		public access_type_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_access_type_definition();
	partial void LeaveRule_access_type_definition();

	// $ANTLR start "access_type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:64:1: access_type_definition[string ident] returns [AccessType value] : ^( ACCESS subtype_indication ) ;
	[GrammarRule("access_type_definition")]
	private MetaClassCreator.access_type_definition_return access_type_definition(string ident)
	{
		EnterRule_access_type_definition();
		EnterRule("access_type_definition", 2);
		TraceIn("access_type_definition", 2);
		MetaClassCreator.access_type_definition_return retval = new MetaClassCreator.access_type_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication subtype_indication5 = default(ISubtypeIndication);

		try { DebugEnterRule(GrammarFileName, "access_type_definition");
		DebugLocation(64, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:66:5: ( ^( ACCESS subtype_indication ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:66:9: ^( ACCESS subtype_indication )
			{
			DebugLocation(66, 9);
			DebugLocation(66, 12);
			Match(input,ACCESS,Follow._ACCESS_in_access_type_definition181); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(66, 19);
			PushFollow(Follow._subtype_indication_in_access_type_definition183);
			subtype_indication5=subtype_indication();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(67, 9);
			 retval.value = new AccessType(ident, subtype_indication5); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("access_type_definition", 2);
			LeaveRule("access_type_definition", 2);
			LeaveRule_access_type_definition();
		}
		DebugLocation(68, 4);
		} finally { DebugExitRule(GrammarFileName, "access_type_definition"); }
		return retval;

	}
	// $ANTLR end "access_type_definition"

	partial void EnterRule_adding_operator();
	partial void LeaveRule_adding_operator();

	// $ANTLR start "adding_operator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:70:1: adding_operator returns [ExpressionType value] : ( PLUS | MINUS | AMPERSAND );
	[GrammarRule("adding_operator")]
	private ExpressionType adding_operator()
	{
		EnterRule_adding_operator();
		EnterRule("adding_operator", 3);
		TraceIn("adding_operator", 3);
		ExpressionType value = default(ExpressionType);


		try { DebugEnterRule(GrammarFileName, "adding_operator");
		DebugLocation(70, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:71:5: ( PLUS | MINUS | AMPERSAND )
			int alt2=3;
			try { DebugEnterDecision(2, false);
			switch (input.LA(1))
			{
			case PLUS:
				{
				alt2 = 1;
				}
				break;
			case MINUS:
				{
				alt2 = 2;
				}
				break;
			case AMPERSAND:
				{
				alt2 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 2, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:71:9: PLUS
				{
				DebugLocation(71, 9);
				Match(input,PLUS,Follow._PLUS_in_adding_operator218); 
				DebugLocation(71, 19);
				 value = ExpressionType.ADD; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:72:9: MINUS
				{
				DebugLocation(72, 9);
				Match(input,MINUS,Follow._MINUS_in_adding_operator235); 
				DebugLocation(72, 19);
				 value = ExpressionType.SUB; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:73:9: AMPERSAND
				{
				DebugLocation(73, 9);
				Match(input,AMPERSAND,Follow._AMPERSAND_in_adding_operator251); 
				DebugLocation(73, 19);
				 value = ExpressionType.CONCAT; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("adding_operator", 3);
			LeaveRule("adding_operator", 3);
			LeaveRule_adding_operator();
		}
		DebugLocation(74, 4);
		} finally { DebugExitRule(GrammarFileName, "adding_operator"); }
		return value;

	}
	// $ANTLR end "adding_operator"

	private sealed partial class aggregate_return : TreeRuleReturnScope<CommonTree>
	{
		public Aggregate value = new Aggregate();
		public aggregate_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_aggregate();
	partial void LeaveRule_aggregate();

	// $ANTLR start "aggregate"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:76:1: aggregate returns [Aggregate value = new Aggregate()] : ^( AGGREGATE ( ( choices )? expression )+ ) ;
	[GrammarRule("aggregate")]
	private MetaClassCreator.aggregate_return aggregate()
	{
		EnterRule_aggregate();
		EnterRule("aggregate", 4);
		TraceIn("aggregate", 4);
		MetaClassCreator.aggregate_return retval = new MetaClassCreator.aggregate_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.expression_return expression6 = default(MetaClassCreator.expression_return);
		List<Choice> choices7 = default(List<Choice>);

		 bool hasChoices; 
		try { DebugEnterRule(GrammarFileName, "aggregate");
		DebugLocation(76, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:79:5: ( ^( AGGREGATE ( ( choices )? expression )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:79:9: ^( AGGREGATE ( ( choices )? expression )+ )
			{
			DebugLocation(79, 9);
			DebugLocation(79, 12);
			Match(input,AGGREGATE,Follow._AGGREGATE_in_aggregate288); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(80, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:80:13: ( ( choices )? expression )+
			int cnt4=0;
			try { DebugEnterSubRule(4);
			while (true)
			{
				int alt4=2;
				try { DebugEnterDecision(4, false);
				int LA4_0 = input.LA(1);

				if ((LA4_0==CHOICES||LA4_0==EXPRESSION))
				{
					alt4 = 1;
				}


				} finally { DebugExitDecision(4); }
				switch (alt4)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:81:17: ( choices )? expression
					{
					DebugLocation(81, 17);

					                    hasChoices = false;
					                    inElementAssociation = true;
					                
					DebugLocation(85, 17);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:85:17: ( choices )?
					int alt3=2;
					try { DebugEnterSubRule(3);
					try { DebugEnterDecision(3, false);
					int LA3_0 = input.LA(1);

					if ((LA3_0==CHOICES))
					{
						alt3 = 1;
					}
					} finally { DebugExitDecision(3); }
					switch (alt3)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:85:19: choices
						{
						DebugLocation(85, 19);
						PushFollow(Follow._choices_in_aggregate340);
						choices7=choices();
						PopFollow();

						DebugLocation(85, 27);
						 hasChoices = true;

						}
						break;

					}
					} finally { DebugExitSubRule(3); }

					DebugLocation(86, 17);
					 inElementAssociation = false; 
					DebugLocation(87, 17);
					PushFollow(Follow._expression_in_aggregate381);
					expression6=expression();
					PopFollow();

					DebugLocation(88, 17);

					                    if (hasChoices) {
					                        retval.value.CreateAssociation((expression6!=null?expression6.value:default(Expression)), choices7);
					                    } else {
					                        retval.value.CreateAssociation((expression6!=null?expression6.value:default(Expression)));
					                    }
					                

					}
					break;

				default:
					if (cnt4 >= 1)
						goto loop4;

					EarlyExitException eee4 = new EarlyExitException( 4, input );
					DebugRecognitionException(eee4);
					throw eee4;
				}
				cnt4++;
			}
			loop4:
				;

			} finally { DebugExitSubRule(4); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("aggregate", 4);
			LeaveRule("aggregate", 4);
			LeaveRule_aggregate();
		}
		DebugLocation(97, 4);
		} finally { DebugExitRule(GrammarFileName, "aggregate"); }
		return retval;

	}
	// $ANTLR end "aggregate"

	private sealed partial class alias_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public Alias value;
		public alias_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_alias_declaration();
	partial void LeaveRule_alias_declaration();

	// $ANTLR start "alias_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:100:1: alias_declaration returns [Alias value] : ^( ALIAS alias_designator ( subtype_indication )? name ( signature )? ) ;
	[GrammarRule("alias_declaration")]
	private MetaClassCreator.alias_declaration_return alias_declaration()
	{
		EnterRule_alias_declaration();
		EnterRule("alias_declaration", 5);
		TraceIn("alias_declaration", 5);
		MetaClassCreator.alias_declaration_return retval = new MetaClassCreator.alias_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.alias_designator_return alias_designator8 = default(MetaClassCreator.alias_designator_return);
		ISubtypeIndication subtype_indication9 = default(ISubtypeIndication);
		MetaClassCreator.name_return name10 = default(MetaClassCreator.name_return);
		Signature signature11 = default(Signature);

		try { DebugEnterRule(GrammarFileName, "alias_declaration");
		DebugLocation(100, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:102:5: ( ^( ALIAS alias_designator ( subtype_indication )? name ( signature )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:102:9: ^( ALIAS alias_designator ( subtype_indication )? name ( signature )? )
			{
			DebugLocation(102, 9);
			DebugLocation(102, 12);
			Match(input,ALIAS,Follow._ALIAS_in_alias_declaration455); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(103, 13);
			PushFollow(Follow._alias_designator_in_alias_declaration469);
			alias_designator8=alias_designator();
			PopFollow();

			DebugLocation(103, 30);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:103:30: ( subtype_indication )?
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, false);
			int LA5_0 = input.LA(1);

			if ((LA5_0==SUBTYPE_INDICATION))
			{
				alt5 = 1;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:103:30: subtype_indication
				{
				DebugLocation(103, 30);
				PushFollow(Follow._subtype_indication_in_alias_declaration471);
				subtype_indication9=subtype_indication();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(5); }

			DebugLocation(103, 50);
			PushFollow(Follow._name_in_alias_declaration474);
			name10=name();
			PopFollow();

			DebugLocation(104, 13);
			 retval.value = new Alias((alias_designator8!=null?alias_designator8.value:default(string)), subtype_indication9, (name10!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(name10.Start),input.TreeAdaptor.GetTokenStopIndex(name10.Start))):null)); 
			DebugLocation(105, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:105:13: ( signature )?
			int alt6=2;
			try { DebugEnterSubRule(6);
			try { DebugEnterDecision(6, false);
			int LA6_0 = input.LA(1);

			if ((LA6_0==SIGNATURE))
			{
				alt6 = 1;
			}
			} finally { DebugExitDecision(6); }
			switch (alt6)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:105:15: signature
				{
				DebugLocation(105, 15);
				PushFollow(Follow._signature_in_alias_declaration504);
				signature11=signature();
				PopFollow();

				DebugLocation(105, 25);
				 retval.value.Signature = signature11; 

				}
				break;

			}
			} finally { DebugExitSubRule(6); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("alias_declaration", 5);
			LeaveRule("alias_declaration", 5);
			LeaveRule_alias_declaration();
		}
		DebugLocation(108, 4);
		} finally { DebugExitRule(GrammarFileName, "alias_declaration"); }
		return retval;

	}
	// $ANTLR end "alias_declaration"

	private sealed partial class alias_designator_return : TreeRuleReturnScope<CommonTree>
	{
		public string value;
		public alias_designator_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_alias_designator();
	partial void LeaveRule_alias_designator();

	// $ANTLR start "alias_designator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:111:1: alias_designator returns [string value] : ( identifier | CHARACTER_LITERAL | STRING_LITERAL );
	[GrammarRule("alias_designator")]
	private MetaClassCreator.alias_designator_return alias_designator()
	{
		EnterRule_alias_designator();
		EnterRule("alias_designator", 6);
		TraceIn("alias_designator", 6);
		MetaClassCreator.alias_designator_return retval = new MetaClassCreator.alias_designator_return(this);
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "alias_designator");
		DebugLocation(111, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:113:5: ( identifier | CHARACTER_LITERAL | STRING_LITERAL )
			int alt7=3;
			try { DebugEnterDecision(7, false);
			switch (input.LA(1))
			{
			case BASIC_IDENTIFIER:
			case EXTENDED_IDENTIFIER:
				{
				alt7 = 1;
				}
				break;
			case CHARACTER_LITERAL:
				{
				alt7 = 2;
				}
				break;
			case STRING_LITERAL:
				{
				alt7 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 7, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(7); }
			switch (alt7)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:113:9: identifier
				{
				DebugLocation(113, 9);
				PushFollow(Follow._identifier_in_alias_designator557);
				identifier();
				PopFollow();


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:114:9: CHARACTER_LITERAL
				{
				DebugLocation(114, 9);
				Match(input,CHARACTER_LITERAL,Follow._CHARACTER_LITERAL_in_alias_designator567); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:115:9: STRING_LITERAL
				{
				DebugLocation(115, 9);
				Match(input,STRING_LITERAL,Follow._STRING_LITERAL_in_alias_designator577); 

				}
				break;

			}
			 retval.value = input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(retval.Start),input.TreeAdaptor.GetTokenStopIndex(retval.Start)); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("alias_designator", 6);
			LeaveRule("alias_designator", 6);
			LeaveRule_alias_designator();
		}
		DebugLocation(116, 4);
		} finally { DebugExitRule(GrammarFileName, "alias_designator"); }
		return retval;

	}
	// $ANTLR end "alias_designator"

	private sealed partial class allocator_return : TreeRuleReturnScope<CommonTree>
	{
		public Expression value;
		public allocator_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_allocator();
	partial void LeaveRule_allocator();

	// $ANTLR start "allocator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:118:1: allocator returns [Expression value] : ^( NEW ( subtype_indication | qualified_expression ) ) ;
	[GrammarRule("allocator")]
	private MetaClassCreator.allocator_return allocator()
	{
		EnterRule_allocator();
		EnterRule("allocator", 7);
		TraceIn("allocator", 7);
		MetaClassCreator.allocator_return retval = new MetaClassCreator.allocator_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication subtype_indication12 = default(ISubtypeIndication);
		MetaClassCreator.qualified_expression_return qualified_expression13 = default(MetaClassCreator.qualified_expression_return);

		try { DebugEnterRule(GrammarFileName, "allocator");
		DebugLocation(118, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:120:5: ( ^( NEW ( subtype_indication | qualified_expression ) ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:120:9: ^( NEW ( subtype_indication | qualified_expression ) )
			{
			DebugLocation(120, 9);
			DebugLocation(120, 12);
			Match(input,NEW,Follow._NEW_in_allocator607); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(121, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:121:13: ( subtype_indication | qualified_expression )
			int alt8=2;
			try { DebugEnterSubRule(8);
			try { DebugEnterDecision(8, false);
			int LA8_0 = input.LA(1);

			if ((LA8_0==SUBTYPE_INDICATION))
			{
				alt8 = 1;
			}
			else if ((LA8_0==QUALIFIED_EXPRESSION))
			{
				alt8 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 8, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:122:21: subtype_indication
				{
				DebugLocation(122, 21);
				PushFollow(Follow._subtype_indication_in_allocator643);
				subtype_indication12=subtype_indication();
				PopFollow();

				DebugLocation(123, 21);
				 retval.value = new SubtypeIndicationAllocator(subtype_indication12); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:124:21: qualified_expression
				{
				DebugLocation(124, 21);
				PushFollow(Follow._qualified_expression_in_allocator687);
				qualified_expression13=qualified_expression();
				PopFollow();

				DebugLocation(125, 21);
				 retval.value = new QualifiedExpressionAllocator((qualified_expression13!=null?qualified_expression13.value:default(QualifiedExpression))); 

				}
				break;

			}
			} finally { DebugExitSubRule(8); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("allocator", 7);
			LeaveRule("allocator", 7);
			LeaveRule_allocator();
		}
		DebugLocation(128, 4);
		} finally { DebugExitRule(GrammarFileName, "allocator"); }
		return retval;

	}
	// $ANTLR end "allocator"

	private sealed partial class architecture_body_return : TreeRuleReturnScope<CommonTree>
	{
		public Architecture value;
		public architecture_body_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_architecture_body();
	partial void LeaveRule_architecture_body();

	// $ANTLR start "architecture_body"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:130:1: architecture_body[List<LibraryUnit> contextItems] returns [Architecture value] : ^( ARCHITECTURE identifier entity= name (d= block_declarative_item )* (s= concurrent_statement )* ( end_identifier )? ) ;
	[GrammarRule("architecture_body")]
	private MetaClassCreator.architecture_body_return architecture_body(List<LibraryUnit> contextItems)
	{
		EnterRule_architecture_body();
		EnterRule("architecture_body", 8);
		TraceIn("architecture_body", 8);
		MetaClassCreator.architecture_body_return retval = new MetaClassCreator.architecture_body_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return entity = default(MetaClassCreator.name_return);
		MetaClassCreator.block_declarative_item_return d = default(MetaClassCreator.block_declarative_item_return);
		MetaClassCreator.concurrent_statement_return s = default(MetaClassCreator.concurrent_statement_return);
		TreeRuleReturnScope<CommonTree> identifier14 = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> end_identifier15 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "architecture_body");
		DebugLocation(130, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:136:5: ( ^( ARCHITECTURE identifier entity= name (d= block_declarative_item )* (s= concurrent_statement )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:136:9: ^( ARCHITECTURE identifier entity= name (d= block_declarative_item )* (s= concurrent_statement )* ( end_identifier )? )
			{
			DebugLocation(136, 9);
			DebugLocation(136, 12);
			Match(input,ARCHITECTURE,Follow._ARCHITECTURE_in_architecture_body770); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(137, 13);
			PushFollow(Follow._identifier_in_architecture_body784);
			identifier14=identifier();
			PopFollow();

			DebugLocation(137, 30);
			PushFollow(Follow._name_in_architecture_body788);
			entity=name();
			PopFollow();

			DebugLocation(138, 13);

			                retval.value = new Architecture((identifier14!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier14.Start),input.TreeAdaptor.GetTokenStopIndex(identifier14.Start))):null), (entity!=null?entity.value:default(TemporaryName)).toEntity(currentScope));
			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			                retval.value.ContextItems.AddRange(contextItems);
			            	contextItems.Clear();
			            
			DebugLocation(145, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:145:13: (d= block_declarative_item )*
			try { DebugEnterSubRule(9);
			while (true)
			{
				int alt9=2;
				try { DebugEnterDecision(9, false);
				int LA9_0 = input.LA(1);

				if ((LA9_0==ALIAS||(LA9_0>=ATTRIBUTE_DECLARATION && LA9_0<=ATTRIBUTE_SPECIFICATION)||LA9_0==COMPONENT||(LA9_0>=CONFIGURATION_SPECIFICATION && LA9_0<=CONSTANT)||LA9_0==DISCONNECT||LA9_0==FILE||LA9_0==FULL_TYPE_DECLARATION||(LA9_0>=GROUP_DECLARATION && LA9_0<=GROUP_TEMPLATE_DECLARATION)||LA9_0==INCOMPLETE_TYPE_DECLARATION||LA9_0==SIGNAL||(LA9_0>=SUBPROGRAM_BODY && LA9_0<=SUBTYPE)||LA9_0==USE||LA9_0==VARIABLE))
				{
					alt9 = 1;
				}


				} finally { DebugExitDecision(9); }
				switch ( alt9 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:145:15: d= block_declarative_item
					{
					DebugLocation(145, 16);
					PushFollow(Follow._block_declarative_item_in_architecture_body820);
					d=block_declarative_item();
					PopFollow();

					DebugLocation(145, 40);
					 retval.value.Declarations.Add((d!=null?d.value:default(IBlockDeclarativeItem))); 

					}
					break;

				default:
					goto loop9;
				}
			}

			loop9:
				;

			} finally { DebugExitSubRule(9); }

			DebugLocation(146, 13);
			 AddListEndComments((d!=null?d.value:default(IBlockDeclarativeItem)), (d!=null?((CommonTree)d.Start):default(CommonTree))); 
			DebugLocation(147, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:147:13: (s= concurrent_statement )*
			try { DebugEnterSubRule(10);
			while (true)
			{
				int alt10=2;
				try { DebugEnterDecision(10, false);
				int LA10_0 = input.LA(1);

				if ((LA10_0==ASSERT||LA10_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT||LA10_0==LABEL_STATEMENT||LA10_0==POSTPONED||(LA10_0>=PROCEDURE_CALL && LA10_0<=PROCESS)||LA10_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
				{
					alt10 = 1;
				}


				} finally { DebugExitDecision(10); }
				switch ( alt10 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:147:15: s= concurrent_statement
					{
					DebugLocation(147, 16);
					PushFollow(Follow._concurrent_statement_in_architecture_body857);
					s=concurrent_statement();
					PopFollow();

					DebugLocation(147, 38);
					 retval.value.Statements.Add((s!=null?s.value:default(ConcurrentStatement))); 

					}
					break;

				default:
					goto loop10;
				}
			}

			loop10:
				;

			} finally { DebugExitSubRule(10); }

			DebugLocation(148, 13);
			 AddListEndComments((s!=null?s.value:default(ConcurrentStatement)), (s!=null?((CommonTree)s.Start):default(CommonTree))); 
			DebugLocation(149, 6);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:149:6: ( end_identifier )?
			int alt11=2;
			try { DebugEnterSubRule(11);
			try { DebugEnterDecision(11, false);
			int LA11_0 = input.LA(1);

			if ((LA11_0==BASIC_IDENTIFIER||LA11_0==EXTENDED_IDENTIFIER))
			{
				alt11 = 1;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:149:6: end_identifier
				{
				DebugLocation(149, 6);
				PushFollow(Follow._end_identifier_in_architecture_body883);
				end_identifier15=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(11); }

			DebugLocation(150, 13);

			            	if(((end_identifier15!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier15.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier15.Start))):null) != null) && (!(end_identifier15!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier15.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier15.Start))):null).Equals(retval.value.Identifier, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier15!=null?((CommonTree)end_identifier15.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_ARCHITECTURE, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier15!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier15.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier15.Start))):null), retval.value.Identifier));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("architecture_body", 8);
			LeaveRule("architecture_body", 8);
			LeaveRule_architecture_body();
		}
		DebugLocation(155, 4);
		} finally { DebugExitRule(GrammarFileName, "architecture_body"); }
		return retval;

	}
	// $ANTLR end "architecture_body"

	private sealed partial class assertion_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public AssertionStatement value;
		public assertion_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_assertion_statement();
	partial void LeaveRule_assertion_statement();

	// $ANTLR start "assertion_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:157:1: assertion_statement[string label] returns [AssertionStatement value] : ^( ASSERT condition= expression ^( REPORT (rep= expression )? ) ^( SEVERITY (sev= expression )? ) ) ;
	[GrammarRule("assertion_statement")]
	private MetaClassCreator.assertion_statement_return assertion_statement(string label)
	{
		EnterRule_assertion_statement();
		EnterRule("assertion_statement", 9);
		TraceIn("assertion_statement", 9);
		MetaClassCreator.assertion_statement_return retval = new MetaClassCreator.assertion_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.expression_return condition = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return rep = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return sev = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "assertion_statement");
		DebugLocation(157, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:159:5: ( ^( ASSERT condition= expression ^( REPORT (rep= expression )? ) ^( SEVERITY (sev= expression )? ) ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:159:9: ^( ASSERT condition= expression ^( REPORT (rep= expression )? ) ^( SEVERITY (sev= expression )? ) )
			{
			DebugLocation(159, 9);
			DebugLocation(159, 12);
			Match(input,ASSERT,Follow._ASSERT_in_assertion_statement939); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(160, 22);
			PushFollow(Follow._expression_in_assertion_statement955);
			condition=expression();
			PopFollow();

			DebugLocation(160, 43);
			 retval.value = new AssertionStatement((condition!=null?condition.value:default(Expression))); 
			DebugLocation(161, 13);
			 retval.value.Label = label; 
			DebugLocation(162, 13);
			DebugLocation(162, 16);
			Match(input,REPORT,Follow._REPORT_in_assertion_statement996); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(162, 26);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:162:26: (rep= expression )?
				int alt12=2;
				try { DebugEnterSubRule(12);
				try { DebugEnterDecision(12, false);
				int LA12_0 = input.LA(1);

				if ((LA12_0==EXPRESSION))
				{
					alt12 = 1;
				}
				} finally { DebugExitDecision(12); }
				switch (alt12)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:162:26: rep= expression
					{
					DebugLocation(162, 26);
					PushFollow(Follow._expression_in_assertion_statement1000);
					rep=expression();
					PopFollow();


					}
					break;

				}
				} finally { DebugExitSubRule(12); }


				Match(input, TokenTypes.Up, null); 
			}

			DebugLocation(162, 43);
			 retval.value.ReportedExpression = (rep!=null?rep.value:default(Expression)); 
			DebugLocation(163, 13);
			DebugLocation(163, 16);
			Match(input,SEVERITY,Follow._SEVERITY_in_assertion_statement1023); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(163, 28);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:163:28: (sev= expression )?
				int alt13=2;
				try { DebugEnterSubRule(13);
				try { DebugEnterDecision(13, false);
				int LA13_0 = input.LA(1);

				if ((LA13_0==EXPRESSION))
				{
					alt13 = 1;
				}
				} finally { DebugExitDecision(13); }
				switch (alt13)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:163:28: sev= expression
					{
					DebugLocation(163, 28);
					PushFollow(Follow._expression_in_assertion_statement1027);
					sev=expression();
					PopFollow();


					}
					break;

				}
				} finally { DebugExitSubRule(13); }


				Match(input, TokenTypes.Up, null); 
			}

			DebugLocation(163, 43);
			 retval.value.Severity = (sev!=null?sev.value:default(Expression)); 

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("assertion_statement", 9);
			LeaveRule("assertion_statement", 9);
			LeaveRule_assertion_statement();
		}
		DebugLocation(165, 4);
		} finally { DebugExitRule(GrammarFileName, "assertion_statement"); }
		return retval;

	}
	// $ANTLR end "assertion_statement"

	private sealed partial class association_element_return : TreeRuleReturnScope<CommonTree>
	{
		public AssociationElement value;
		public association_element_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_association_element();
	partial void LeaveRule_association_element();

	// $ANTLR start "association_element"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:168:1: association_element returns [AssociationElement value] : (formal= name (actual= expression | OPEN ) |actual= expression | OPEN );
	[GrammarRule("association_element")]
	private MetaClassCreator.association_element_return association_element()
	{
		EnterRule_association_element();
		EnterRule("association_element", 10);
		TraceIn("association_element", 10);
		MetaClassCreator.association_element_return retval = new MetaClassCreator.association_element_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return formal = default(MetaClassCreator.name_return);
		MetaClassCreator.expression_return actual = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "association_element");
		DebugLocation(168, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:170:5: (formal= name (actual= expression | OPEN ) |actual= expression | OPEN )
			int alt15=3;
			try { DebugEnterDecision(15, false);
			switch (input.LA(1))
			{
			case NAME:
				{
				alt15 = 1;
				}
				break;
			case EXPRESSION:
				{
				alt15 = 2;
				}
				break;
			case OPEN:
				{
				alt15 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 15, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(15); }
			switch (alt15)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:170:9: formal= name (actual= expression | OPEN )
				{
				DebugLocation(170, 15);
				PushFollow(Follow._name_in_association_element1073);
				formal=name();
				PopFollow();

				DebugLocation(171, 9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:171:9: (actual= expression | OPEN )
				int alt14=2;
				try { DebugEnterSubRule(14);
				try { DebugEnterDecision(14, false);
				int LA14_0 = input.LA(1);

				if ((LA14_0==EXPRESSION))
				{
					alt14 = 1;
				}
				else if ((LA14_0==OPEN))
				{
					alt14 = 2;
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 14, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(14); }
				switch (alt14)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:172:17: actual= expression
					{
					DebugLocation(172, 23);
					PushFollow(Follow._expression_in_association_element1103);
					actual=expression();
					PopFollow();

					DebugLocation(172, 35);
					 retval.value = new AssociationElement((formal!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(formal.Start),input.TreeAdaptor.GetTokenStopIndex(formal.Start))):null), (actual!=null?actual.value:default(Expression))); 

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:173:17: OPEN
					{
					DebugLocation(173, 17);
					Match(input,OPEN,Follow._OPEN_in_association_element1123); 
					DebugLocation(173, 35);
					 retval.value = new AssociationElement((formal!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(formal.Start),input.TreeAdaptor.GetTokenStopIndex(formal.Start))):null), null); 

					}
					break;

				}
				} finally { DebugExitSubRule(14); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:175:9: actual= expression
				{
				DebugLocation(175, 15);
				PushFollow(Follow._expression_in_association_element1160);
				actual=expression();
				PopFollow();

				DebugLocation(175, 27);
				 retval.value = new AssociationElement((actual!=null?actual.value:default(Expression))); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:176:9: OPEN
				{
				DebugLocation(176, 9);
				Match(input,OPEN,Follow._OPEN_in_association_element1172); 
				DebugLocation(176, 27);
				 retval.value = new AssociationElement(null); 

				}
				break;

			}
			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("association_element", 10);
			LeaveRule("association_element", 10);
			LeaveRule_association_element();
		}
		DebugLocation(177, 4);
		} finally { DebugExitRule(GrammarFileName, "association_element"); }
		return retval;

	}
	// $ANTLR end "association_element"

	partial void EnterRule_association_list();
	partial void LeaveRule_association_list();

	// $ANTLR start "association_list"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:179:1: association_list returns [List<AssociationElement> value = new List<AssociationElement>()] : ^( ASSOCIATION_LIST (e= association_element )+ ) ;
	[GrammarRule("association_list")]
	private List<AssociationElement> association_list()
	{
		EnterRule_association_list();
		EnterRule("association_list", 11);
		TraceIn("association_list", 11);
		List<AssociationElement> value =  new List<AssociationElement>();


		MetaClassCreator.association_element_return e = default(MetaClassCreator.association_element_return);

		try { DebugEnterRule(GrammarFileName, "association_list");
		DebugLocation(179, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:180:5: ( ^( ASSOCIATION_LIST (e= association_element )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:180:9: ^( ASSOCIATION_LIST (e= association_element )+ )
			{
			DebugLocation(180, 9);
			DebugLocation(180, 12);
			Match(input,ASSOCIATION_LIST,Follow._ASSOCIATION_LIST_in_association_list1212); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(181, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:181:13: (e= association_element )+
			int cnt16=0;
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=2;
				try { DebugEnterDecision(16, false);
				int LA16_0 = input.LA(1);

				if ((LA16_0==EXPRESSION||LA16_0==NAME||LA16_0==OPEN))
				{
					alt16 = 1;
				}


				} finally { DebugExitDecision(16); }
				switch (alt16)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:181:15: e= association_element
					{
					DebugLocation(181, 16);
					PushFollow(Follow._association_element_in_association_list1231);
					e=association_element();
					PopFollow();

					DebugLocation(181, 37);
					 value.Add((e!=null?e.value:default(AssociationElement))); 

					}
					break;

				default:
					if (cnt16 >= 1)
						goto loop16;

					EarlyExitException eee16 = new EarlyExitException( 16, input );
					DebugRecognitionException(eee16);
					throw eee16;
				}
				cnt16++;
			}
			loop16:
				;

			} finally { DebugExitSubRule(16); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("association_list", 11);
			LeaveRule("association_list", 11);
			LeaveRule_association_list();
		}
		DebugLocation(183, 4);
		} finally { DebugExitRule(GrammarFileName, "association_list"); }
		return value;

	}
	// $ANTLR end "association_list"

	private sealed partial class attribute_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public VHDL.declaration.Attribute value;
		public attribute_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_attribute_declaration();
	partial void LeaveRule_attribute_declaration();

	// $ANTLR start "attribute_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:185:1: attribute_declaration returns [VHDL.declaration.Attribute value] : ^( ATTRIBUTE_DECLARATION identifier type_mark= name ) ;
	[GrammarRule("attribute_declaration")]
	private MetaClassCreator.attribute_declaration_return attribute_declaration()
	{
		EnterRule_attribute_declaration();
		EnterRule("attribute_declaration", 12);
		TraceIn("attribute_declaration", 12);
		MetaClassCreator.attribute_declaration_return retval = new MetaClassCreator.attribute_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return type_mark = default(MetaClassCreator.name_return);
		TreeRuleReturnScope<CommonTree> identifier16 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "attribute_declaration");
		DebugLocation(185, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:187:5: ( ^( ATTRIBUTE_DECLARATION identifier type_mark= name ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:187:9: ^( ATTRIBUTE_DECLARATION identifier type_mark= name )
			{
			DebugLocation(187, 9);
			DebugLocation(187, 12);
			Match(input,ATTRIBUTE_DECLARATION,Follow._ATTRIBUTE_DECLARATION_in_attribute_declaration1276); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(187, 34);
			PushFollow(Follow._identifier_in_attribute_declaration1278);
			identifier16=identifier();
			PopFollow();

			DebugLocation(187, 54);
			PushFollow(Follow._name_in_attribute_declaration1282);
			type_mark=name();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(188, 9);
			 retval.value = new VHDL.declaration.Attribute((identifier16!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier16.Start),input.TreeAdaptor.GetTokenStopIndex(identifier16.Start))):null), (type_mark!=null?type_mark.value:default(TemporaryName)).toTypeMark(currentScope)); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("attribute_declaration", 12);
			LeaveRule("attribute_declaration", 12);
			LeaveRule_attribute_declaration();
		}
		DebugLocation(189, 4);
		} finally { DebugExitRule(GrammarFileName, "attribute_declaration"); }
		return retval;

	}
	// $ANTLR end "attribute_declaration"

	private sealed partial class attribute_designator_return : TreeRuleReturnScope<CommonTree>
	{
		public VHDL.declaration.Attribute value;
		public attribute_designator_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_attribute_designator();
	partial void LeaveRule_attribute_designator();

	// $ANTLR start "attribute_designator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:192:1: attribute_designator returns [VHDL.declaration.Attribute value] : identifier ;
	[GrammarRule("attribute_designator")]
	private MetaClassCreator.attribute_designator_return attribute_designator()
	{
		EnterRule_attribute_designator();
		EnterRule("attribute_designator", 13);
		TraceIn("attribute_designator", 13);
		MetaClassCreator.attribute_designator_return retval = new MetaClassCreator.attribute_designator_return(this);
		retval.Start = (CommonTree)input.LT(1);

		TreeRuleReturnScope<CommonTree> identifier17 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "attribute_designator");
		DebugLocation(192, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:194:5: ( identifier )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:194:9: identifier
			{
			DebugLocation(194, 9);
			PushFollow(Follow._identifier_in_attribute_designator1323);
			identifier17=identifier();
			PopFollow();

			DebugLocation(194, 20);
			 retval.value = new VHDL.declaration.Attribute((identifier17!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier17.Start),input.TreeAdaptor.GetTokenStopIndex(identifier17.Start))):null), UnresolvedType.NO_NAME); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("attribute_designator", 13);
			LeaveRule("attribute_designator", 13);
			LeaveRule_attribute_designator();
		}
		DebugLocation(195, 4);
		} finally { DebugExitRule(GrammarFileName, "attribute_designator"); }
		return retval;

	}
	// $ANTLR end "attribute_designator"

	private sealed partial class attribute_specification_return : TreeRuleReturnScope<CommonTree>
	{
		public VHDL.declaration.AttributeSpecification value;
		public attribute_specification_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_attribute_specification();
	partial void LeaveRule_attribute_specification();

	// $ANTLR start "attribute_specification"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:197:1: attribute_specification returns [VHDL.declaration.AttributeSpecification value] : ^( ATTRIBUTE_SPECIFICATION attribute_designator entity_name_list entity_class expression ) ;
	[GrammarRule("attribute_specification")]
	private MetaClassCreator.attribute_specification_return attribute_specification()
	{
		EnterRule_attribute_specification();
		EnterRule("attribute_specification", 14);
		TraceIn("attribute_specification", 14);
		MetaClassCreator.attribute_specification_return retval = new MetaClassCreator.attribute_specification_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.attribute_designator_return attribute_designator18 = default(MetaClassCreator.attribute_designator_return);
		VHDL.declaration.AttributeSpecification.EntityNameList entity_name_list19 = default(VHDL.declaration.AttributeSpecification.EntityNameList);
		EntityClass entity_class20 = default(EntityClass);
		MetaClassCreator.expression_return expression21 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "attribute_specification");
		DebugLocation(197, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:199:5: ( ^( ATTRIBUTE_SPECIFICATION attribute_designator entity_name_list entity_class expression ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:199:9: ^( ATTRIBUTE_SPECIFICATION attribute_designator entity_name_list entity_class expression )
			{
			DebugLocation(199, 9);
			DebugLocation(199, 12);
			Match(input,ATTRIBUTE_SPECIFICATION,Follow._ATTRIBUTE_SPECIFICATION_in_attribute_specification1355); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(199, 36);
			PushFollow(Follow._attribute_designator_in_attribute_specification1357);
			attribute_designator18=attribute_designator();
			PopFollow();

			DebugLocation(199, 57);
			PushFollow(Follow._entity_name_list_in_attribute_specification1359);
			entity_name_list19=entity_name_list();
			PopFollow();

			DebugLocation(199, 74);
			PushFollow(Follow._entity_class_in_attribute_specification1361);
			entity_class20=entity_class();
			PopFollow();

			DebugLocation(199, 87);
			PushFollow(Follow._expression_in_attribute_specification1363);
			expression21=expression();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(200, 9);

			            retval.value = new VHDL.declaration.AttributeSpecification((attribute_designator18!=null?attribute_designator18.value:default(VHDL.declaration.Attribute)),
			                entity_name_list19, entity_class20, (expression21!=null?expression21.value:default(Expression)));
			        

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("attribute_specification", 14);
			LeaveRule("attribute_specification", 14);
			LeaveRule_attribute_specification();
		}
		DebugLocation(204, 4);
		} finally { DebugExitRule(GrammarFileName, "attribute_specification"); }
		return retval;

	}
	// $ANTLR end "attribute_specification"

	private sealed partial class block_configuration_return : TreeRuleReturnScope<CommonTree>
	{
		public AbstractBlockConfiguration value;
		public block_configuration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_block_configuration();
	partial void LeaveRule_block_configuration();

	// $ANTLR start "block_configuration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:206:1: block_configuration returns [AbstractBlockConfiguration value] : ^( BLOCK_CONFIGURATION block_specification (uc= use_clause )* (ci= configuration_item )* ) ;
	[GrammarRule("block_configuration")]
	private MetaClassCreator.block_configuration_return block_configuration()
	{
		EnterRule_block_configuration();
		EnterRule("block_configuration", 15);
		TraceIn("block_configuration", 15);
		MetaClassCreator.block_configuration_return retval = new MetaClassCreator.block_configuration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.use_clause_return uc = default(MetaClassCreator.use_clause_return);
		ConfigurationItem ci = default(ConfigurationItem);
		MetaClassCreator.block_specification_return block_specification22 = default(MetaClassCreator.block_specification_return);

		try { DebugEnterRule(GrammarFileName, "block_configuration");
		DebugLocation(206, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:208:5: ( ^( BLOCK_CONFIGURATION block_specification (uc= use_clause )* (ci= configuration_item )* ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:208:9: ^( BLOCK_CONFIGURATION block_specification (uc= use_clause )* (ci= configuration_item )* )
			{
			DebugLocation(208, 9);
			DebugLocation(208, 12);
			Match(input,BLOCK_CONFIGURATION,Follow._BLOCK_CONFIGURATION_in_block_configuration1405); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(209, 13);
			PushFollow(Follow._block_specification_in_block_configuration1419);
			block_specification22=block_specification();
			PopFollow();

			DebugLocation(209, 33);
			 retval.value = (block_specification22!=null?block_specification22.value:default(AbstractBlockConfiguration)); 
			DebugLocation(210, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:210:13: (uc= use_clause )*
			try { DebugEnterSubRule(17);
			while (true)
			{
				int alt17=2;
				try { DebugEnterDecision(17, false);
				int LA17_0 = input.LA(1);

				if ((LA17_0==USE))
				{
					alt17 = 1;
				}


				} finally { DebugExitDecision(17); }
				switch ( alt17 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:210:15: uc= use_clause
					{
					DebugLocation(210, 17);
					PushFollow(Follow._use_clause_in_block_configuration1439);
					uc=use_clause();
					PopFollow();

					DebugLocation(210, 29);
					 retval.value.UseClauses.Add((uc!=null?uc.value:default(UseClause))); 

					}
					break;

				default:
					goto loop17;
				}
			}

			loop17:
				;

			} finally { DebugExitSubRule(17); }

			DebugLocation(211, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:211:13: (ci= configuration_item )*
			try { DebugEnterSubRule(18);
			while (true)
			{
				int alt18=2;
				try { DebugEnterDecision(18, false);
				int LA18_0 = input.LA(1);

				if ((LA18_0==BLOCK_CONFIGURATION||LA18_0==COMPONENT_CONFIGURATION))
				{
					alt18 = 1;
				}


				} finally { DebugExitDecision(18); }
				switch ( alt18 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:211:15: ci= configuration_item
					{
					DebugLocation(211, 17);
					PushFollow(Follow._configuration_item_in_block_configuration1462);
					ci=configuration_item();
					PopFollow();

					DebugLocation(211, 37);
					 retval.value.ConfigurationItems.Add(ci); 

					}
					break;

				default:
					goto loop18;
				}
			}

			loop18:
				;

			} finally { DebugExitSubRule(18); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("block_configuration", 15);
			LeaveRule("block_configuration", 15);
			LeaveRule_block_configuration();
		}
		DebugLocation(213, 4);
		} finally { DebugExitRule(GrammarFileName, "block_configuration"); }
		return retval;

	}
	// $ANTLR end "block_configuration"

	private sealed partial class block_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public IBlockDeclarativeItem value;
		public block_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_block_declarative_item();
	partial void LeaveRule_block_declarative_item();

	// $ANTLR start "block_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:215:1: block_declarative_item returns [IBlockDeclarativeItem value] : ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | signal_declaration | variable_declaration | file_declaration | alias_declaration | component_declaration | attribute_specification | attribute_declaration | configuration_specification | disconnection_specification | use_clause | group_template_declaration | group_declaration );
	[GrammarRule("block_declarative_item")]
	private MetaClassCreator.block_declarative_item_return block_declarative_item()
	{
		EnterRule_block_declarative_item();
		EnterRule("block_declarative_item", 16);
		TraceIn("block_declarative_item", 16);
		MetaClassCreator.block_declarative_item_return retval = new MetaClassCreator.block_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.subprogram_declaration_return subprogram_declaration23 = default(MetaClassCreator.subprogram_declaration_return);
		MetaClassCreator.subprogram_body_return subprogram_body24 = default(MetaClassCreator.subprogram_body_return);
		VHDL.type.Type type_declaration25 = default(VHDL.type.Type);
		MetaClassCreator.subtype_declaration_return subtype_declaration26 = default(MetaClassCreator.subtype_declaration_return);
		MetaClassCreator.constant_declaration_return constant_declaration27 = default(MetaClassCreator.constant_declaration_return);
		MetaClassCreator.signal_declaration_return signal_declaration28 = default(MetaClassCreator.signal_declaration_return);
		MetaClassCreator.variable_declaration_return variable_declaration29 = default(MetaClassCreator.variable_declaration_return);
		MetaClassCreator.file_declaration_return file_declaration30 = default(MetaClassCreator.file_declaration_return);
		MetaClassCreator.alias_declaration_return alias_declaration31 = default(MetaClassCreator.alias_declaration_return);
		MetaClassCreator.component_declaration_return component_declaration32 = default(MetaClassCreator.component_declaration_return);
		MetaClassCreator.attribute_specification_return attribute_specification33 = default(MetaClassCreator.attribute_specification_return);
		MetaClassCreator.attribute_declaration_return attribute_declaration34 = default(MetaClassCreator.attribute_declaration_return);
		MetaClassCreator.configuration_specification_return configuration_specification35 = default(MetaClassCreator.configuration_specification_return);
		MetaClassCreator.disconnection_specification_return disconnection_specification36 = default(MetaClassCreator.disconnection_specification_return);
		MetaClassCreator.use_clause_return use_clause37 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.group_template_declaration_return group_template_declaration38 = default(MetaClassCreator.group_template_declaration_return);
		MetaClassCreator.group_declaration_return group_declaration39 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "block_declarative_item");
		DebugLocation(215, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:216:5: ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | signal_declaration | variable_declaration | file_declaration | alias_declaration | component_declaration | attribute_specification | attribute_declaration | configuration_specification | disconnection_specification | use_clause | group_template_declaration | group_declaration )
			int alt19=17;
			try { DebugEnterDecision(19, false);
			switch (input.LA(1))
			{
			case SUBPROGRAM_DECLARATION:
				{
				alt19 = 1;
				}
				break;
			case SUBPROGRAM_BODY:
				{
				alt19 = 2;
				}
				break;
			case FULL_TYPE_DECLARATION:
			case INCOMPLETE_TYPE_DECLARATION:
				{
				alt19 = 3;
				}
				break;
			case SUBTYPE:
				{
				alt19 = 4;
				}
				break;
			case CONSTANT:
				{
				alt19 = 5;
				}
				break;
			case SIGNAL:
				{
				alt19 = 6;
				}
				break;
			case VARIABLE:
				{
				alt19 = 7;
				}
				break;
			case FILE:
				{
				alt19 = 8;
				}
				break;
			case ALIAS:
				{
				alt19 = 9;
				}
				break;
			case COMPONENT:
				{
				alt19 = 10;
				}
				break;
			case ATTRIBUTE_SPECIFICATION:
				{
				alt19 = 11;
				}
				break;
			case ATTRIBUTE_DECLARATION:
				{
				alt19 = 12;
				}
				break;
			case CONFIGURATION_SPECIFICATION:
				{
				alt19 = 13;
				}
				break;
			case DISCONNECT:
				{
				alt19 = 14;
				}
				break;
			case USE:
				{
				alt19 = 15;
				}
				break;
			case GROUP_TEMPLATE_DECLARATION:
				{
				alt19 = 16;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt19 = 17;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 19, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(19); }
			switch (alt19)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:216:9: subprogram_declaration
				{
				DebugLocation(216, 9);
				PushFollow(Follow._subprogram_declaration_in_block_declarative_item1500);
				subprogram_declaration23=subprogram_declaration();
				PopFollow();

				DebugLocation(216, 37);
				 retval.value = (subprogram_declaration23!=null?subprogram_declaration23.value:default(SubprogramDeclaration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:217:9: subprogram_body
				{
				DebugLocation(217, 9);
				PushFollow(Follow._subprogram_body_in_block_declarative_item1517);
				subprogram_body24=subprogram_body();
				PopFollow();

				DebugLocation(217, 37);
				 retval.value = (subprogram_body24!=null?subprogram_body24.value:default(SubprogramBody)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:218:9: type_declaration
				{
				DebugLocation(218, 9);
				PushFollow(Follow._type_declaration_in_block_declarative_item1541);
				type_declaration25=type_declaration();
				PopFollow();

				DebugLocation(218, 37);
				 retval.value = type_declaration25; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:219:9: subtype_declaration
				{
				DebugLocation(219, 9);
				PushFollow(Follow._subtype_declaration_in_block_declarative_item1564);
				subtype_declaration26=subtype_declaration();
				PopFollow();

				DebugLocation(219, 37);
				 retval.value = (subtype_declaration26!=null?subtype_declaration26.value:default(Subtype)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:220:9: constant_declaration
				{
				DebugLocation(220, 9);
				PushFollow(Follow._constant_declaration_in_block_declarative_item1584);
				constant_declaration27=constant_declaration();
				PopFollow();

				DebugLocation(220, 37);
				 retval.value = (constant_declaration27!=null?constant_declaration27.value:default(ConstantDeclaration)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:221:9: signal_declaration
				{
				DebugLocation(221, 9);
				PushFollow(Follow._signal_declaration_in_block_declarative_item1603);
				signal_declaration28=signal_declaration();
				PopFollow();

				DebugLocation(221, 37);
				 retval.value = (signal_declaration28!=null?signal_declaration28.value:default(SignalDeclaration)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:222:9: variable_declaration
				{
				DebugLocation(222, 9);
				PushFollow(Follow._variable_declaration_in_block_declarative_item1624);
				variable_declaration29=variable_declaration();
				PopFollow();

				DebugLocation(222, 37);
				 retval.value = (variable_declaration29!=null?variable_declaration29.value:default(VariableDeclaration)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:223:9: file_declaration
				{
				DebugLocation(223, 9);
				PushFollow(Follow._file_declaration_in_block_declarative_item1643);
				file_declaration30=file_declaration();
				PopFollow();

				DebugLocation(223, 37);
				 retval.value = (file_declaration30!=null?file_declaration30.value:default(FileDeclaration)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:224:9: alias_declaration
				{
				DebugLocation(224, 9);
				PushFollow(Follow._alias_declaration_in_block_declarative_item1666);
				alias_declaration31=alias_declaration();
				PopFollow();

				DebugLocation(224, 37);
				 retval.value = (alias_declaration31!=null?alias_declaration31.value:default(Alias)); 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:225:9: component_declaration
				{
				DebugLocation(225, 9);
				PushFollow(Follow._component_declaration_in_block_declarative_item1688);
				component_declaration32=component_declaration();
				PopFollow();

				DebugLocation(225, 37);
				 retval.value = (component_declaration32!=null?component_declaration32.value:default(Component)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:226:9: attribute_specification
				{
				DebugLocation(226, 9);
				PushFollow(Follow._attribute_specification_in_block_declarative_item1706);
				attribute_specification33=attribute_specification();
				PopFollow();

				DebugLocation(226, 37);
				 retval.value = (attribute_specification33!=null?attribute_specification33.value:default(VHDL.declaration.AttributeSpecification)); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:227:9: attribute_declaration
				{
				DebugLocation(227, 9);
				PushFollow(Follow._attribute_declaration_in_block_declarative_item1722);
				attribute_declaration34=attribute_declaration();
				PopFollow();

				DebugLocation(227, 37);
				 retval.value = (attribute_declaration34!=null?attribute_declaration34.value:default(VHDL.declaration.Attribute)); 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:228:9: configuration_specification
				{
				DebugLocation(228, 9);
				PushFollow(Follow._configuration_specification_in_block_declarative_item1740);
				configuration_specification35=configuration_specification();
				PopFollow();

				DebugLocation(228, 37);
				 retval.value = (configuration_specification35!=null?configuration_specification35.value:default(ConfigurationSpecification)); 

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:229:9: disconnection_specification
				{
				DebugLocation(229, 9);
				PushFollow(Follow._disconnection_specification_in_block_declarative_item1752);
				disconnection_specification36=disconnection_specification();
				PopFollow();

				DebugLocation(229, 37);
				 retval.value = (disconnection_specification36!=null?disconnection_specification36.value:default(DisconnectionSpecification)); 

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:230:9: use_clause
				{
				DebugLocation(230, 9);
				PushFollow(Follow._use_clause_in_block_declarative_item1764);
				use_clause37=use_clause();
				PopFollow();

				DebugLocation(230, 37);
				 retval.value = (use_clause37!=null?use_clause37.value:default(UseClause)); 

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:231:9: group_template_declaration
				{
				DebugLocation(231, 9);
				PushFollow(Follow._group_template_declaration_in_block_declarative_item1793);
				group_template_declaration38=group_template_declaration();
				PopFollow();

				DebugLocation(231, 37);
				 retval.value = (group_template_declaration38!=null?group_template_declaration38.value:default(GroupTemplate)); 

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:232:9: group_declaration
				{
				DebugLocation(232, 9);
				PushFollow(Follow._group_declaration_in_block_declarative_item1806);
				group_declaration39=group_declaration();
				PopFollow();

				DebugLocation(232, 37);
				 retval.value = (group_declaration39!=null?group_declaration39.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("block_declarative_item", 16);
			LeaveRule("block_declarative_item", 16);
			LeaveRule_block_declarative_item();
		}
		DebugLocation(233, 4);
		} finally { DebugExitRule(GrammarFileName, "block_declarative_item"); }
		return retval;

	}
	// $ANTLR end "block_declarative_item"

	private sealed partial class block_specification_return : TreeRuleReturnScope<CommonTree>
	{
		public AbstractBlockConfiguration value;
		public block_specification_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_block_specification();
	partial void LeaveRule_block_specification();

	// $ANTLR start "block_specification"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:236:1: block_specification returns [AbstractBlockConfiguration value] : name ;
	[GrammarRule("block_specification")]
	private MetaClassCreator.block_specification_return block_specification()
	{
		EnterRule_block_specification();
		EnterRule("block_specification", 17);
		TraceIn("block_specification", 17);
		MetaClassCreator.block_specification_return retval = new MetaClassCreator.block_specification_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return name40 = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "block_specification");
		DebugLocation(236, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:238:5: ( name )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:238:7: name
			{
			DebugLocation(238, 7);
			PushFollow(Follow._name_in_block_specification1845);
			name40=name();
			PopFollow();

			DebugLocation(239, 9);

			            Architecture dummy = new Architecture((name40!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(name40.Start),input.TreeAdaptor.GetTokenStopIndex(name40.Start))):null), new Entity("##dummy##"));
			            retval.value = new ArchitectureConfiguration(dummy);
			        

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("block_specification", 17);
			LeaveRule("block_specification", 17);
			LeaveRule_block_specification();
		}
		DebugLocation(243, 4);
		} finally { DebugExitRule(GrammarFileName, "block_specification"); }
		return retval;

	}
	// $ANTLR end "block_specification"

	partial void EnterRule_block_statement();
	partial void LeaveRule_block_statement();

	// $ANTLR start "block_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:246:1: block_statement[String label] returns [BlockStatement value] : ^( BLOCK_STATEMENT (guard_expression= expression )? ( IS )? (gc= generic_clause )? (gma= generic_map_aspect )? (pc= port_clause )? (pma= port_map_aspect )? (bdi= block_declarative_item )* (cs= concurrent_statement )* ( end_identifier )? ) ;
	[GrammarRule("block_statement")]
	private BlockStatement block_statement(String label)
	{
		EnterRule_block_statement();
		EnterRule("block_statement", 18);
		TraceIn("block_statement", 18);
		BlockStatement value = default(BlockStatement);


		MetaClassCreator.expression_return guard_expression = default(MetaClassCreator.expression_return);
		List<IVhdlObjectProvider> gc = default(List<IVhdlObjectProvider>);
		List<AssociationElement> gma = default(List<AssociationElement>);
		List<IVhdlObjectProvider> pc = default(List<IVhdlObjectProvider>);
		List<AssociationElement> pma = default(List<AssociationElement>);
		MetaClassCreator.block_declarative_item_return bdi = default(MetaClassCreator.block_declarative_item_return);
		MetaClassCreator.concurrent_statement_return cs = default(MetaClassCreator.concurrent_statement_return);
		TreeRuleReturnScope<CommonTree> end_identifier41 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "block_statement");
		DebugLocation(246, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:251:5: ( ^( BLOCK_STATEMENT (guard_expression= expression )? ( IS )? (gc= generic_clause )? (gma= generic_map_aspect )? (pc= port_clause )? (pma= port_map_aspect )? (bdi= block_declarative_item )* (cs= concurrent_statement )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:251:9: ^( BLOCK_STATEMENT (guard_expression= expression )? ( IS )? (gc= generic_clause )? (gma= generic_map_aspect )? (pc= port_clause )? (pma= port_map_aspect )? (bdi= block_declarative_item )* (cs= concurrent_statement )* ( end_identifier )? )
			{
			DebugLocation(251, 9);
			DebugLocation(251, 12);
			Match(input,BLOCK_STATEMENT,Follow._BLOCK_STATEMENT_in_block_statement1892); 

			DebugLocation(252, 13);

			                value = new BlockStatement(label);
			                value.Parent = oldScope;
			                currentScope = value;
			            

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(257, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:257:13: (guard_expression= expression )?
				int alt20=2;
				try { DebugEnterSubRule(20);
				try { DebugEnterDecision(20, false);
				int LA20_0 = input.LA(1);

				if ((LA20_0==EXPRESSION))
				{
					alt20 = 1;
				}
				} finally { DebugExitDecision(20); }
				switch (alt20)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:257:15: guard_expression= expression
					{
					DebugLocation(257, 31);
					PushFollow(Follow._expression_in_block_statement1924);
					guard_expression=expression();
					PopFollow();

					DebugLocation(257, 43);
					 value.GuardExpression = (guard_expression!=null?guard_expression.value:default(Expression)); 

					}
					break;

				}
				} finally { DebugExitSubRule(20); }

				DebugLocation(258, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:258:13: ( IS )?
				int alt21=2;
				try { DebugEnterSubRule(21);
				try { DebugEnterDecision(21, false);
				int LA21_0 = input.LA(1);

				if ((LA21_0==IS))
				{
					alt21 = 1;
				}
				} finally { DebugExitDecision(21); }
				switch (alt21)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:259:17: IS
					{
					DebugLocation(259, 17);
					Match(input,IS,Follow._IS_in_block_statement1961); 
					DebugLocation(260, 17);

					                    Annotations.putAnnotation(value,
					                        new OptionalIsFormat(true));
					                

					}
					break;

				}
				} finally { DebugExitSubRule(21); }

				DebugLocation(265, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:265:13: (gc= generic_clause )?
				int alt22=2;
				try { DebugEnterSubRule(22);
				try { DebugEnterDecision(22, false);
				int LA22_0 = input.LA(1);

				if ((LA22_0==GENERIC))
				{
					alt22 = 1;
				}
				} finally { DebugExitDecision(22); }
				switch (alt22)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:265:15: gc= generic_clause
					{
					DebugLocation(265, 17);
					PushFollow(Follow._generic_clause_in_block_statement2012);
					gc=generic_clause();
					PopFollow();

					DebugLocation(265, 33);
					 AddRange(value.Generic, gc); 

					}
					break;

				}
				} finally { DebugExitSubRule(22); }

				DebugLocation(266, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:266:13: (gma= generic_map_aspect )?
				int alt23=2;
				try { DebugEnterSubRule(23);
				try { DebugEnterDecision(23, false);
				int LA23_0 = input.LA(1);

				if ((LA23_0==GENERIC_MAP))
				{
					alt23 = 1;
				}
				} finally { DebugExitDecision(23); }
				switch (alt23)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:266:15: gma= generic_map_aspect
					{
					DebugLocation(266, 18);
					PushFollow(Follow._generic_map_aspect_in_block_statement2035);
					gma=generic_map_aspect();
					PopFollow();

					DebugLocation(266, 38);
					 AddRange(value.GenericMap, gma); 

					}
					break;

				}
				} finally { DebugExitSubRule(23); }

				DebugLocation(267, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:267:13: (pc= port_clause )?
				int alt24=2;
				try { DebugEnterSubRule(24);
				try { DebugEnterDecision(24, false);
				int LA24_0 = input.LA(1);

				if ((LA24_0==PORT))
				{
					alt24 = 1;
				}
				} finally { DebugExitDecision(24); }
				switch (alt24)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:267:15: pc= port_clause
					{
					DebugLocation(267, 17);
					PushFollow(Follow._port_clause_in_block_statement2058);
					pc=port_clause();
					PopFollow();

					DebugLocation(267, 30);
					 AddRange(value.Port, pc); 

					}
					break;

				}
				} finally { DebugExitSubRule(24); }

				DebugLocation(268, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:268:13: (pma= port_map_aspect )?
				int alt25=2;
				try { DebugEnterSubRule(25);
				try { DebugEnterDecision(25, false);
				int LA25_0 = input.LA(1);

				if ((LA25_0==PORT_MAP))
				{
					alt25 = 1;
				}
				} finally { DebugExitDecision(25); }
				switch (alt25)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:268:15: pma= port_map_aspect
					{
					DebugLocation(268, 18);
					PushFollow(Follow._port_map_aspect_in_block_statement2081);
					pma=port_map_aspect();
					PopFollow();

					DebugLocation(268, 35);
					 AddRange(value.PortMap, pma); 

					}
					break;

				}
				} finally { DebugExitSubRule(25); }

				DebugLocation(269, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:269:13: (bdi= block_declarative_item )*
				try { DebugEnterSubRule(26);
				while (true)
				{
					int alt26=2;
					try { DebugEnterDecision(26, false);
					int LA26_0 = input.LA(1);

					if ((LA26_0==ALIAS||(LA26_0>=ATTRIBUTE_DECLARATION && LA26_0<=ATTRIBUTE_SPECIFICATION)||LA26_0==COMPONENT||(LA26_0>=CONFIGURATION_SPECIFICATION && LA26_0<=CONSTANT)||LA26_0==DISCONNECT||LA26_0==FILE||LA26_0==FULL_TYPE_DECLARATION||(LA26_0>=GROUP_DECLARATION && LA26_0<=GROUP_TEMPLATE_DECLARATION)||LA26_0==INCOMPLETE_TYPE_DECLARATION||LA26_0==SIGNAL||(LA26_0>=SUBPROGRAM_BODY && LA26_0<=SUBTYPE)||LA26_0==USE||LA26_0==VARIABLE))
					{
						alt26 = 1;
					}


					} finally { DebugExitDecision(26); }
					switch ( alt26 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:269:15: bdi= block_declarative_item
						{
						DebugLocation(269, 18);
						PushFollow(Follow._block_declarative_item_in_block_statement2104);
						bdi=block_declarative_item();
						PopFollow();

						DebugLocation(269, 42);
						 value.Declarations.Add((bdi!=null?bdi.value:default(IBlockDeclarativeItem))); 

						}
						break;

					default:
						goto loop26;
					}
				}

				loop26:
					;

				} finally { DebugExitSubRule(26); }

				DebugLocation(270, 13);
				 AddListEndComments((bdi!=null?bdi.value:default(IBlockDeclarativeItem)), (bdi!=null?((CommonTree)bdi.Start):default(CommonTree))); 
				DebugLocation(271, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:271:13: (cs= concurrent_statement )*
				try { DebugEnterSubRule(27);
				while (true)
				{
					int alt27=2;
					try { DebugEnterDecision(27, false);
					int LA27_0 = input.LA(1);

					if ((LA27_0==ASSERT||LA27_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT||LA27_0==LABEL_STATEMENT||LA27_0==POSTPONED||(LA27_0>=PROCEDURE_CALL && LA27_0<=PROCESS)||LA27_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
					{
						alt27 = 1;
					}


					} finally { DebugExitDecision(27); }
					switch ( alt27 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:271:15: cs= concurrent_statement
						{
						DebugLocation(271, 17);
						PushFollow(Follow._concurrent_statement_in_block_statement2141);
						cs=concurrent_statement();
						PopFollow();

						DebugLocation(271, 39);
						 value.Statements.Add((cs!=null?cs.value:default(ConcurrentStatement))); 

						}
						break;

					default:
						goto loop27;
					}
				}

				loop27:
					;

				} finally { DebugExitSubRule(27); }

				DebugLocation(272, 13);
				 AddListEndComments((cs!=null?cs.value:default(ConcurrentStatement)), (cs!=null?((CommonTree)cs.Start):default(CommonTree))); 
				DebugLocation(273, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:273:13: ( end_identifier )?
				int alt28=2;
				try { DebugEnterSubRule(28);
				try { DebugEnterDecision(28, false);
				int LA28_0 = input.LA(1);

				if ((LA28_0==BASIC_IDENTIFIER||LA28_0==EXTENDED_IDENTIFIER))
				{
					alt28 = 1;
				}
				} finally { DebugExitDecision(28); }
				switch (alt28)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:273:13: end_identifier
					{
					DebugLocation(273, 13);
					PushFollow(Follow._end_identifier_in_block_statement2174);
					end_identifier41=end_identifier();
					PopFollow();


					}
					break;

				}
				} finally { DebugExitSubRule(28); }

				DebugLocation(274, 13);

				            	if(((end_identifier41!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier41.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier41.Start))):null) != null) && (!(end_identifier41!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier41.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier41.Start))):null).Equals(label, StringComparison.InvariantCultureIgnoreCase)))
				            		resolveError((end_identifier41!=null?((CommonTree)end_identifier41.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_OTHER, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier41!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier41.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier41.Start))):null), label));
				            

				Match(input, TokenTypes.Up, null); 
			}


			}


			    currentScope = oldScope;

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("block_statement", 18);
			LeaveRule("block_statement", 18);
			LeaveRule_block_statement();
		}
		DebugLocation(279, 4);
		} finally { DebugExitRule(GrammarFileName, "block_statement"); }
		return value;

	}
	// $ANTLR end "block_statement"

	private sealed partial class case_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public CaseStatement value;
		public case_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_case_statement();
	partial void LeaveRule_case_statement();

	// $ANTLR start "case_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:281:1: case_statement[String label] returns [CaseStatement value] : ^( CASE expression ( choices ( sequential_statement )* )+ ( end_identifier )? ) ;
	[GrammarRule("case_statement")]
	private MetaClassCreator.case_statement_return case_statement(String label)
	{
		EnterRule_case_statement();
		EnterRule("case_statement", 19);
		TraceIn("case_statement", 19);
		MetaClassCreator.case_statement_return retval = new MetaClassCreator.case_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.expression_return expression42 = default(MetaClassCreator.expression_return);
		List<Choice> choices43 = default(List<Choice>);
		MetaClassCreator.sequential_statement_return sequential_statement44 = default(MetaClassCreator.sequential_statement_return);
		TreeRuleReturnScope<CommonTree> end_identifier45 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "case_statement");
		DebugLocation(281, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:283:5: ( ^( CASE expression ( choices ( sequential_statement )* )+ ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:283:9: ^( CASE expression ( choices ( sequential_statement )* )+ ( end_identifier )? )
			{
			DebugLocation(283, 9);
			DebugLocation(283, 12);
			Match(input,CASE,Follow._CASE_in_case_statement2230); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(284, 13);
			PushFollow(Follow._expression_in_case_statement2245);
			expression42=expression();
			PopFollow();

			DebugLocation(284, 24);
			 retval.value = new CaseStatement((expression42!=null?expression42.value:default(Expression))); 
			DebugLocation(285, 13);
			 retval.value.Label = label; 
			DebugLocation(286, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:286:13: ( choices ( sequential_statement )* )+
			int cnt30=0;
			try { DebugEnterSubRule(30);
			while (true)
			{
				int alt30=2;
				try { DebugEnterDecision(30, false);
				int LA30_0 = input.LA(1);

				if ((LA30_0==CHOICES))
				{
					alt30 = 1;
				}


				} finally { DebugExitDecision(30); }
				switch (alt30)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:287:17: choices ( sequential_statement )*
					{
					DebugLocation(287, 17);
					PushFollow(Follow._choices_in_case_statement2293);
					choices43=choices();
					PopFollow();

					DebugLocation(288, 17);
					 CaseStatement.Alternative alt = retval.value.createAlternative(choices43); 
					DebugLocation(289, 17);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:289:17: ( sequential_statement )*
					try { DebugEnterSubRule(29);
					while (true)
					{
						int alt29=2;
						try { DebugEnterDecision(29, false);
						int LA29_0 = input.LA(1);

						if ((LA29_0==ASSERT||LA29_0==CASE||LA29_0==EXIT||LA29_0==IF||LA29_0==LABEL_STATEMENT||LA29_0==LOOP||LA29_0==NEXT||LA29_0==NULLTOK||LA29_0==PROCEDURE_CALL||LA29_0==REPORT||LA29_0==RETURN||LA29_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA29_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA29_0<=WAIT)))
						{
							alt29 = 1;
						}


						} finally { DebugExitDecision(29); }
						switch ( alt29 )
						{
						case 1:
							DebugEnterAlt(1);
							// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:289:19: sequential_statement
							{
							DebugLocation(289, 19);
							PushFollow(Follow._sequential_statement_in_case_statement2332);
							sequential_statement44=sequential_statement();
							PopFollow();

							DebugLocation(289, 40);
							 alt.Statements.Add((sequential_statement44!=null?sequential_statement44.value:default(SequentialStatement))); 

							}
							break;

						default:
							goto loop29;
						}
					}

					loop29:
						;

					} finally { DebugExitSubRule(29); }


					}
					break;

				default:
					if (cnt30 >= 1)
						goto loop30;

					EarlyExitException eee30 = new EarlyExitException( 30, input );
					DebugRecognitionException(eee30);
					throw eee30;
				}
				cnt30++;
			}
			loop30:
				;

			} finally { DebugExitSubRule(30); }

			DebugLocation(291, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:291:13: ( end_identifier )?
			int alt31=2;
			try { DebugEnterSubRule(31);
			try { DebugEnterDecision(31, false);
			int LA31_0 = input.LA(1);

			if ((LA31_0==BASIC_IDENTIFIER||LA31_0==EXTENDED_IDENTIFIER))
			{
				alt31 = 1;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:291:13: end_identifier
				{
				DebugLocation(291, 13);
				PushFollow(Follow._end_identifier_in_case_statement2366);
				end_identifier45=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(31); }

			DebugLocation(292, 13);

			            	if(((end_identifier45!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier45.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier45.Start))):null) != null) && (!(end_identifier45!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier45.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier45.Start))):null).Equals(label, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier45!=null?((CommonTree)end_identifier45.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_CASE, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier45!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier45.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier45.Start))):null), label));
			            

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("case_statement", 19);
			LeaveRule("case_statement", 19);
			LeaveRule_case_statement();
		}
		DebugLocation(297, 4);
		} finally { DebugExitRule(GrammarFileName, "case_statement"); }
		return retval;

	}
	// $ANTLR end "case_statement"

	partial void EnterRule_choice();
	partial void LeaveRule_choice();

	// $ANTLR start "choice"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:299:1: choice returns [Choice value] : ( discrete_range | expression | OTHERS );
	[GrammarRule("choice")]
	private Choice choice()
	{
		EnterRule_choice();
		EnterRule("choice", 20);
		TraceIn("choice", 20);
		Choice value = default(Choice);


		DiscreteRange discrete_range46 = default(DiscreteRange);
		MetaClassCreator.expression_return expression47 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "choice");
		DebugLocation(299, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:300:5: ( discrete_range | expression | OTHERS )
			int alt32=3;
			try { DebugEnterDecision(32, false);
			switch (input.LA(1))
			{
			case DISCRETE_RANGE:
			case DOWNTO:
			case TO:
				{
				alt32 = 1;
				}
				break;
			case EXPRESSION:
				{
				alt32 = 2;
				}
				break;
			case OTHERS:
				{
				alt32 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 32, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:300:9: discrete_range
				{
				DebugLocation(300, 9);
				PushFollow(Follow._discrete_range_in_choice2414);
				discrete_range46=discrete_range();
				PopFollow();

				DebugLocation(300, 24);
				 value = discrete_range46; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:301:9: expression
				{
				DebugLocation(301, 9);
				PushFollow(Follow._expression_in_choice2426);
				expression47=expression();
				PopFollow();

				DebugLocation(301, 24);
				 value = (expression47!=null?expression47.value:default(Expression)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:302:9: OTHERS
				{
				DebugLocation(302, 9);
				Match(input,OTHERS,Follow._OTHERS_in_choice2442); 
				DebugLocation(302, 24);
				 value = Choices.OTHERS; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("choice", 20);
			LeaveRule("choice", 20);
			LeaveRule_choice();
		}
		DebugLocation(303, 4);
		} finally { DebugExitRule(GrammarFileName, "choice"); }
		return value;

	}
	// $ANTLR end "choice"

	partial void EnterRule_choices();
	partial void LeaveRule_choices();

	// $ANTLR start "choices"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:305:1: choices returns [List<Choice> value = new List<Choice>()] : ^( CHOICES ( choice )+ ) ;
	[GrammarRule("choices")]
	private List<Choice> choices()
	{
		EnterRule_choices();
		EnterRule("choices", 21);
		TraceIn("choices", 21);
		List<Choice> value =  new List<Choice>();


		Choice choice48 = default(Choice);

		try { DebugEnterRule(GrammarFileName, "choices");
		DebugLocation(305, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:306:5: ( ^( CHOICES ( choice )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:306:9: ^( CHOICES ( choice )+ )
			{
			DebugLocation(306, 9);
			DebugLocation(306, 12);
			Match(input,CHOICES,Follow._CHOICES_in_choices2477); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(306, 20);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:306:20: ( choice )+
			int cnt33=0;
			try { DebugEnterSubRule(33);
			while (true)
			{
				int alt33=2;
				try { DebugEnterDecision(33, false);
				int LA33_0 = input.LA(1);

				if ((LA33_0==DISCRETE_RANGE||LA33_0==DOWNTO||LA33_0==EXPRESSION||LA33_0==OTHERS||LA33_0==TO))
				{
					alt33 = 1;
				}


				} finally { DebugExitDecision(33); }
				switch (alt33)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:306:22: choice
					{
					DebugLocation(306, 22);
					PushFollow(Follow._choice_in_choices2481);
					choice48=choice();
					PopFollow();

					DebugLocation(306, 29);
					 value.Add(choice48); 

					}
					break;

				default:
					if (cnt33 >= 1)
						goto loop33;

					EarlyExitException eee33 = new EarlyExitException( 33, input );
					DebugRecognitionException(eee33);
					throw eee33;
				}
				cnt33++;
			}
			loop33:
				;

			} finally { DebugExitSubRule(33); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("choices", 21);
			LeaveRule("choices", 21);
			LeaveRule_choices();
		}
		DebugLocation(307, 4);
		} finally { DebugExitRule(GrammarFileName, "choices"); }
		return value;

	}
	// $ANTLR end "choices"

	private sealed partial class component_configuration_return : TreeRuleReturnScope<CommonTree>
	{
		public ComponentConfiguration value;
		public component_configuration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_component_configuration();
	partial void LeaveRule_component_configuration();

	// $ANTLR start "component_configuration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:309:1: component_configuration returns [ComponentConfiguration value] : ^( COMPONENT_CONFIGURATION component_specification (ea= entity_aspect )? (gma= generic_map_aspect )? (pma= port_map_aspect )? (bc= block_configuration )? ) ;
	[GrammarRule("component_configuration")]
	private MetaClassCreator.component_configuration_return component_configuration()
	{
		EnterRule_component_configuration();
		EnterRule("component_configuration", 22);
		TraceIn("component_configuration", 22);
		MetaClassCreator.component_configuration_return retval = new MetaClassCreator.component_configuration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		EntityAspect ea = default(EntityAspect);
		List<AssociationElement> gma = default(List<AssociationElement>);
		List<AssociationElement> pma = default(List<AssociationElement>);
		MetaClassCreator.block_configuration_return bc = default(MetaClassCreator.block_configuration_return);
		MetaClassCreator.component_specification_return component_specification49 = default(MetaClassCreator.component_specification_return);

		try { DebugEnterRule(GrammarFileName, "component_configuration");
		DebugLocation(309, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:311:5: ( ^( COMPONENT_CONFIGURATION component_specification (ea= entity_aspect )? (gma= generic_map_aspect )? (pma= port_map_aspect )? (bc= block_configuration )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:311:9: ^( COMPONENT_CONFIGURATION component_specification (ea= entity_aspect )? (gma= generic_map_aspect )? (pma= port_map_aspect )? (bc= block_configuration )? )
			{
			DebugLocation(311, 9);
			DebugLocation(311, 12);
			Match(input,COMPONENT_CONFIGURATION,Follow._COMPONENT_CONFIGURATION_in_component_configuration2518); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(312, 13);
			PushFollow(Follow._component_specification_in_component_configuration2532);
			component_specification49=component_specification();
			PopFollow();

			DebugLocation(313, 13);
			 retval.value = new ComponentConfiguration((component_specification49!=null?component_specification49.value:default(ComponentSpecification))); 
			DebugLocation(314, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:314:13: (ea= entity_aspect )?
			int alt34=2;
			try { DebugEnterSubRule(34);
			try { DebugEnterDecision(34, false);
			int LA34_0 = input.LA(1);

			if ((LA34_0==CONFIGURATION||LA34_0==ENTITY||LA34_0==OPEN))
			{
				alt34 = 1;
			}
			} finally { DebugExitDecision(34); }
			switch (alt34)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:314:15: ea= entity_aspect
				{
				DebugLocation(314, 17);
				PushFollow(Follow._entity_aspect_in_component_configuration2564);
				ea=entity_aspect();
				PopFollow();

				DebugLocation(314, 32);
				 retval.value.EntityAspect = ea; 

				}
				break;

			}
			} finally { DebugExitSubRule(34); }

			DebugLocation(315, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:315:13: (gma= generic_map_aspect )?
			int alt35=2;
			try { DebugEnterSubRule(35);
			try { DebugEnterDecision(35, false);
			int LA35_0 = input.LA(1);

			if ((LA35_0==GENERIC_MAP))
			{
				alt35 = 1;
			}
			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:315:15: gma= generic_map_aspect
				{
				DebugLocation(315, 18);
				PushFollow(Follow._generic_map_aspect_in_component_configuration2587);
				gma=generic_map_aspect();
				PopFollow();

				DebugLocation(315, 38);
				 AddRange(retval.value.GenericMap, gma); 

				}
				break;

			}
			} finally { DebugExitSubRule(35); }

			DebugLocation(316, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:316:13: (pma= port_map_aspect )?
			int alt36=2;
			try { DebugEnterSubRule(36);
			try { DebugEnterDecision(36, false);
			int LA36_0 = input.LA(1);

			if ((LA36_0==PORT_MAP))
			{
				alt36 = 1;
			}
			} finally { DebugExitDecision(36); }
			switch (alt36)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:316:15: pma= port_map_aspect
				{
				DebugLocation(316, 18);
				PushFollow(Follow._port_map_aspect_in_component_configuration2610);
				pma=port_map_aspect();
				PopFollow();

				DebugLocation(316, 35);
				 AddRange(retval.value.PortMap, pma); 

				}
				break;

			}
			} finally { DebugExitSubRule(36); }

			DebugLocation(317, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:317:13: (bc= block_configuration )?
			int alt37=2;
			try { DebugEnterSubRule(37);
			try { DebugEnterDecision(37, false);
			int LA37_0 = input.LA(1);

			if ((LA37_0==BLOCK_CONFIGURATION))
			{
				alt37 = 1;
			}
			} finally { DebugExitDecision(37); }
			switch (alt37)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:317:15: bc= block_configuration
				{
				DebugLocation(317, 17);
				PushFollow(Follow._block_configuration_in_component_configuration2633);
				bc=block_configuration();
				PopFollow();

				DebugLocation(317, 38);
				 retval.value.BlockConfiguration = (bc!=null?bc.value:default(AbstractBlockConfiguration)); 

				}
				break;

			}
			} finally { DebugExitSubRule(37); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("component_configuration", 22);
			LeaveRule("component_configuration", 22);
			LeaveRule_component_configuration();
		}
		DebugLocation(319, 4);
		} finally { DebugExitRule(GrammarFileName, "component_configuration"); }
		return retval;

	}
	// $ANTLR end "component_configuration"

	private sealed partial class component_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public Component value;
		public component_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_component_declaration();
	partial void LeaveRule_component_declaration();

	// $ANTLR start "component_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:321:1: component_declaration returns [Component value] : ^( COMPONENT identifier ( IS )? (gc= generic_clause )? (pc= port_clause )? ( end_identifier )? ) ;
	[GrammarRule("component_declaration")]
	private MetaClassCreator.component_declaration_return component_declaration()
	{
		EnterRule_component_declaration();
		EnterRule("component_declaration", 23);
		TraceIn("component_declaration", 23);
		MetaClassCreator.component_declaration_return retval = new MetaClassCreator.component_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<IVhdlObjectProvider> gc = default(List<IVhdlObjectProvider>);
		List<IVhdlObjectProvider> pc = default(List<IVhdlObjectProvider>);
		TreeRuleReturnScope<CommonTree> identifier50 = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> end_identifier51 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "component_declaration");
		DebugLocation(321, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:327:5: ( ^( COMPONENT identifier ( IS )? (gc= generic_clause )? (pc= port_clause )? ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:327:9: ^( COMPONENT identifier ( IS )? (gc= generic_clause )? (pc= port_clause )? ( end_identifier )? )
			{
			DebugLocation(327, 9);
			DebugLocation(327, 12);
			Match(input,COMPONENT,Follow._COMPONENT_in_component_declaration2683); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(328, 13);
			PushFollow(Follow._identifier_in_component_declaration2698);
			identifier50=identifier();
			PopFollow();

			DebugLocation(329, 13);

			                retval.value = new Component((identifier50!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier50.Start),input.TreeAdaptor.GetTokenStopIndex(identifier50.Start))):null));
			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			            
			DebugLocation(334, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:334:13: ( IS )?
			int alt38=2;
			try { DebugEnterSubRule(38);
			try { DebugEnterDecision(38, false);
			int LA38_0 = input.LA(1);

			if ((LA38_0==IS))
			{
				alt38 = 1;
			}
			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:335:17: IS
				{
				DebugLocation(335, 17);
				Match(input,IS,Follow._IS_in_component_declaration2744); 
				DebugLocation(336, 17);

				                    Annotations.putAnnotation(retval.value, 
				                        new OptionalIsFormat(true));
				                

				}
				break;

			}
			} finally { DebugExitSubRule(38); }

			DebugLocation(341, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:341:13: (gc= generic_clause )?
			int alt39=2;
			try { DebugEnterSubRule(39);
			try { DebugEnterDecision(39, false);
			int LA39_0 = input.LA(1);

			if ((LA39_0==GENERIC))
			{
				alt39 = 1;
			}
			} finally { DebugExitDecision(39); }
			switch (alt39)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:341:15: gc= generic_clause
				{
				DebugLocation(341, 17);
				PushFollow(Follow._generic_clause_in_component_declaration2795);
				gc=generic_clause();
				PopFollow();

				DebugLocation(341, 33);
				 AddRange(retval.value.Generic, gc); 

				}
				break;

			}
			} finally { DebugExitSubRule(39); }

			DebugLocation(342, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:342:13: (pc= port_clause )?
			int alt40=2;
			try { DebugEnterSubRule(40);
			try { DebugEnterDecision(40, false);
			int LA40_0 = input.LA(1);

			if ((LA40_0==PORT))
			{
				alt40 = 1;
			}
			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:342:15: pc= port_clause
				{
				DebugLocation(342, 17);
				PushFollow(Follow._port_clause_in_component_declaration2818);
				pc=port_clause();
				PopFollow();

				DebugLocation(342, 30);
				 AddRange(retval.value.Port, pc); 

				}
				break;

			}
			} finally { DebugExitSubRule(40); }

			DebugLocation(343, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:343:13: ( end_identifier )?
			int alt41=2;
			try { DebugEnterSubRule(41);
			try { DebugEnterDecision(41, false);
			int LA41_0 = input.LA(1);

			if ((LA41_0==BASIC_IDENTIFIER||LA41_0==EXTENDED_IDENTIFIER))
			{
				alt41 = 1;
			}
			} finally { DebugExitDecision(41); }
			switch (alt41)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:343:13: end_identifier
				{
				DebugLocation(343, 13);
				PushFollow(Follow._end_identifier_in_component_declaration2837);
				end_identifier51=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(41); }

			DebugLocation(344, 13);

			            	if(((end_identifier51!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier51.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier51.Start))):null) != null) && (!(end_identifier51!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier51.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier51.Start))):null).Equals(retval.value.Identifier, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier51!=null?((CommonTree)end_identifier51.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_COMPONENT, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier51!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier51.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier51.Start))):null), retval.value.Identifier));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("component_declaration", 23);
			LeaveRule("component_declaration", 23);
			LeaveRule_component_declaration();
		}
		DebugLocation(349, 4);
		} finally { DebugExitRule(GrammarFileName, "component_declaration"); }
		return retval;

	}
	// $ANTLR end "component_declaration"

	partial void EnterRule_component_instantiation_statement();
	partial void LeaveRule_component_instantiation_statement();

	// $ANTLR start "component_instantiation_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:352:1: component_instantiation_statement[string label] returns [AbstractComponentInstantiation value] : ^( COMPONENT_INSTANTIATION_STATEMENT instantiated_unit[label] (gma= generic_map_aspect )? (pma= port_map_aspect )? ) ;
	[GrammarRule("component_instantiation_statement")]
	private AbstractComponentInstantiation component_instantiation_statement(string label)
	{
		EnterRule_component_instantiation_statement();
		EnterRule("component_instantiation_statement", 24);
		TraceIn("component_instantiation_statement", 24);
		AbstractComponentInstantiation value = default(AbstractComponentInstantiation);


		List<AssociationElement> gma = default(List<AssociationElement>);
		List<AssociationElement> pma = default(List<AssociationElement>);
		AbstractComponentInstantiation instantiated_unit52 = default(AbstractComponentInstantiation);

		try { DebugEnterRule(GrammarFileName, "component_instantiation_statement");
		DebugLocation(352, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:353:5: ( ^( COMPONENT_INSTANTIATION_STATEMENT instantiated_unit[label] (gma= generic_map_aspect )? (pma= port_map_aspect )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:353:9: ^( COMPONENT_INSTANTIATION_STATEMENT instantiated_unit[label] (gma= generic_map_aspect )? (pma= port_map_aspect )? )
			{
			DebugLocation(353, 9);
			DebugLocation(353, 12);
			Match(input,COMPONENT_INSTANTIATION_STATEMENT,Follow._COMPONENT_INSTANTIATION_STATEMENT_in_component_instantiation_statement2889); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(354, 13);
			PushFollow(Follow._instantiated_unit_in_component_instantiation_statement2903);
			instantiated_unit52=instantiated_unit(label);
			PopFollow();

			DebugLocation(354, 38);
			 value = instantiated_unit52; 
			DebugLocation(355, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:355:13: (gma= generic_map_aspect )?
			int alt42=2;
			try { DebugEnterSubRule(42);
			try { DebugEnterDecision(42, false);
			int LA42_0 = input.LA(1);

			if ((LA42_0==GENERIC_MAP))
			{
				alt42 = 1;
			}
			} finally { DebugExitDecision(42); }
			switch (alt42)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:355:15: gma= generic_map_aspect
				{
				DebugLocation(355, 18);
				PushFollow(Follow._generic_map_aspect_in_component_instantiation_statement2924);
				gma=generic_map_aspect();
				PopFollow();

				DebugLocation(355, 38);
				 AddRange(value.GenericMap, gma); 

				}
				break;

			}
			} finally { DebugExitSubRule(42); }

			DebugLocation(356, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:356:13: (pma= port_map_aspect )?
			int alt43=2;
			try { DebugEnterSubRule(43);
			try { DebugEnterDecision(43, false);
			int LA43_0 = input.LA(1);

			if ((LA43_0==PORT_MAP))
			{
				alt43 = 1;
			}
			} finally { DebugExitDecision(43); }
			switch (alt43)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:356:15: pma= port_map_aspect
				{
				DebugLocation(356, 18);
				PushFollow(Follow._port_map_aspect_in_component_instantiation_statement2947);
				pma=port_map_aspect();
				PopFollow();

				DebugLocation(356, 35);
				 AddRange(value.PortMap, pma); 

				}
				break;

			}
			} finally { DebugExitSubRule(43); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("component_instantiation_statement", 24);
			LeaveRule("component_instantiation_statement", 24);
			LeaveRule_component_instantiation_statement();
		}
		DebugLocation(358, 4);
		} finally { DebugExitRule(GrammarFileName, "component_instantiation_statement"); }
		return value;

	}
	// $ANTLR end "component_instantiation_statement"

	private sealed partial class component_specification_return : TreeRuleReturnScope<CommonTree>
	{
		public ComponentSpecification value;
		public component_specification_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_component_specification();
	partial void LeaveRule_component_specification();

	// $ANTLR start "component_specification"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:360:1: component_specification returns [ComponentSpecification value] : ( ^( INSTANTIATION_LIST ( identifier )+ ) comp1= name | OTHERS comp2= name | ALL comp3= name );
	[GrammarRule("component_specification")]
	private MetaClassCreator.component_specification_return component_specification()
	{
		EnterRule_component_specification();
		EnterRule("component_specification", 25);
		TraceIn("component_specification", 25);
		MetaClassCreator.component_specification_return retval = new MetaClassCreator.component_specification_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return comp1 = default(MetaClassCreator.name_return);
		MetaClassCreator.name_return comp2 = default(MetaClassCreator.name_return);
		MetaClassCreator.name_return comp3 = default(MetaClassCreator.name_return);
		TreeRuleReturnScope<CommonTree> identifier53 = default(TreeRuleReturnScope<CommonTree>);

		 List<String> identifiers = new List<String>(); 
		try { DebugEnterRule(GrammarFileName, "component_specification");
		DebugLocation(360, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:363:5: ( ^( INSTANTIATION_LIST ( identifier )+ ) comp1= name | OTHERS comp2= name | ALL comp3= name )
			int alt45=3;
			try { DebugEnterDecision(45, false);
			switch (input.LA(1))
			{
			case INSTANTIATION_LIST:
				{
				alt45 = 1;
				}
				break;
			case OTHERS:
				{
				alt45 = 2;
				}
				break;
			case ALL:
				{
				alt45 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 45, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(45); }
			switch (alt45)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:363:9: ^( INSTANTIATION_LIST ( identifier )+ ) comp1= name
				{
				DebugLocation(363, 9);
				DebugLocation(363, 12);
				Match(input,INSTANTIATION_LIST,Follow._INSTANTIATION_LIST_in_component_specification2997); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(363, 31);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:363:31: ( identifier )+
				int cnt44=0;
				try { DebugEnterSubRule(44);
				while (true)
				{
					int alt44=2;
					try { DebugEnterDecision(44, false);
					int LA44_0 = input.LA(1);

					if ((LA44_0==BASIC_IDENTIFIER||LA44_0==EXTENDED_IDENTIFIER))
					{
						alt44 = 1;
					}


					} finally { DebugExitDecision(44); }
					switch (alt44)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:363:33: identifier
						{
						DebugLocation(363, 33);
						PushFollow(Follow._identifier_in_component_specification3001);
						identifier53=identifier();
						PopFollow();

						DebugLocation(363, 44);
						 identifiers.Add((identifier53!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier53.Start),input.TreeAdaptor.GetTokenStopIndex(identifier53.Start))):null)); 

						}
						break;

					default:
						if (cnt44 >= 1)
							goto loop44;

						EarlyExitException eee44 = new EarlyExitException( 44, input );
						DebugRecognitionException(eee44);
						throw eee44;
					}
					cnt44++;
				}
				loop44:
					;

				} finally { DebugExitSubRule(44); }


				Match(input, TokenTypes.Up, null); 

				DebugLocation(364, 14);
				PushFollow(Follow._name_in_component_specification3020);
				comp1=name();
				PopFollow();

				DebugLocation(365, 9);

				            retval.value = ComponentSpecification.create((comp1!=null?comp1.value:default(TemporaryName)).toComponent(currentScope),
				                identifiers);
				        

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:369:9: OTHERS comp2= name
				{
				DebugLocation(369, 9);
				Match(input,OTHERS,Follow._OTHERS_in_component_specification3040); 
				DebugLocation(369, 21);
				PushFollow(Follow._name_in_component_specification3044);
				comp2=name();
				PopFollow();

				DebugLocation(370, 9);
				 retval.value = ComponentSpecification.createOthers((comp2!=null?comp2.value:default(TemporaryName)).toComponent(currentScope)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:371:9: ALL comp3= name
				{
				DebugLocation(371, 9);
				Match(input,ALL,Follow._ALL_in_component_specification3064); 
				DebugLocation(371, 18);
				PushFollow(Follow._name_in_component_specification3068);
				comp3=name();
				PopFollow();

				DebugLocation(372, 9);
				 retval.value = ComponentSpecification.createAll((comp3!=null?comp3.value:default(TemporaryName)).toComponent(currentScope)); 

				}
				break;

			}
			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("component_specification", 25);
			LeaveRule("component_specification", 25);
			LeaveRule_component_specification();
		}
		DebugLocation(373, 4);
		} finally { DebugExitRule(GrammarFileName, "component_specification"); }
		return retval;

	}
	// $ANTLR end "component_specification"

	partial void EnterRule_concurrent_assertion_statement();
	partial void LeaveRule_concurrent_assertion_statement();

	// $ANTLR start "concurrent_assertion_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:376:1: concurrent_assertion_statement[string label] returns [ConcurrentAssertionStatement value] : ^( ASSERT condition= expression ^( REPORT (rep= expression )? ) ^( SEVERITY (sev= expression )? ) ) ;
	[GrammarRule("concurrent_assertion_statement")]
	private ConcurrentAssertionStatement concurrent_assertion_statement(string label)
	{
		EnterRule_concurrent_assertion_statement();
		EnterRule("concurrent_assertion_statement", 26);
		TraceIn("concurrent_assertion_statement", 26);
		ConcurrentAssertionStatement value = default(ConcurrentAssertionStatement);


		MetaClassCreator.expression_return condition = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return rep = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return sev = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "concurrent_assertion_statement");
		DebugLocation(376, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:377:5: ( ^( ASSERT condition= expression ^( REPORT (rep= expression )? ) ^( SEVERITY (sev= expression )? ) ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:377:9: ^( ASSERT condition= expression ^( REPORT (rep= expression )? ) ^( SEVERITY (sev= expression )? ) )
			{
			DebugLocation(377, 9);
			DebugLocation(377, 12);
			Match(input,ASSERT,Follow._ASSERT_in_concurrent_assertion_statement3105); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(378, 22);
			PushFollow(Follow._expression_in_concurrent_assertion_statement3121);
			condition=expression();
			PopFollow();

			DebugLocation(379, 13);

			                value = new ConcurrentAssertionStatement((condition!=null?condition.value:default(Expression)));
			                value.Label = label;
			            
			DebugLocation(383, 13);
			DebugLocation(383, 16);
			Match(input,REPORT,Follow._REPORT_in_concurrent_assertion_statement3151); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(383, 26);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:383:26: (rep= expression )?
				int alt46=2;
				try { DebugEnterSubRule(46);
				try { DebugEnterDecision(46, false);
				int LA46_0 = input.LA(1);

				if ((LA46_0==EXPRESSION))
				{
					alt46 = 1;
				}
				} finally { DebugExitDecision(46); }
				switch (alt46)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:383:26: rep= expression
					{
					DebugLocation(383, 26);
					PushFollow(Follow._expression_in_concurrent_assertion_statement3155);
					rep=expression();
					PopFollow();


					}
					break;

				}
				} finally { DebugExitSubRule(46); }


				Match(input, TokenTypes.Up, null); 
			}

			DebugLocation(383, 41);
			 value.ReportedExpression = (rep!=null?rep.value:default(Expression)); 
			DebugLocation(384, 13);
			DebugLocation(384, 16);
			Match(input,SEVERITY,Follow._SEVERITY_in_concurrent_assertion_statement3176); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(384, 28);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:384:28: (sev= expression )?
				int alt47=2;
				try { DebugEnterSubRule(47);
				try { DebugEnterDecision(47, false);
				int LA47_0 = input.LA(1);

				if ((LA47_0==EXPRESSION))
				{
					alt47 = 1;
				}
				} finally { DebugExitDecision(47); }
				switch (alt47)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:384:28: sev= expression
					{
					DebugLocation(384, 28);
					PushFollow(Follow._expression_in_concurrent_assertion_statement3180);
					sev=expression();
					PopFollow();


					}
					break;

				}
				} finally { DebugExitSubRule(47); }


				Match(input, TokenTypes.Up, null); 
			}

			DebugLocation(384, 43);
			 value.Severity = (sev!=null?sev.value:default(Expression)); 

			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_assertion_statement", 26);
			LeaveRule("concurrent_assertion_statement", 26);
			LeaveRule_concurrent_assertion_statement();
		}
		DebugLocation(386, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_assertion_statement"); }
		return value;

	}
	// $ANTLR end "concurrent_assertion_statement"

	partial void EnterRule_concurrent_procedure_call_statement();
	partial void LeaveRule_concurrent_procedure_call_statement();

	// $ANTLR start "concurrent_procedure_call_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:389:1: concurrent_procedure_call_statement[string label] returns [ConcurrentProcedureCall value] : ^( PROCEDURE_CALL name (parameters= association_list )? ) ;
	[GrammarRule("concurrent_procedure_call_statement")]
	private ConcurrentProcedureCall concurrent_procedure_call_statement(string label)
	{
		EnterRule_concurrent_procedure_call_statement();
		EnterRule("concurrent_procedure_call_statement", 27);
		TraceIn("concurrent_procedure_call_statement", 27);
		ConcurrentProcedureCall value = default(ConcurrentProcedureCall);


		List<AssociationElement> parameters = default(List<AssociationElement>);
		MetaClassCreator.name_return name54 = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "concurrent_procedure_call_statement");
		DebugLocation(389, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:390:5: ( ^( PROCEDURE_CALL name (parameters= association_list )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:390:9: ^( PROCEDURE_CALL name (parameters= association_list )? )
			{
			DebugLocation(390, 9);
			DebugLocation(390, 12);
			Match(input,PROCEDURE_CALL,Follow._PROCEDURE_CALL_in_concurrent_procedure_call_statement3222); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(391, 13);
			PushFollow(Follow._name_in_concurrent_procedure_call_statement3236);
			name54=name();
			PopFollow();

			DebugLocation(392, 13);

			                value = new ConcurrentProcedureCall((name54!=null?name54.value:default(TemporaryName)).toProcedure(currentScope));
			                value.Label = label;
			            
			DebugLocation(396, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:396:13: (parameters= association_list )?
			int alt48=2;
			try { DebugEnterSubRule(48);
			try { DebugEnterDecision(48, false);
			int LA48_0 = input.LA(1);

			if ((LA48_0==ASSOCIATION_LIST))
			{
				alt48 = 1;
			}
			} finally { DebugExitDecision(48); }
			switch (alt48)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:397:17: parameters= association_list
				{
				DebugLocation(397, 27);
				PushFollow(Follow._association_list_in_concurrent_procedure_call_statement3284);
				parameters=association_list();
				PopFollow();

				DebugLocation(398, 17);
				 AddRange(value.Parameters, parameters); 

				}
				break;

			}
			} finally { DebugExitSubRule(48); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_procedure_call_statement", 27);
			LeaveRule("concurrent_procedure_call_statement", 27);
			LeaveRule_concurrent_procedure_call_statement();
		}
		DebugLocation(401, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_procedure_call_statement"); }
		return value;

	}
	// $ANTLR end "concurrent_procedure_call_statement"

	partial void EnterRule_concurrent_signal_assignment_statement();
	partial void LeaveRule_concurrent_signal_assignment_statement();

	// $ANTLR start "concurrent_signal_assignment_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:404:1: concurrent_signal_assignment_statement[string label] returns [AbstractPostponableConcurrentStatement value] : ( ^( CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT csa= conditional_signal_assignment ) | ^( SELECTED_SIGNAL_ASSIGNMENT_STATEMENT ssa= selected_signal_assignment ) );
	[GrammarRule("concurrent_signal_assignment_statement")]
	private AbstractPostponableConcurrentStatement concurrent_signal_assignment_statement(string label)
	{
		EnterRule_concurrent_signal_assignment_statement();
		EnterRule("concurrent_signal_assignment_statement", 28);
		TraceIn("concurrent_signal_assignment_statement", 28);
		AbstractPostponableConcurrentStatement value = default(AbstractPostponableConcurrentStatement);


		ConditionalSignalAssignment csa = default(ConditionalSignalAssignment);
		SelectedSignalAssignment ssa = default(SelectedSignalAssignment);

		try { DebugEnterRule(GrammarFileName, "concurrent_signal_assignment_statement");
		DebugLocation(404, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:405:5: ( ^( CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT csa= conditional_signal_assignment ) | ^( SELECTED_SIGNAL_ASSIGNMENT_STATEMENT ssa= selected_signal_assignment ) )
			int alt49=2;
			try { DebugEnterDecision(49, false);
			int LA49_0 = input.LA(1);

			if ((LA49_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT))
			{
				alt49 = 1;
			}
			else if ((LA49_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
			{
				alt49 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 49, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(49); }
			switch (alt49)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:405:9: ^( CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT csa= conditional_signal_assignment )
				{
				DebugLocation(405, 9);
				DebugLocation(405, 12);
				Match(input,CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT,Follow._CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT_in_concurrent_signal_assignment_statement3354); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(405, 55);
				PushFollow(Follow._conditional_signal_assignment_in_concurrent_signal_assignment_statement3358);
				csa=conditional_signal_assignment();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(406, 9);

				            value = csa;
				            value.Label = label;
				        

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:410:9: ^( SELECTED_SIGNAL_ASSIGNMENT_STATEMENT ssa= selected_signal_assignment )
				{
				DebugLocation(410, 9);
				DebugLocation(410, 12);
				Match(input,SELECTED_SIGNAL_ASSIGNMENT_STATEMENT,Follow._SELECTED_SIGNAL_ASSIGNMENT_STATEMENT_in_concurrent_signal_assignment_statement3382); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(410, 52);
				PushFollow(Follow._selected_signal_assignment_in_concurrent_signal_assignment_statement3386);
				ssa=selected_signal_assignment();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(411, 9);

				            value = ssa;
				            value.Label = label;
				        

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_signal_assignment_statement", 28);
			LeaveRule("concurrent_signal_assignment_statement", 28);
			LeaveRule_concurrent_signal_assignment_statement();
		}
		DebugLocation(415, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_signal_assignment_statement"); }
		return value;

	}
	// $ANTLR end "concurrent_signal_assignment_statement"

	partial void EnterRule_conditional_signal_assignment();
	partial void LeaveRule_conditional_signal_assignment();

	// $ANTLR start "conditional_signal_assignment"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:418:1: conditional_signal_assignment returns [ConditionalSignalAssignment value] : ts= target_signal ( GUARDED )? ( delay_mechanism )? cw= conditional_waveforms ;
	[GrammarRule("conditional_signal_assignment")]
	private ConditionalSignalAssignment conditional_signal_assignment()
	{
		EnterRule_conditional_signal_assignment();
		EnterRule("conditional_signal_assignment", 29);
		TraceIn("conditional_signal_assignment", 29);
		ConditionalSignalAssignment value = default(ConditionalSignalAssignment);


		ISignalAssignmentTarget ts = default(ISignalAssignmentTarget);
		List<ConditionalSignalAssignment.ConditionalWaveformElement> cw = default(List<ConditionalSignalAssignment.ConditionalWaveformElement>);
		DelayMechanism delay_mechanism55 = default(DelayMechanism);


		    bool isGuarded = false;
		    DelayMechanism delay = DelayMechanism.INERTIAL;

		try { DebugEnterRule(GrammarFileName, "conditional_signal_assignment");
		DebugLocation(418, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:423:5: (ts= target_signal ( GUARDED )? ( delay_mechanism )? cw= conditional_waveforms )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:423:9: ts= target_signal ( GUARDED )? ( delay_mechanism )? cw= conditional_waveforms
			{
			DebugLocation(423, 11);
			PushFollow(Follow._target_signal_in_conditional_signal_assignment3428);
			ts=target_signal();
			PopFollow();

			DebugLocation(424, 6);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:424:6: ( GUARDED )?
			int alt50=2;
			try { DebugEnterSubRule(50);
			try { DebugEnterDecision(50, false);
			int LA50_0 = input.LA(1);

			if ((LA50_0==GUARDED))
			{
				alt50 = 1;
			}
			} finally { DebugExitDecision(50); }
			switch (alt50)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:424:8: GUARDED
				{
				DebugLocation(424, 8);
				Match(input,GUARDED,Follow._GUARDED_in_conditional_signal_assignment3437); 
				DebugLocation(424, 16);
				 isGuarded = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(50); }

			DebugLocation(425, 2);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:425:2: ( delay_mechanism )?
			int alt51=2;
			try { DebugEnterSubRule(51);
			try { DebugEnterDecision(51, false);
			int LA51_0 = input.LA(1);

			if ((LA51_0==INERTIAL||LA51_0==TRANSPORT))
			{
				alt51 = 1;
			}
			} finally { DebugExitDecision(51); }
			switch (alt51)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:425:4: delay_mechanism
				{
				DebugLocation(425, 4);
				PushFollow(Follow._delay_mechanism_in_conditional_signal_assignment3447);
				delay_mechanism55=delay_mechanism();
				PopFollow();

				DebugLocation(425, 20);
				delay = delay_mechanism55;

				}
				break;

			}
			} finally { DebugExitSubRule(51); }

			DebugLocation(426, 11);
			PushFollow(Follow._conditional_waveforms_in_conditional_signal_assignment3463);
			cw=conditional_waveforms();
			PopFollow();

			DebugLocation(427, 9);

			            value = new ConditionalSignalAssignment(ts, cw);
			            value.Guarded = isGuarded;
			            value.DelayMechanism = delay;
			        

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("conditional_signal_assignment", 29);
			LeaveRule("conditional_signal_assignment", 29);
			LeaveRule_conditional_signal_assignment();
		}
		DebugLocation(432, 4);
		} finally { DebugExitRule(GrammarFileName, "conditional_signal_assignment"); }
		return value;

	}
	// $ANTLR end "conditional_signal_assignment"

	private sealed partial class concurrent_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public ConcurrentStatement value;
		public concurrent_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_concurrent_statement();
	partial void LeaveRule_concurrent_statement();

	// $ANTLR start "concurrent_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:434:1: concurrent_statement returns [ConcurrentStatement value] : ( ^( LABEL_STATEMENT identifier (s1= concurrent_statement_optional_label[$identifier.text] |s2= concurrent_statement_with_label[$identifier.text] ) ) |s3= concurrent_statement_optional_label[null] );
	[GrammarRule("concurrent_statement")]
	private MetaClassCreator.concurrent_statement_return concurrent_statement()
	{
		EnterRule_concurrent_statement();
		EnterRule("concurrent_statement", 30);
		TraceIn("concurrent_statement", 30);
		MetaClassCreator.concurrent_statement_return retval = new MetaClassCreator.concurrent_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ConcurrentStatement s1 = default(ConcurrentStatement);
		ConcurrentStatement s2 = default(ConcurrentStatement);
		ConcurrentStatement s3 = default(ConcurrentStatement);
		TreeRuleReturnScope<CommonTree> identifier56 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "concurrent_statement");
		DebugLocation(434, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:436:5: ( ^( LABEL_STATEMENT identifier (s1= concurrent_statement_optional_label[$identifier.text] |s2= concurrent_statement_with_label[$identifier.text] ) ) |s3= concurrent_statement_optional_label[null] )
			int alt53=2;
			try { DebugEnterDecision(53, false);
			int LA53_0 = input.LA(1);

			if ((LA53_0==LABEL_STATEMENT))
			{
				alt53 = 1;
			}
			else if ((LA53_0==ASSERT||LA53_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT||LA53_0==POSTPONED||(LA53_0>=PROCEDURE_CALL && LA53_0<=PROCESS)||LA53_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
			{
				alt53 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 53, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:436:9: ^( LABEL_STATEMENT identifier (s1= concurrent_statement_optional_label[$identifier.text] |s2= concurrent_statement_with_label[$identifier.text] ) )
				{
				DebugLocation(436, 9);
				DebugLocation(436, 12);
				Match(input,LABEL_STATEMENT,Follow._LABEL_STATEMENT_in_concurrent_statement3503); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(436, 28);
				PushFollow(Follow._identifier_in_concurrent_statement3505);
				identifier56=identifier();
				PopFollow();

				DebugLocation(437, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:437:13: (s1= concurrent_statement_optional_label[$identifier.text] |s2= concurrent_statement_with_label[$identifier.text] )
				int alt52=2;
				try { DebugEnterSubRule(52);
				try { DebugEnterDecision(52, false);
				int LA52_0 = input.LA(1);

				if ((LA52_0==ASSERT||LA52_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT||LA52_0==POSTPONED||(LA52_0>=PROCEDURE_CALL && LA52_0<=PROCESS)||LA52_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
				{
					alt52 = 1;
				}
				else if ((LA52_0==BLOCK_STATEMENT||LA52_0==COMPONENT_INSTANTIATION_STATEMENT||LA52_0==GENERATE))
				{
					alt52 = 2;
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 52, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(52); }
				switch (alt52)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:438:21: s1= concurrent_statement_optional_label[$identifier.text]
					{
					DebugLocation(438, 23);
					PushFollow(Follow._concurrent_statement_optional_label_in_concurrent_statement3543);
					s1=concurrent_statement_optional_label((identifier56!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier56.Start),input.TreeAdaptor.GetTokenStopIndex(identifier56.Start))):null));
					PopFollow();

					DebugLocation(439, 21);
					 retval.value = s1; 

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:440:21: s2= concurrent_statement_with_label[$identifier.text]
					{
					DebugLocation(440, 23);
					PushFollow(Follow._concurrent_statement_with_label_in_concurrent_statement3590);
					s2=concurrent_statement_with_label((identifier56!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier56.Start),input.TreeAdaptor.GetTokenStopIndex(identifier56.Start))):null));
					PopFollow();

					DebugLocation(441, 21);
					 retval.value = s2; 

					}
					break;

				}
				} finally { DebugExitSubRule(52); }


				Match(input, TokenTypes.Up, null); 


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:444:9: s3= concurrent_statement_optional_label[null]
				{
				DebugLocation(444, 11);
				PushFollow(Follow._concurrent_statement_optional_label_in_concurrent_statement3649);
				s3=concurrent_statement_optional_label(null);
				PopFollow();

				DebugLocation(445, 9);
				 retval.value = s3; 

				}
				break;

			}
			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_statement", 30);
			LeaveRule("concurrent_statement", 30);
			LeaveRule_concurrent_statement();
		}
		DebugLocation(446, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_statement"); }
		return retval;

	}
	// $ANTLR end "concurrent_statement"

	partial void EnterRule_concurrent_statement_optional_label();
	partial void LeaveRule_concurrent_statement_optional_label();

	// $ANTLR start "concurrent_statement_optional_label"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:448:1: concurrent_statement_optional_label[string label] returns [ConcurrentStatement value] : (statement1= concurrent_statement_optional_label2[$label, false] | ^( POSTPONED statement2= concurrent_statement_optional_label2[$label, true] ) );
	[GrammarRule("concurrent_statement_optional_label")]
	private ConcurrentStatement concurrent_statement_optional_label(string label)
	{
		EnterRule_concurrent_statement_optional_label();
		EnterRule("concurrent_statement_optional_label", 31);
		TraceIn("concurrent_statement_optional_label", 31);
		ConcurrentStatement value = default(ConcurrentStatement);


		AbstractPostponableConcurrentStatement statement1 = default(AbstractPostponableConcurrentStatement);
		AbstractPostponableConcurrentStatement statement2 = default(AbstractPostponableConcurrentStatement);

		try { DebugEnterRule(GrammarFileName, "concurrent_statement_optional_label");
		DebugLocation(448, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:449:5: (statement1= concurrent_statement_optional_label2[$label, false] | ^( POSTPONED statement2= concurrent_statement_optional_label2[$label, true] ) )
			int alt54=2;
			try { DebugEnterDecision(54, false);
			int LA54_0 = input.LA(1);

			if ((LA54_0==ASSERT||LA54_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT||(LA54_0>=PROCEDURE_CALL && LA54_0<=PROCESS)||LA54_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
			{
				alt54 = 1;
			}
			else if ((LA54_0==POSTPONED))
			{
				alt54 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 54, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:449:9: statement1= concurrent_statement_optional_label2[$label, false]
				{
				DebugLocation(449, 19);
				PushFollow(Follow._concurrent_statement_optional_label2_in_concurrent_statement_optional_label3686);
				statement1=concurrent_statement_optional_label2(label, false);
				PopFollow();

				DebugLocation(450, 9);
				 value = statement1; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:451:9: ^( POSTPONED statement2= concurrent_statement_optional_label2[$label, true] )
				{
				DebugLocation(451, 9);
				DebugLocation(451, 12);
				Match(input,POSTPONED,Follow._POSTPONED_in_concurrent_statement_optional_label3709); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(451, 32);
				PushFollow(Follow._concurrent_statement_optional_label2_in_concurrent_statement_optional_label3713);
				statement2=concurrent_statement_optional_label2(label, true);
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(452, 9);

				            if (statement2 != null) {
				                statement2.Postponed = true;
				            }
				            value = statement2;
				        

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_statement_optional_label", 31);
			LeaveRule("concurrent_statement_optional_label", 31);
			LeaveRule_concurrent_statement_optional_label();
		}
		DebugLocation(458, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_statement_optional_label"); }
		return value;

	}
	// $ANTLR end "concurrent_statement_optional_label"

	partial void EnterRule_concurrent_statement_optional_label2();
	partial void LeaveRule_concurrent_statement_optional_label2();

	// $ANTLR start "concurrent_statement_optional_label2"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:460:1: concurrent_statement_optional_label2[string label, bool isPostponed] returns [AbstractPostponableConcurrentStatement value] : (ps= process_statement[$label, $isPostponed] |cpcs= concurrent_procedure_call_statement[$label] |cas= concurrent_assertion_statement[$label] |csas= concurrent_signal_assignment_statement[$label] );
	[GrammarRule("concurrent_statement_optional_label2")]
	private AbstractPostponableConcurrentStatement concurrent_statement_optional_label2(string label, bool isPostponed)
	{
		EnterRule_concurrent_statement_optional_label2();
		EnterRule("concurrent_statement_optional_label2", 32);
		TraceIn("concurrent_statement_optional_label2", 32);
		AbstractPostponableConcurrentStatement value = default(AbstractPostponableConcurrentStatement);


		MetaClassCreator.process_statement_return ps = default(MetaClassCreator.process_statement_return);
		ConcurrentProcedureCall cpcs = default(ConcurrentProcedureCall);
		ConcurrentAssertionStatement cas = default(ConcurrentAssertionStatement);
		AbstractPostponableConcurrentStatement csas = default(AbstractPostponableConcurrentStatement);

		try { DebugEnterRule(GrammarFileName, "concurrent_statement_optional_label2");
		DebugLocation(460, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:461:5: (ps= process_statement[$label, $isPostponed] |cpcs= concurrent_procedure_call_statement[$label] |cas= concurrent_assertion_statement[$label] |csas= concurrent_signal_assignment_statement[$label] )
			int alt55=4;
			try { DebugEnterDecision(55, false);
			switch (input.LA(1))
			{
			case PROCESS:
				{
				alt55 = 1;
				}
				break;
			case PROCEDURE_CALL:
				{
				alt55 = 2;
				}
				break;
			case ASSERT:
				{
				alt55 = 3;
				}
				break;
			case CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT:
			case SELECTED_SIGNAL_ASSIGNMENT_STATEMENT:
				{
				alt55 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 55, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(55); }
			switch (alt55)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:461:9: ps= process_statement[$label, $isPostponed]
				{
				DebugLocation(461, 11);
				PushFollow(Follow._process_statement_in_concurrent_statement_optional_label23752);
				ps=process_statement(label, isPostponed);
				PopFollow();

				DebugLocation(461, 75);
				 value = (ps!=null?ps.value:default(ProcessStatement)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:462:9: cpcs= concurrent_procedure_call_statement[$label]
				{
				DebugLocation(462, 13);
				PushFollow(Follow._concurrent_procedure_call_statement_in_concurrent_statement_optional_label23790);
				cpcs=concurrent_procedure_call_statement(label);
				PopFollow();

				DebugLocation(462, 61);
				 value = cpcs; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:463:9: cas= concurrent_assertion_statement[$label]
				{
				DebugLocation(463, 12);
				PushFollow(Follow._concurrent_assertion_statement_in_concurrent_statement_optional_label23808);
				cas=concurrent_assertion_statement(label);
				PopFollow();

				DebugLocation(463, 61);
				 value = cas; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:464:9: csas= concurrent_signal_assignment_statement[$label]
				{
				DebugLocation(464, 13);
				PushFollow(Follow._concurrent_signal_assignment_statement_in_concurrent_statement_optional_label23832);
				csas=concurrent_signal_assignment_statement(label);
				PopFollow();

				DebugLocation(464, 61);
				 value = csas; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_statement_optional_label2", 32);
			LeaveRule("concurrent_statement_optional_label2", 32);
			LeaveRule_concurrent_statement_optional_label2();
		}
		DebugLocation(465, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_statement_optional_label2"); }
		return value;

	}
	// $ANTLR end "concurrent_statement_optional_label2"

	partial void EnterRule_concurrent_statement_with_label();
	partial void LeaveRule_concurrent_statement_with_label();

	// $ANTLR start "concurrent_statement_with_label"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:467:1: concurrent_statement_with_label[string label] returns [ConcurrentStatement value] : (bs= block_statement[$label] |cis= component_instantiation_statement[$label] |gs= generate_statement[$label] );
	[GrammarRule("concurrent_statement_with_label")]
	private ConcurrentStatement concurrent_statement_with_label(string label)
	{
		EnterRule_concurrent_statement_with_label();
		EnterRule("concurrent_statement_with_label", 33);
		TraceIn("concurrent_statement_with_label", 33);
		ConcurrentStatement value = default(ConcurrentStatement);


		BlockStatement bs = default(BlockStatement);
		AbstractComponentInstantiation cis = default(AbstractComponentInstantiation);
		AbstractGenerateStatement gs = default(AbstractGenerateStatement);

		try { DebugEnterRule(GrammarFileName, "concurrent_statement_with_label");
		DebugLocation(467, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:468:5: (bs= block_statement[$label] |cis= component_instantiation_statement[$label] |gs= generate_statement[$label] )
			int alt56=3;
			try { DebugEnterDecision(56, false);
			switch (input.LA(1))
			{
			case BLOCK_STATEMENT:
				{
				alt56 = 1;
				}
				break;
			case COMPONENT_INSTANTIATION_STATEMENT:
				{
				alt56 = 2;
				}
				break;
			case GENERATE:
				{
				alt56 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 56, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(56); }
			switch (alt56)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:468:9: bs= block_statement[$label]
				{
				DebugLocation(468, 11);
				PushFollow(Follow._block_statement_in_concurrent_statement_with_label3861);
				bs=block_statement(label);
				PopFollow();

				DebugLocation(468, 55);
				 value = bs; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:469:9: cis= component_instantiation_statement[$label]
				{
				DebugLocation(469, 12);
				PushFollow(Follow._component_instantiation_statement_in_concurrent_statement_with_label3895);
				cis=component_instantiation_statement(label);
				PopFollow();

				DebugLocation(469, 55);
				 value = cis; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:470:9: gs= generate_statement[$label]
				{
				DebugLocation(470, 11);
				PushFollow(Follow._generate_statement_in_concurrent_statement_with_label3910);
				gs=generate_statement(label);
				PopFollow();

				DebugLocation(470, 55);
				 value = gs; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("concurrent_statement_with_label", 33);
			LeaveRule("concurrent_statement_with_label", 33);
			LeaveRule_concurrent_statement_with_label();
		}
		DebugLocation(471, 4);
		} finally { DebugExitRule(GrammarFileName, "concurrent_statement_with_label"); }
		return value;

	}
	// $ANTLR end "concurrent_statement_with_label"

	partial void EnterRule_conditional_waveforms();
	partial void LeaveRule_conditional_waveforms();

	// $ANTLR start "conditional_waveforms"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:474:1: conditional_waveforms returns [List<ConditionalSignalAssignment.ConditionalWaveformElement> value = new List<ConditionalSignalAssignment.ConditionalWaveformElement>()] : ^( CONDITIONAL_WAVEFORMS (w= waveform ( expression )? )* ) ;
	[GrammarRule("conditional_waveforms")]
	private List<ConditionalSignalAssignment.ConditionalWaveformElement> conditional_waveforms()
	{
		EnterRule_conditional_waveforms();
		EnterRule("conditional_waveforms", 34);
		TraceIn("conditional_waveforms", 34);
		List<ConditionalSignalAssignment.ConditionalWaveformElement> value =  new List<ConditionalSignalAssignment.ConditionalWaveformElement>();


		List<WaveformElement> w = default(List<WaveformElement>);
		MetaClassCreator.expression_return expression57 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "conditional_waveforms");
		DebugLocation(474, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:475:5: ( ^( CONDITIONAL_WAVEFORMS (w= waveform ( expression )? )* ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:475:9: ^( CONDITIONAL_WAVEFORMS (w= waveform ( expression )? )* )
			{
			DebugLocation(475, 9);
			DebugLocation(475, 12);
			Match(input,CONDITIONAL_WAVEFORMS,Follow._CONDITIONAL_WAVEFORMS_in_conditional_waveforms3955); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(476, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:476:13: (w= waveform ( expression )? )*
				try { DebugEnterSubRule(58);
				while (true)
				{
					int alt58=2;
					try { DebugEnterDecision(58, false);
					int LA58_0 = input.LA(1);

					if ((LA58_0==UNAFFECTED||LA58_0==WAVEFORM))
					{
						alt58 = 1;
					}


					} finally { DebugExitDecision(58); }
					switch ( alt58 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:477:17: w= waveform ( expression )?
						{
						DebugLocation(477, 18);
						PushFollow(Follow._waveform_in_conditional_waveforms3989);
						w=waveform();
						PopFollow();

						DebugLocation(478, 17);
						 ConditionalSignalAssignment.ConditionalWaveformElement element = new ConditionalSignalAssignment.ConditionalWaveformElement(w); 
						DebugLocation(479, 17);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:479:17: ( expression )?
						int alt57=2;
						try { DebugEnterSubRule(57);
						try { DebugEnterDecision(57, false);
						int LA57_0 = input.LA(1);

						if ((LA57_0==EXPRESSION))
						{
							alt57 = 1;
						}
						} finally { DebugExitDecision(57); }
						switch (alt57)
						{
						case 1:
							DebugEnterAlt(1);
							// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:479:19: expression
							{
							DebugLocation(479, 19);
							PushFollow(Follow._expression_in_conditional_waveforms4027);
							expression57=expression();
							PopFollow();

							DebugLocation(479, 30);
							 element.Condition = (expression57!=null?expression57.value:default(Expression)); 

							}
							break;

						}
						} finally { DebugExitSubRule(57); }

						DebugLocation(480, 17);
						 value.Add(element); 

						}
						break;

					default:
						goto loop58;
					}
				}

				loop58:
					;

				} finally { DebugExitSubRule(58); }


				Match(input, TokenTypes.Up, null); 
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("conditional_waveforms", 34);
			LeaveRule("conditional_waveforms", 34);
			LeaveRule_conditional_waveforms();
		}
		DebugLocation(483, 4);
		} finally { DebugExitRule(GrammarFileName, "conditional_waveforms"); }
		return value;

	}
	// $ANTLR end "conditional_waveforms"

	private sealed partial class configuration_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public Configuration value;
		public configuration_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_configuration_declaration();
	partial void LeaveRule_configuration_declaration();

	// $ANTLR start "configuration_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:485:1: configuration_declaration[List<LibraryUnit> contextItems] returns [Configuration value] : ^( CONFIGURATION identifier entity= name (cdi= configuration_declarative_item )* bc= block_configuration ( end_identifier )? ) ;
	[GrammarRule("configuration_declaration")]
	private MetaClassCreator.configuration_declaration_return configuration_declaration(List<LibraryUnit> contextItems)
	{
		EnterRule_configuration_declaration();
		EnterRule("configuration_declaration", 35);
		TraceIn("configuration_declaration", 35);
		MetaClassCreator.configuration_declaration_return retval = new MetaClassCreator.configuration_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return entity = default(MetaClassCreator.name_return);
		MetaClassCreator.configuration_declarative_item_return cdi = default(MetaClassCreator.configuration_declarative_item_return);
		MetaClassCreator.block_configuration_return bc = default(MetaClassCreator.block_configuration_return);
		TreeRuleReturnScope<CommonTree> identifier58 = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> end_identifier59 = default(TreeRuleReturnScope<CommonTree>);


		    List<IConfigurationDeclarativeItem> declarations =
		        new List<IConfigurationDeclarativeItem>();

		try { DebugEnterRule(GrammarFileName, "configuration_declaration");
		DebugLocation(485, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:491:5: ( ^( CONFIGURATION identifier entity= name (cdi= configuration_declarative_item )* bc= block_configuration ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:491:9: ^( CONFIGURATION identifier entity= name (cdi= configuration_declarative_item )* bc= block_configuration ( end_identifier )? )
			{
			DebugLocation(491, 9);
			DebugLocation(491, 12);
			Match(input,CONFIGURATION,Follow._CONFIGURATION_in_configuration_declaration4111); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(491, 26);
			PushFollow(Follow._identifier_in_configuration_declaration4113);
			identifier58=identifier();
			PopFollow();

			DebugLocation(491, 43);
			PushFollow(Follow._name_in_configuration_declaration4117);
			entity=name();
			PopFollow();

			DebugLocation(492, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:492:13: (cdi= configuration_declarative_item )*
			try { DebugEnterSubRule(59);
			while (true)
			{
				int alt59=2;
				try { DebugEnterDecision(59, false);
				int LA59_0 = input.LA(1);

				if ((LA59_0==ATTRIBUTE_SPECIFICATION||LA59_0==GROUP_DECLARATION||LA59_0==USE))
				{
					alt59 = 1;
				}


				} finally { DebugExitDecision(59); }
				switch ( alt59 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:492:15: cdi= configuration_declarative_item
					{
					DebugLocation(492, 18);
					PushFollow(Follow._configuration_declarative_item_in_configuration_declaration4135);
					cdi=configuration_declarative_item();
					PopFollow();

					DebugLocation(492, 50);
					 declarations.Add((cdi!=null?cdi.value:default(IConfigurationDeclarativeItem))); 

					}
					break;

				default:
					goto loop59;
				}
			}

			loop59:
				;

			} finally { DebugExitSubRule(59); }

			DebugLocation(493, 13);
			 AddListEndComments((cdi!=null?cdi.value:default(IConfigurationDeclarativeItem)), (cdi!=null?((CommonTree)cdi.Start):default(CommonTree))); 
			DebugLocation(494, 15);
			PushFollow(Follow._block_configuration_in_configuration_declaration4170);
			bc=block_configuration();
			PopFollow();

			DebugLocation(495, 13);

			                retval.value = new Configuration((identifier58!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier58.Start),input.TreeAdaptor.GetTokenStopIndex(identifier58.Start))):null), (entity!=null?entity.value:default(TemporaryName)).toEntity(currentScope), (bc!=null?bc.value:default(AbstractBlockConfiguration)));
			                retval.value.ContextItems.AddRange(contextItems);
			            	contextItems.Clear();
			                AddRange(retval.value.Declarations, declarations);
			            
			DebugLocation(501, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:501:13: ( end_identifier )?
			int alt60=2;
			try { DebugEnterSubRule(60);
			try { DebugEnterDecision(60, false);
			int LA60_0 = input.LA(1);

			if ((LA60_0==BASIC_IDENTIFIER||LA60_0==EXTENDED_IDENTIFIER))
			{
				alt60 = 1;
			}
			} finally { DebugExitDecision(60); }
			switch (alt60)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:501:13: end_identifier
				{
				DebugLocation(501, 13);
				PushFollow(Follow._end_identifier_in_configuration_declaration4198);
				end_identifier59=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(60); }

			DebugLocation(502, 13);

			            	if(((end_identifier59!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier59.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier59.Start))):null) != null) && (!(end_identifier59!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier59.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier59.Start))):null).Equals(retval.value.Identifier, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier59!=null?((CommonTree)end_identifier59.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_CONFIGURATION, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier59!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier59.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier59.Start))):null), retval.value.Identifier));
			            

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("configuration_declaration", 35);
			LeaveRule("configuration_declaration", 35);
			LeaveRule_configuration_declaration();
		}
		DebugLocation(507, 4);
		} finally { DebugExitRule(GrammarFileName, "configuration_declaration"); }
		return retval;

	}
	// $ANTLR end "configuration_declaration"

	private sealed partial class configuration_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public IConfigurationDeclarativeItem value;
		public configuration_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_configuration_declarative_item();
	partial void LeaveRule_configuration_declarative_item();

	// $ANTLR start "configuration_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:509:1: configuration_declarative_item returns [IConfigurationDeclarativeItem value] : ( use_clause | attribute_specification | group_declaration );
	[GrammarRule("configuration_declarative_item")]
	private MetaClassCreator.configuration_declarative_item_return configuration_declarative_item()
	{
		EnterRule_configuration_declarative_item();
		EnterRule("configuration_declarative_item", 36);
		TraceIn("configuration_declarative_item", 36);
		MetaClassCreator.configuration_declarative_item_return retval = new MetaClassCreator.configuration_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.use_clause_return use_clause60 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.attribute_specification_return attribute_specification61 = default(MetaClassCreator.attribute_specification_return);
		MetaClassCreator.group_declaration_return group_declaration62 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "configuration_declarative_item");
		DebugLocation(509, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:510:5: ( use_clause | attribute_specification | group_declaration )
			int alt61=3;
			try { DebugEnterDecision(61, false);
			switch (input.LA(1))
			{
			case USE:
				{
				alt61 = 1;
				}
				break;
			case ATTRIBUTE_SPECIFICATION:
				{
				alt61 = 2;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt61 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 61, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(61); }
			switch (alt61)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:510:9: use_clause
				{
				DebugLocation(510, 9);
				PushFollow(Follow._use_clause_in_configuration_declarative_item4246);
				use_clause60=use_clause();
				PopFollow();

				DebugLocation(510, 33);
				 retval.value = (use_clause60!=null?use_clause60.value:default(UseClause)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:511:9: attribute_specification
				{
				DebugLocation(511, 9);
				PushFollow(Follow._attribute_specification_in_configuration_declarative_item4271);
				attribute_specification61=attribute_specification();
				PopFollow();

				DebugLocation(511, 33);
				 retval.value = (attribute_specification61!=null?attribute_specification61.value:default(VHDL.declaration.AttributeSpecification)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:512:9: group_declaration
				{
				DebugLocation(512, 9);
				PushFollow(Follow._group_declaration_in_configuration_declarative_item4283);
				group_declaration62=group_declaration();
				PopFollow();

				DebugLocation(512, 33);
				 retval.value = (group_declaration62!=null?group_declaration62.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("configuration_declarative_item", 36);
			LeaveRule("configuration_declarative_item", 36);
			LeaveRule_configuration_declarative_item();
		}
		DebugLocation(513, 4);
		} finally { DebugExitRule(GrammarFileName, "configuration_declarative_item"); }
		return retval;

	}
	// $ANTLR end "configuration_declarative_item"

	partial void EnterRule_configuration_item();
	partial void LeaveRule_configuration_item();

	// $ANTLR start "configuration_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:515:1: configuration_item returns [ConfigurationItem value] : ( block_configuration | component_configuration );
	[GrammarRule("configuration_item")]
	private ConfigurationItem configuration_item()
	{
		EnterRule_configuration_item();
		EnterRule("configuration_item", 37);
		TraceIn("configuration_item", 37);
		ConfigurationItem value = default(ConfigurationItem);


		MetaClassCreator.block_configuration_return block_configuration63 = default(MetaClassCreator.block_configuration_return);
		MetaClassCreator.component_configuration_return component_configuration64 = default(MetaClassCreator.component_configuration_return);

		try { DebugEnterRule(GrammarFileName, "configuration_item");
		DebugLocation(515, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:516:5: ( block_configuration | component_configuration )
			int alt62=2;
			try { DebugEnterDecision(62, false);
			int LA62_0 = input.LA(1);

			if ((LA62_0==BLOCK_CONFIGURATION))
			{
				alt62 = 1;
			}
			else if ((LA62_0==COMPONENT_CONFIGURATION))
			{
				alt62 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 62, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(62); }
			switch (alt62)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:516:9: block_configuration
				{
				DebugLocation(516, 9);
				PushFollow(Follow._block_configuration_in_configuration_item4314);
				block_configuration63=block_configuration();
				PopFollow();

				DebugLocation(516, 33);
				 value = (block_configuration63!=null?block_configuration63.value:default(AbstractBlockConfiguration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:517:9: component_configuration
				{
				DebugLocation(517, 9);
				PushFollow(Follow._component_configuration_in_configuration_item4330);
				component_configuration64=component_configuration();
				PopFollow();

				DebugLocation(517, 33);
				 value = (component_configuration64!=null?component_configuration64.value:default(ComponentConfiguration)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("configuration_item", 37);
			LeaveRule("configuration_item", 37);
			LeaveRule_configuration_item();
		}
		DebugLocation(518, 4);
		} finally { DebugExitRule(GrammarFileName, "configuration_item"); }
		return value;

	}
	// $ANTLR end "configuration_item"

	private sealed partial class configuration_specification_return : TreeRuleReturnScope<CommonTree>
	{
		public ConfigurationSpecification value;
		public configuration_specification_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_configuration_specification();
	partial void LeaveRule_configuration_specification();

	// $ANTLR start "configuration_specification"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:520:1: configuration_specification returns [ConfigurationSpecification value] : ^( CONFIGURATION_SPECIFICATION cs= component_specification (ea= entity_aspect )? (gma= generic_map_aspect )? (pma= port_map_aspect )? ) ;
	[GrammarRule("configuration_specification")]
	private MetaClassCreator.configuration_specification_return configuration_specification()
	{
		EnterRule_configuration_specification();
		EnterRule("configuration_specification", 38);
		TraceIn("configuration_specification", 38);
		MetaClassCreator.configuration_specification_return retval = new MetaClassCreator.configuration_specification_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.component_specification_return cs = default(MetaClassCreator.component_specification_return);
		EntityAspect ea = default(EntityAspect);
		List<AssociationElement> gma = default(List<AssociationElement>);
		List<AssociationElement> pma = default(List<AssociationElement>);

		try { DebugEnterRule(GrammarFileName, "configuration_specification");
		DebugLocation(520, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:522:5: ( ^( CONFIGURATION_SPECIFICATION cs= component_specification (ea= entity_aspect )? (gma= generic_map_aspect )? (pma= port_map_aspect )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:522:9: ^( CONFIGURATION_SPECIFICATION cs= component_specification (ea= entity_aspect )? (gma= generic_map_aspect )? (pma= port_map_aspect )? )
			{
			DebugLocation(522, 9);
			DebugLocation(522, 12);
			Match(input,CONFIGURATION_SPECIFICATION,Follow._CONFIGURATION_SPECIFICATION_in_configuration_specification4362); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(523, 15);
			PushFollow(Follow._component_specification_in_configuration_specification4379);
			cs=component_specification();
			PopFollow();

			DebugLocation(523, 40);
			 retval.value = new ConfigurationSpecification((cs!=null?cs.value:default(ComponentSpecification))); 
			DebugLocation(524, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:524:13: (ea= entity_aspect )?
			int alt63=2;
			try { DebugEnterSubRule(63);
			try { DebugEnterDecision(63, false);
			int LA63_0 = input.LA(1);

			if ((LA63_0==CONFIGURATION||LA63_0==ENTITY||LA63_0==OPEN))
			{
				alt63 = 1;
			}
			} finally { DebugExitDecision(63); }
			switch (alt63)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:524:15: ea= entity_aspect
				{
				DebugLocation(524, 17);
				PushFollow(Follow._entity_aspect_in_configuration_specification4399);
				ea=entity_aspect();
				PopFollow();

				DebugLocation(524, 32);
				 retval.value.EntityAspect = ea; 

				}
				break;

			}
			} finally { DebugExitSubRule(63); }

			DebugLocation(525, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:525:13: (gma= generic_map_aspect )?
			int alt64=2;
			try { DebugEnterSubRule(64);
			try { DebugEnterDecision(64, false);
			int LA64_0 = input.LA(1);

			if ((LA64_0==GENERIC_MAP))
			{
				alt64 = 1;
			}
			} finally { DebugExitDecision(64); }
			switch (alt64)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:525:15: gma= generic_map_aspect
				{
				DebugLocation(525, 18);
				PushFollow(Follow._generic_map_aspect_in_configuration_specification4422);
				gma=generic_map_aspect();
				PopFollow();

				DebugLocation(525, 38);
				 AddRange(retval.value.GenericMap, gma); 

				}
				break;

			}
			} finally { DebugExitSubRule(64); }

			DebugLocation(526, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:526:13: (pma= port_map_aspect )?
			int alt65=2;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, false);
			int LA65_0 = input.LA(1);

			if ((LA65_0==PORT_MAP))
			{
				alt65 = 1;
			}
			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:526:15: pma= port_map_aspect
				{
				DebugLocation(526, 18);
				PushFollow(Follow._port_map_aspect_in_configuration_specification4445);
				pma=port_map_aspect();
				PopFollow();

				DebugLocation(526, 35);
				 AddRange(retval.value.PortMap, pma); 

				}
				break;

			}
			} finally { DebugExitSubRule(65); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("configuration_specification", 38);
			LeaveRule("configuration_specification", 38);
			LeaveRule_configuration_specification();
		}
		DebugLocation(528, 4);
		} finally { DebugExitRule(GrammarFileName, "configuration_specification"); }
		return retval;

	}
	// $ANTLR end "configuration_specification"

	private sealed partial class constant_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public ConstantDeclaration value;
		public constant_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_constant_declaration();
	partial void LeaveRule_constant_declaration();

	// $ANTLR start "constant_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:530:1: constant_declaration returns [ConstantDeclaration value] : ^( CONSTANT identifier_list si= subtype_indication (def= expression )? ) ;
	[GrammarRule("constant_declaration")]
	private MetaClassCreator.constant_declaration_return constant_declaration()
	{
		EnterRule_constant_declaration();
		EnterRule("constant_declaration", 39);
		TraceIn("constant_declaration", 39);
		MetaClassCreator.constant_declaration_return retval = new MetaClassCreator.constant_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication si = default(ISubtypeIndication);
		MetaClassCreator.expression_return def = default(MetaClassCreator.expression_return);
		List<string> identifier_list65 = default(List<string>);

		try { DebugEnterRule(GrammarFileName, "constant_declaration");
		DebugLocation(530, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:536:5: ( ^( CONSTANT identifier_list si= subtype_indication (def= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:536:9: ^( CONSTANT identifier_list si= subtype_indication (def= expression )? )
			{
			DebugLocation(536, 9);
			DebugLocation(536, 12);
			Match(input,CONSTANT,Follow._CONSTANT_in_constant_declaration4491); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(536, 21);
			PushFollow(Follow._identifier_list_in_constant_declaration4493);
			identifier_list65=identifier_list();
			PopFollow();

			DebugLocation(536, 39);
			PushFollow(Follow._subtype_indication_in_constant_declaration4497);
			si=subtype_indication();
			PopFollow();

			DebugLocation(536, 62);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:536:62: (def= expression )?
			int alt66=2;
			try { DebugEnterSubRule(66);
			try { DebugEnterDecision(66, false);
			int LA66_0 = input.LA(1);

			if ((LA66_0==EXPRESSION))
			{
				alt66 = 1;
			}
			} finally { DebugExitDecision(66); }
			switch (alt66)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:536:62: def= expression
				{
				DebugLocation(536, 62);
				PushFollow(Follow._expression_in_constant_declaration4501);
				def=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(66); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(537, 9);

			            List<Constant> constants = new List<Constant>();
			            foreach (string identifier in identifier_list65) 
			            {
			                constants.Add(new Constant(identifier, si, (def!=null?def.value:default(Expression))));
			            }
			            retval.value = new ConstantDeclaration(constants);
			        

			}


				AddAnnotations(retval.value, retval.Start);
				retval.value.Parent = currentScope;

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("constant_declaration", 39);
			LeaveRule("constant_declaration", 39);
			LeaveRule_constant_declaration();
		}
		DebugLocation(545, 4);
		} finally { DebugExitRule(GrammarFileName, "constant_declaration"); }
		return retval;

	}
	// $ANTLR end "constant_declaration"

	private sealed partial class constrained_array_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public ConstrainedArray value;
		public constrained_array_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_constrained_array_definition();
	partial void LeaveRule_constrained_array_definition();

	// $ANTLR start "constrained_array_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:547:1: constrained_array_definition[string ident] returns [ConstrainedArray value] : ^( CONSTRAINED_ARRAY_DEFINITION ic= index_constraint elementType= subtype_indication ) ;
	[GrammarRule("constrained_array_definition")]
	private MetaClassCreator.constrained_array_definition_return constrained_array_definition(string ident)
	{
		EnterRule_constrained_array_definition();
		EnterRule("constrained_array_definition", 40);
		TraceIn("constrained_array_definition", 40);
		MetaClassCreator.constrained_array_definition_return retval = new MetaClassCreator.constrained_array_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<DiscreteRange> ic = default(List<DiscreteRange>);
		ISubtypeIndication elementType = default(ISubtypeIndication);

		try { DebugEnterRule(GrammarFileName, "constrained_array_definition");
		DebugLocation(547, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:549:5: ( ^( CONSTRAINED_ARRAY_DEFINITION ic= index_constraint elementType= subtype_indication ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:549:9: ^( CONSTRAINED_ARRAY_DEFINITION ic= index_constraint elementType= subtype_indication )
			{
			DebugLocation(549, 9);
			DebugLocation(549, 12);
			Match(input,CONSTRAINED_ARRAY_DEFINITION,Follow._CONSTRAINED_ARRAY_DEFINITION_in_constrained_array_definition4545); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(549, 43);
			PushFollow(Follow._index_constraint_in_constrained_array_definition4549);
			ic=index_constraint();
			PopFollow();

			DebugLocation(549, 72);
			PushFollow(Follow._subtype_indication_in_constrained_array_definition4553);
			elementType=subtype_indication();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(550, 9);
			 retval.value = new ConstrainedArray(ident, elementType, ic); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("constrained_array_definition", 40);
			LeaveRule("constrained_array_definition", 40);
			LeaveRule_constrained_array_definition();
		}
		DebugLocation(551, 4);
		} finally { DebugExitRule(GrammarFileName, "constrained_array_definition"); }
		return retval;

	}
	// $ANTLR end "constrained_array_definition"

	partial void EnterRule_context_item();
	partial void LeaveRule_context_item();

	// $ANTLR start "context_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:553:1: context_item returns [LibraryUnit value] : ( library_clause | use_clause );
	[GrammarRule("context_item")]
	private LibraryUnit context_item()
	{
		EnterRule_context_item();
		EnterRule("context_item", 41);
		TraceIn("context_item", 41);
		LibraryUnit value = default(LibraryUnit);


		MetaClassCreator.library_clause_return library_clause66 = default(MetaClassCreator.library_clause_return);
		MetaClassCreator.use_clause_return use_clause67 = default(MetaClassCreator.use_clause_return);

		try { DebugEnterRule(GrammarFileName, "context_item");
		DebugLocation(553, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:554:5: ( library_clause | use_clause )
			int alt67=2;
			try { DebugEnterDecision(67, false);
			int LA67_0 = input.LA(1);

			if ((LA67_0==LIBRARY))
			{
				alt67 = 1;
			}
			else if ((LA67_0==USE))
			{
				alt67 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 67, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:554:9: library_clause
				{
				DebugLocation(554, 9);
				PushFollow(Follow._library_clause_in_context_item4588);
				library_clause66=library_clause();
				PopFollow();

				DebugLocation(554, 24);
				 value = (library_clause66!=null?library_clause66.value:default(LibraryClause)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:555:9: use_clause
				{
				DebugLocation(555, 9);
				PushFollow(Follow._use_clause_in_context_item4600);
				use_clause67=use_clause();
				PopFollow();

				DebugLocation(555, 24);
				 value = (use_clause67!=null?use_clause67.value:default(UseClause)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("context_item", 41);
			LeaveRule("context_item", 41);
			LeaveRule_context_item();
		}
		DebugLocation(556, 4);
		} finally { DebugExitRule(GrammarFileName, "context_item"); }
		return value;

	}
	// $ANTLR end "context_item"

	partial void EnterRule_delay_mechanism();
	partial void LeaveRule_delay_mechanism();

	// $ANTLR start "delay_mechanism"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:558:1: delay_mechanism returns [DelayMechanism value] : ( TRANSPORT | ^( INERTIAL (time= expression )? ) );
	[GrammarRule("delay_mechanism")]
	private DelayMechanism delay_mechanism()
	{
		EnterRule_delay_mechanism();
		EnterRule("delay_mechanism", 42);
		TraceIn("delay_mechanism", 42);
		DelayMechanism value = default(DelayMechanism);


		MetaClassCreator.expression_return time = default(MetaClassCreator.expression_return);


		    value = DelayMechanism.INERTIAL;

		try { DebugEnterRule(GrammarFileName, "delay_mechanism");
		DebugLocation(558, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:562:5: ( TRANSPORT | ^( INERTIAL (time= expression )? ) )
			int alt69=2;
			try { DebugEnterDecision(69, false);
			int LA69_0 = input.LA(1);

			if ((LA69_0==TRANSPORT))
			{
				alt69 = 1;
			}
			else if ((LA69_0==INERTIAL))
			{
				alt69 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 69, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:562:9: TRANSPORT
				{
				DebugLocation(562, 9);
				Match(input,TRANSPORT,Follow._TRANSPORT_in_delay_mechanism4634); 
				DebugLocation(562, 19);
				 value = DelayMechanism.TRANSPORT; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:563:9: ^( INERTIAL (time= expression )? )
				{
				DebugLocation(563, 9);
				DebugLocation(563, 12);
				Match(input,INERTIAL,Follow._INERTIAL_in_delay_mechanism4648); 

				DebugLocation(563, 21);
				 value = DelayMechanism.INERTIAL; 

				if (input.LA(1) == TokenTypes.Down)
				{
					Match(input, TokenTypes.Down, null); 
					DebugLocation(564, 13);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:564:13: (time= expression )?
					int alt68=2;
					try { DebugEnterSubRule(68);
					try { DebugEnterDecision(68, false);
					int LA68_0 = input.LA(1);

					if ((LA68_0==EXPRESSION))
					{
						alt68 = 1;
					}
					} finally { DebugExitDecision(68); }
					switch (alt68)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:564:15: time= expression
						{
						DebugLocation(564, 19);
						PushFollow(Follow._expression_in_delay_mechanism4668);
						time=expression();
						PopFollow();

						DebugLocation(564, 31);
						 value = DelayMechanism.REJECT_INERTIAL((time!=null?time.value:default(Expression))); 

						}
						break;

					}
					} finally { DebugExitSubRule(68); }


					Match(input, TokenTypes.Up, null); 
				}


				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("delay_mechanism", 42);
			LeaveRule("delay_mechanism", 42);
			LeaveRule_delay_mechanism();
		}
		DebugLocation(566, 4);
		} finally { DebugExitRule(GrammarFileName, "delay_mechanism"); }
		return value;

	}
	// $ANTLR end "delay_mechanism"

	partial void EnterRule_design_file();
	partial void LeaveRule_design_file();

	// $ANTLR start "design_file"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:569:1: public design_file returns [VhdlFile value] : ( ( ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] ) ) )* EOF ;
	[GrammarRule("design_file")]
	public VhdlFile design_file()
	{
		EnterRule_design_file();
		EnterRule("design_file", 43);
		TraceIn("design_file", 43);
		VhdlFile value = default(VhdlFile);


		LibraryUnit context_item68 = default(LibraryUnit);
		PrimaryUnit primary_unit69 = default(PrimaryUnit);
		SecondaryUnit secondary_unit70 = default(SecondaryUnit);


		    value = new VhdlFile();
		    List<LibraryUnit> contextItems = new List<LibraryUnit>();
		    libraryScope.Files.Add(value);
		    currentScope = value;

		try { DebugEnterRule(GrammarFileName, "design_file");
		DebugLocation(569, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:576:5: ( ( ( ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] ) ) )* EOF )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:576:9: ( ( ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] ) ) )* EOF
			{
			DebugLocation(576, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:576:9: ( ( ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] ) ) )*
			try { DebugEnterSubRule(72);
			while (true)
			{
				int alt72=2;
				try { DebugEnterDecision(72, false);
				int LA72_0 = input.LA(1);

				if ((LA72_0==ARCHITECTURE||LA72_0==CONFIGURATION||LA72_0==ENTITY||LA72_0==LIBRARY||(LA72_0>=PACKAGE && LA72_0<=PACKAGE_BODY)||LA72_0==USE))
				{
					alt72 = 1;
				}


				} finally { DebugExitDecision(72); }
				switch ( alt72 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:577:10: ( ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] ) )
					{
					DebugLocation(577, 10);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:577:10: ( ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] ) )
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:578:14: ( context_item )* ( primary_unit[contextItems] | secondary_unit[contextItems] )
					{
					DebugLocation(578, 14);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:578:14: ( context_item )*
					try { DebugEnterSubRule(70);
					while (true)
					{
						int alt70=2;
						try { DebugEnterDecision(70, false);
						int LA70_0 = input.LA(1);

						if ((LA70_0==LIBRARY||LA70_0==USE))
						{
							alt70 = 1;
						}


						} finally { DebugExitDecision(70); }
						switch ( alt70 )
						{
						case 1:
							DebugEnterAlt(1);
							// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:579:18: context_item
							{
							DebugLocation(579, 18);
							PushFollow(Follow._context_item_in_design_file4759);
							context_item68=context_item();
							PopFollow();

							DebugLocation(580, 18);

								                    if (context_item68 is LibraryClause) {
								                        LibraryClause lc = (LibraryClause)context_item68;
								                        foreach (string library in lc.getLibraries())
								                        {
								                        	LibraryDeclarativeRegion loaded_library = LoadLibrary(library);
								                        	if(loaded_library != null)
									                        	rootScope.AddLibrary(loaded_library);
								                        }
								                    }
								                    contextItems.Add(context_item68);
								                

							}
							break;

						default:
							goto loop70;
						}
					}

					loop70:
						;

					} finally { DebugExitSubRule(70); }

					DebugLocation(593, 14);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:593:14: ( primary_unit[contextItems] | secondary_unit[contextItems] )
					int alt71=2;
					try { DebugEnterSubRule(71);
					try { DebugEnterDecision(71, false);
					int LA71_0 = input.LA(1);

					if ((LA71_0==CONFIGURATION||LA71_0==ENTITY||LA71_0==PACKAGE))
					{
						alt71 = 1;
					}
					else if ((LA71_0==ARCHITECTURE||LA71_0==PACKAGE_BODY))
					{
						alt71 = 2;
					}
					else
					{
						NoViableAltException nvae = new NoViableAltException("", 71, 0, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(71); }
					switch (alt71)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:594:15: primary_unit[contextItems]
						{
						DebugLocation(594, 15);
						PushFollow(Follow._primary_unit_in_design_file4825);
						primary_unit69=primary_unit(contextItems);
						PopFollow();

						DebugLocation(595, 15);
						 
								            	value.Elements.Add(primary_unit69);
								            

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:599:15: secondary_unit[contextItems]
						{
						DebugLocation(599, 15);
						PushFollow(Follow._secondary_unit_in_design_file4864);
						secondary_unit70=secondary_unit(contextItems);
						PopFollow();

						DebugLocation(600, 15);
						 
								            	value.Elements.Add(secondary_unit70);
								            

						}
						break;

					}
					} finally { DebugExitSubRule(71); }


					}


					}
					break;

				default:
					goto loop72;
				}
			}

			loop72:
				;

			} finally { DebugExitSubRule(72); }

			DebugLocation(606, 12);
			Match(input,EOF,Follow._EOF_in_design_file4949); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("design_file", 43);
			LeaveRule("design_file", 43);
			LeaveRule_design_file();
		}
		DebugLocation(607, 4);
		} finally { DebugExitRule(GrammarFileName, "design_file"); }
		return value;

	}
	// $ANTLR end "design_file"

	partial void EnterRule_designator();
	partial void LeaveRule_designator();

	// $ANTLR start "designator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:609:1: designator : ( identifier | STRING_LITERAL );
	[GrammarRule("designator")]
	private TreeRuleReturnScope<CommonTree> designator()
	{
		EnterRule_designator();
		EnterRule("designator", 44);
		TraceIn("designator", 44);
		TreeRuleReturnScope<CommonTree> retval = new TreeRuleReturnScope<CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "designator");
		DebugLocation(609, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:610:5: ( identifier | STRING_LITERAL )
			int alt73=2;
			try { DebugEnterDecision(73, false);
			int LA73_0 = input.LA(1);

			if ((LA73_0==BASIC_IDENTIFIER||LA73_0==EXTENDED_IDENTIFIER))
			{
				alt73 = 1;
			}
			else if ((LA73_0==STRING_LITERAL))
			{
				alt73 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 73, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(73); }
			switch (alt73)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:610:9: identifier
				{
				DebugLocation(610, 9);
				PushFollow(Follow._identifier_in_designator4968);
				identifier();
				PopFollow();


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:611:9: STRING_LITERAL
				{
				DebugLocation(611, 9);
				Match(input,STRING_LITERAL,Follow._STRING_LITERAL_in_designator4978); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("designator", 44);
			LeaveRule("designator", 44);
			LeaveRule_designator();
		}
		DebugLocation(612, 4);
		} finally { DebugExitRule(GrammarFileName, "designator"); }
		return retval;

	}
	// $ANTLR end "designator"

	partial void EnterRule_direction();
	partial void LeaveRule_direction();

	// $ANTLR start "direction"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:614:1: direction returns [Range.RangeDirection value] : ( TO | DOWNTO );
	[GrammarRule("direction")]
	private Range.RangeDirection direction()
	{
		EnterRule_direction();
		EnterRule("direction", 45);
		TraceIn("direction", 45);
		Range.RangeDirection value = default(Range.RangeDirection);


		try { DebugEnterRule(GrammarFileName, "direction");
		DebugLocation(614, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:615:5: ( TO | DOWNTO )
			int alt74=2;
			try { DebugEnterDecision(74, false);
			int LA74_0 = input.LA(1);

			if ((LA74_0==TO))
			{
				alt74 = 1;
			}
			else if ((LA74_0==DOWNTO))
			{
				alt74 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 74, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(74); }
			switch (alt74)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:615:9: TO
				{
				DebugLocation(615, 9);
				Match(input,TO,Follow._TO_in_direction5001); 
				DebugLocation(615, 16);
				 value = Range.RangeDirection.TO; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:616:9: DOWNTO
				{
				DebugLocation(616, 9);
				Match(input,DOWNTO,Follow._DOWNTO_in_direction5017); 
				DebugLocation(616, 16);
				 value = Range.RangeDirection.DOWNTO; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("direction", 45);
			LeaveRule("direction", 45);
			LeaveRule_direction();
		}
		DebugLocation(617, 4);
		} finally { DebugExitRule(GrammarFileName, "direction"); }
		return value;

	}
	// $ANTLR end "direction"

	private sealed partial class disconnection_specification_return : TreeRuleReturnScope<CommonTree>
	{
		public DisconnectionSpecification value;
		public disconnection_specification_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_disconnection_specification();
	partial void LeaveRule_disconnection_specification();

	// $ANTLR start "disconnection_specification"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:619:1: disconnection_specification returns [DisconnectionSpecification value] : ^( DISCONNECT sl= signal_list type_mark= name after= expression ) ;
	[GrammarRule("disconnection_specification")]
	private MetaClassCreator.disconnection_specification_return disconnection_specification()
	{
		EnterRule_disconnection_specification();
		EnterRule("disconnection_specification", 46);
		TraceIn("disconnection_specification", 46);
		MetaClassCreator.disconnection_specification_return retval = new MetaClassCreator.disconnection_specification_return(this);
		retval.Start = (CommonTree)input.LT(1);

		DisconnectionSpecification.SignalList sl = default(DisconnectionSpecification.SignalList);
		MetaClassCreator.name_return type_mark = default(MetaClassCreator.name_return);
		MetaClassCreator.expression_return after = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "disconnection_specification");
		DebugLocation(619, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:621:5: ( ^( DISCONNECT sl= signal_list type_mark= name after= expression ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:621:9: ^( DISCONNECT sl= signal_list type_mark= name after= expression )
			{
			DebugLocation(621, 9);
			DebugLocation(621, 12);
			Match(input,DISCONNECT,Follow._DISCONNECT_in_disconnection_specification5049); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(621, 25);
			PushFollow(Follow._signal_list_in_disconnection_specification5053);
			sl=signal_list();
			PopFollow();

			DebugLocation(621, 47);
			PushFollow(Follow._name_in_disconnection_specification5057);
			type_mark=name();
			PopFollow();

			DebugLocation(621, 58);
			PushFollow(Follow._expression_in_disconnection_specification5061);
			after=expression();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(622, 9);
			 retval.value = new DisconnectionSpecification(sl, (type_mark!=null?type_mark.value:default(TemporaryName)).toTypeMark(currentScope), (after!=null?after.value:default(Expression))); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("disconnection_specification", 46);
			LeaveRule("disconnection_specification", 46);
			LeaveRule_disconnection_specification();
		}
		DebugLocation(623, 4);
		} finally { DebugExitRule(GrammarFileName, "disconnection_specification"); }
		return retval;

	}
	// $ANTLR end "disconnection_specification"

	partial void EnterRule_discrete_range();
	partial void LeaveRule_discrete_range();

	// $ANTLR start "discrete_range"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:625:1: discrete_range returns [DiscreteRange value] : ( ^( direction left= expression right= expression ) | ^( DISCRETE_RANGE type_mark_or_range_attribute= name ( range_constraint | index_constraint |) ) );
	[GrammarRule("discrete_range")]
	private DiscreteRange discrete_range()
	{
		EnterRule_discrete_range();
		EnterRule("discrete_range", 47);
		TraceIn("discrete_range", 47);
		DiscreteRange value = default(DiscreteRange);


		MetaClassCreator.expression_return left = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return right = default(MetaClassCreator.expression_return);
		MetaClassCreator.name_return type_mark_or_range_attribute = default(MetaClassCreator.name_return);
		Range.RangeDirection direction71 = default(Range.RangeDirection);
		RangeProvider range_constraint72 = default(RangeProvider);
		List<DiscreteRange> index_constraint73 = default(List<DiscreteRange>);

		try { DebugEnterRule(GrammarFileName, "discrete_range");
		DebugLocation(625, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:626:5: ( ^( direction left= expression right= expression ) | ^( DISCRETE_RANGE type_mark_or_range_attribute= name ( range_constraint | index_constraint |) ) )
			int alt76=2;
			try { DebugEnterDecision(76, false);
			int LA76_0 = input.LA(1);

			if ((LA76_0==DOWNTO||LA76_0==TO))
			{
				alt76 = 1;
			}
			else if ((LA76_0==DISCRETE_RANGE))
			{
				alt76 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 76, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(76); }
			switch (alt76)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:626:9: ^( direction left= expression right= expression )
				{
				DebugLocation(626, 9);
				DebugLocation(626, 12);
				PushFollow(Follow._direction_in_discrete_range5098);
				direction71=direction();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(626, 26);
				PushFollow(Follow._expression_in_discrete_range5102);
				left=expression();
				PopFollow();

				DebugLocation(626, 43);
				PushFollow(Follow._expression_in_discrete_range5106);
				right=expression();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(627, 9);
				 value = new Range((left!=null?left.value:default(Expression)), direction71, (right!=null?right.value:default(Expression))); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:628:9: ^( DISCRETE_RANGE type_mark_or_range_attribute= name ( range_constraint | index_constraint |) )
				{
				DebugLocation(628, 9);
				DebugLocation(628, 12);
				Match(input,DISCRETE_RANGE,Follow._DISCRETE_RANGE_in_discrete_range5129); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(629, 41);
				PushFollow(Follow._name_in_discrete_range5145);
				type_mark_or_range_attribute=name();
				PopFollow();

				DebugLocation(630, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:630:13: ( range_constraint | index_constraint |)
				int alt75=3;
				try { DebugEnterSubRule(75);
				try { DebugEnterDecision(75, false);
				switch (input.LA(1))
				{
				case RANGETOK:
					{
					alt75 = 1;
					}
					break;
				case INDEX_CONSTRAINT:
					{
					alt75 = 2;
					}
					break;
				case UP:
					{
					alt75 = 3;
					}
					break;
				default:
					{
						NoViableAltException nvae = new NoViableAltException("", 75, 0, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				} finally { DebugExitDecision(75); }
				switch (alt75)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:631:21: range_constraint
					{
					DebugLocation(631, 21);
					PushFollow(Follow._range_constraint_in_discrete_range5181);
					range_constraint72=range_constraint();
					PopFollow();

					DebugLocation(632, 21);

					                        value = (type_mark_or_range_attribute!=null?type_mark_or_range_attribute.value:default(TemporaryName)).toDiscreteRange(
					                            currentScope, range_constraint72);
					                    

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:636:21: index_constraint
					{
					DebugLocation(636, 21);
					PushFollow(Follow._index_constraint_in_discrete_range5225);
					index_constraint73=index_constraint();
					PopFollow();

					DebugLocation(637, 21);

					                        value = (type_mark_or_range_attribute!=null?type_mark_or_range_attribute.value:default(TemporaryName)).toDiscreteRange(
					                            currentScope, index_constraint73);
					                    

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:642:21: 
					{
					DebugLocation(642, 21);
					 value = (type_mark_or_range_attribute!=null?type_mark_or_range_attribute.value:default(TemporaryName)).toDiscreteRange(currentScope); 

					}
					break;

				}
				} finally { DebugExitSubRule(75); }


				Match(input, TokenTypes.Up, null); 


				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("discrete_range", 47);
			LeaveRule("discrete_range", 47);
			LeaveRule_discrete_range();
		}
		DebugLocation(645, 4);
		} finally { DebugExitRule(GrammarFileName, "discrete_range"); }
		return value;

	}
	// $ANTLR end "discrete_range"

	partial void EnterRule_entity_aspect();
	partial void LeaveRule_entity_aspect();

	// $ANTLR start "entity_aspect"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:648:1: entity_aspect returns [EntityAspect value] : ( ^( ENTITY entity= name (architecture= identifier )? ) | ^( CONFIGURATION configuration= name ) | OPEN );
	[GrammarRule("entity_aspect")]
	private EntityAspect entity_aspect()
	{
		EnterRule_entity_aspect();
		EnterRule("entity_aspect", 48);
		TraceIn("entity_aspect", 48);
		EntityAspect value = default(EntityAspect);


		MetaClassCreator.name_return entity = default(MetaClassCreator.name_return);
		TreeRuleReturnScope<CommonTree> architecture = default(TreeRuleReturnScope<CommonTree>);
		MetaClassCreator.name_return configuration = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "entity_aspect");
		DebugLocation(648, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:649:5: ( ^( ENTITY entity= name (architecture= identifier )? ) | ^( CONFIGURATION configuration= name ) | OPEN )
			int alt78=3;
			try { DebugEnterDecision(78, false);
			switch (input.LA(1))
			{
			case ENTITY:
				{
				alt78 = 1;
				}
				break;
			case CONFIGURATION:
				{
				alt78 = 2;
				}
				break;
			case OPEN:
				{
				alt78 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 78, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(78); }
			switch (alt78)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:649:9: ^( ENTITY entity= name (architecture= identifier )? )
				{
				DebugLocation(649, 9);
				DebugLocation(649, 12);
				Match(input,ENTITY,Follow._ENTITY_in_entity_aspect5337); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(649, 25);
				PushFollow(Follow._name_in_entity_aspect5341);
				entity=name();
				PopFollow();

				DebugLocation(649, 43);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:649:43: (architecture= identifier )?
				int alt77=2;
				try { DebugEnterSubRule(77);
				try { DebugEnterDecision(77, false);
				int LA77_0 = input.LA(1);

				if ((LA77_0==BASIC_IDENTIFIER||LA77_0==EXTENDED_IDENTIFIER))
				{
					alt77 = 1;
				}
				} finally { DebugExitDecision(77); }
				switch (alt77)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:649:43: architecture= identifier
					{
					DebugLocation(649, 43);
					PushFollow(Follow._identifier_in_entity_aspect5345);
					architecture=identifier();
					PopFollow();


					}
					break;

				}
				} finally { DebugExitSubRule(77); }


				Match(input, TokenTypes.Up, null); 

				DebugLocation(650, 9);

				            Entity dummyEntity = new Entity((entity!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(entity.Start),input.TreeAdaptor.GetTokenStopIndex(entity.Start))):null));
				            if ((architecture!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(architecture.Start),input.TreeAdaptor.GetTokenStopIndex(architecture.Start))):null) != null)
				            {
				                //TODO: remove dummy architecture
				                Architecture dummy = new Architecture((architecture!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(architecture.Start),input.TreeAdaptor.GetTokenStopIndex(architecture.Start))):null), dummyEntity);
				                value = EntityAspect.architecture(dummy);
				            }
				            else
				            {
				                value = EntityAspect.entity(dummyEntity);
				            }
				        

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:663:9: ^( CONFIGURATION configuration= name )
				{
				DebugLocation(663, 9);
				DebugLocation(663, 12);
				Match(input,CONFIGURATION,Follow._CONFIGURATION_in_entity_aspect5370); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(663, 39);
				PushFollow(Follow._name_in_entity_aspect5374);
				configuration=name();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(664, 9);

				            Configuration dummy = new Configuration((configuration!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(configuration.Start),input.TreeAdaptor.GetTokenStopIndex(configuration.Start))):null), null, null);
				            value = EntityAspect.configuration(dummy);
				        

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:668:9: OPEN
				{
				DebugLocation(668, 9);
				Match(input,OPEN,Follow._OPEN_in_entity_aspect5396); 
				DebugLocation(669, 9);
				 value = EntityAspect.OPEN; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_aspect", 48);
			LeaveRule("entity_aspect", 48);
			LeaveRule_entity_aspect();
		}
		DebugLocation(670, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_aspect"); }
		return value;

	}
	// $ANTLR end "entity_aspect"

	partial void EnterRule_entity_class();
	partial void LeaveRule_entity_class();

	// $ANTLR start "entity_class"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:672:1: entity_class returns [EntityClass value] : ( ENTITY | ARCHITECTURE | CONFIGURATION | PROCEDURE | FUNCTION | PACKAGE | TYPE | SUBTYPE | CONSTANT | SIGNAL | VARIABLE | COMPONENT | LABEL | LITERAL | UNITS | GROUP | FILE );
	[GrammarRule("entity_class")]
	private EntityClass entity_class()
	{
		EnterRule_entity_class();
		EnterRule("entity_class", 49);
		TraceIn("entity_class", 49);
		EntityClass value = default(EntityClass);


		try { DebugEnterRule(GrammarFileName, "entity_class");
		DebugLocation(672, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:673:5: ( ENTITY | ARCHITECTURE | CONFIGURATION | PROCEDURE | FUNCTION | PACKAGE | TYPE | SUBTYPE | CONSTANT | SIGNAL | VARIABLE | COMPONENT | LABEL | LITERAL | UNITS | GROUP | FILE )
			int alt79=17;
			try { DebugEnterDecision(79, false);
			switch (input.LA(1))
			{
			case ENTITY:
				{
				alt79 = 1;
				}
				break;
			case ARCHITECTURE:
				{
				alt79 = 2;
				}
				break;
			case CONFIGURATION:
				{
				alt79 = 3;
				}
				break;
			case PROCEDURE:
				{
				alt79 = 4;
				}
				break;
			case FUNCTION:
				{
				alt79 = 5;
				}
				break;
			case PACKAGE:
				{
				alt79 = 6;
				}
				break;
			case TYPE:
				{
				alt79 = 7;
				}
				break;
			case SUBTYPE:
				{
				alt79 = 8;
				}
				break;
			case CONSTANT:
				{
				alt79 = 9;
				}
				break;
			case SIGNAL:
				{
				alt79 = 10;
				}
				break;
			case VARIABLE:
				{
				alt79 = 11;
				}
				break;
			case COMPONENT:
				{
				alt79 = 12;
				}
				break;
			case LABEL:
				{
				alt79 = 13;
				}
				break;
			case LITERAL:
				{
				alt79 = 14;
				}
				break;
			case UNITS:
				{
				alt79 = 15;
				}
				break;
			case GROUP:
				{
				alt79 = 16;
				}
				break;
			case FILE:
				{
				alt79 = 17;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 79, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(79); }
			switch (alt79)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:673:9: ENTITY
				{
				DebugLocation(673, 9);
				Match(input,ENTITY,Follow._ENTITY_in_entity_class5429); 
				DebugLocation(673, 23);
				 value = EntityClass.ENTITY; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:674:9: ARCHITECTURE
				{
				DebugLocation(674, 9);
				Match(input,ARCHITECTURE,Follow._ARCHITECTURE_in_entity_class5448); 
				DebugLocation(674, 23);
				 value = EntityClass.ARCHITECTURE; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:675:9: CONFIGURATION
				{
				DebugLocation(675, 9);
				Match(input,CONFIGURATION,Follow._CONFIGURATION_in_entity_class5461); 
				DebugLocation(675, 23);
				 value = EntityClass.CONFIGURATION; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:676:9: PROCEDURE
				{
				DebugLocation(676, 9);
				Match(input,PROCEDURE,Follow._PROCEDURE_in_entity_class5473); 
				DebugLocation(676, 23);
				 value = EntityClass.PROCEDURE; 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:677:9: FUNCTION
				{
				DebugLocation(677, 9);
				Match(input,FUNCTION,Follow._FUNCTION_in_entity_class5489); 
				DebugLocation(677, 23);
				 value = EntityClass.FUNCTION; 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:678:9: PACKAGE
				{
				DebugLocation(678, 9);
				Match(input,PACKAGE,Follow._PACKAGE_in_entity_class5506); 
				DebugLocation(678, 23);
				 value = EntityClass.PACKAGE; 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:679:9: TYPE
				{
				DebugLocation(679, 9);
				Match(input,TYPE,Follow._TYPE_in_entity_class5524); 
				DebugLocation(679, 23);
				 value = EntityClass.TYPE; 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:680:9: SUBTYPE
				{
				DebugLocation(680, 9);
				Match(input,SUBTYPE,Follow._SUBTYPE_in_entity_class5545); 
				DebugLocation(680, 23);
				 value = EntityClass.SUBTYPE; 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:681:9: CONSTANT
				{
				DebugLocation(681, 9);
				Match(input,CONSTANT,Follow._CONSTANT_in_entity_class5563); 
				DebugLocation(681, 23);
				 value = EntityClass.CONSTANT; 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:682:9: SIGNAL
				{
				DebugLocation(682, 9);
				Match(input,SIGNAL,Follow._SIGNAL_in_entity_class5580); 
				DebugLocation(682, 23);
				 value = EntityClass.SIGNAL; 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:683:9: VARIABLE
				{
				DebugLocation(683, 9);
				Match(input,VARIABLE,Follow._VARIABLE_in_entity_class5599); 
				DebugLocation(683, 23);
				 value = EntityClass.VARIABLE; 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:684:9: COMPONENT
				{
				DebugLocation(684, 9);
				Match(input,COMPONENT,Follow._COMPONENT_in_entity_class5616); 
				DebugLocation(684, 23);
				 value = EntityClass.COMPONENT; 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:685:9: LABEL
				{
				DebugLocation(685, 9);
				Match(input,LABEL,Follow._LABEL_in_entity_class5632); 
				DebugLocation(685, 23);
				 value = EntityClass.LABEL; 

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:686:9: LITERAL
				{
				DebugLocation(686, 9);
				Match(input,LITERAL,Follow._LITERAL_in_entity_class5652); 
				DebugLocation(686, 23);
				 value = EntityClass.LITERAL; 

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:687:9: UNITS
				{
				DebugLocation(687, 9);
				Match(input,UNITS,Follow._UNITS_in_entity_class5670); 
				DebugLocation(687, 23);
				 value = EntityClass.UNITS; 

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:688:9: GROUP
				{
				DebugLocation(688, 9);
				Match(input,GROUP,Follow._GROUP_in_entity_class5690); 
				DebugLocation(688, 23);
				 value = EntityClass.GROUP; 

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:689:9: FILE
				{
				DebugLocation(689, 9);
				Match(input,FILE,Follow._FILE_in_entity_class5710); 
				DebugLocation(689, 23);
				 value = EntityClass.FILE; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_class", 49);
			LeaveRule("entity_class", 49);
			LeaveRule_entity_class();
		}
		DebugLocation(690, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_class"); }
		return value;

	}
	// $ANTLR end "entity_class"

	private sealed partial class entity_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public Entity value;
		public entity_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_entity_declaration();
	partial void LeaveRule_entity_declaration();

	// $ANTLR start "entity_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:692:1: entity_declaration[List<LibraryUnit> contextItems] returns [Entity value] : ^( ENTITY identifier (gc= generic_clause )? (pc= port_clause )? (edi= entity_declarative_item )* (es= entity_statement )* ( end_identifier )? ) ;
	[GrammarRule("entity_declaration")]
	private MetaClassCreator.entity_declaration_return entity_declaration(List<LibraryUnit> contextItems)
	{
		EnterRule_entity_declaration();
		EnterRule("entity_declaration", 50);
		TraceIn("entity_declaration", 50);
		MetaClassCreator.entity_declaration_return retval = new MetaClassCreator.entity_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<IVhdlObjectProvider> gc = default(List<IVhdlObjectProvider>);
		List<IVhdlObjectProvider> pc = default(List<IVhdlObjectProvider>);
		MetaClassCreator.entity_declarative_item_return edi = default(MetaClassCreator.entity_declarative_item_return);
		MetaClassCreator.entity_statement_return es = default(MetaClassCreator.entity_statement_return);
		TreeRuleReturnScope<CommonTree> identifier74 = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> end_identifier75 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "entity_declaration");
		DebugLocation(692, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:699:5: ( ^( ENTITY identifier (gc= generic_clause )? (pc= port_clause )? (edi= entity_declarative_item )* (es= entity_statement )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:699:9: ^( ENTITY identifier (gc= generic_clause )? (pc= port_clause )? (edi= entity_declarative_item )* (es= entity_statement )* ( end_identifier )? )
			{
			DebugLocation(699, 9);
			DebugLocation(699, 12);
			Match(input,ENTITY,Follow._ENTITY_in_entity_declaration5758); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(700, 13);
			PushFollow(Follow._identifier_in_entity_declaration5772);
			identifier74=identifier();
			PopFollow();

			DebugLocation(701, 13);

			                retval.value = new Entity((identifier74!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier74.Start),input.TreeAdaptor.GetTokenStopIndex(identifier74.Start))):null));
			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			                retval.value.ContextItems.AddRange(contextItems);
			            	contextItems.Clear();
			            
			DebugLocation(708, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:708:13: (gc= generic_clause )?
			int alt80=2;
			try { DebugEnterSubRule(80);
			try { DebugEnterDecision(80, false);
			int LA80_0 = input.LA(1);

			if ((LA80_0==GENERIC))
			{
				alt80 = 1;
			}
			} finally { DebugExitDecision(80); }
			switch (alt80)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:708:15: gc= generic_clause
				{
				DebugLocation(708, 17);
				PushFollow(Follow._generic_clause_in_entity_declaration5804);
				gc=generic_clause();
				PopFollow();

				DebugLocation(708, 33);
				 AddRange(retval.value.Generic, gc); 

				}
				break;

			}
			} finally { DebugExitSubRule(80); }

			DebugLocation(709, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:709:13: (pc= port_clause )?
			int alt81=2;
			try { DebugEnterSubRule(81);
			try { DebugEnterDecision(81, false);
			int LA81_0 = input.LA(1);

			if ((LA81_0==PORT))
			{
				alt81 = 1;
			}
			} finally { DebugExitDecision(81); }
			switch (alt81)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:709:15: pc= port_clause
				{
				DebugLocation(709, 17);
				PushFollow(Follow._port_clause_in_entity_declaration5827);
				pc=port_clause();
				PopFollow();

				DebugLocation(709, 30);
				 AddRange(retval.value.Port, pc); 

				}
				break;

			}
			} finally { DebugExitSubRule(81); }

			DebugLocation(710, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:710:13: (edi= entity_declarative_item )*
			try { DebugEnterSubRule(82);
			while (true)
			{
				int alt82=2;
				try { DebugEnterDecision(82, false);
				int LA82_0 = input.LA(1);

				if ((LA82_0==ALIAS||(LA82_0>=ATTRIBUTE_DECLARATION && LA82_0<=ATTRIBUTE_SPECIFICATION)||LA82_0==CONSTANT||LA82_0==DISCONNECT||LA82_0==FILE||LA82_0==FULL_TYPE_DECLARATION||(LA82_0>=GROUP_DECLARATION && LA82_0<=GROUP_TEMPLATE_DECLARATION)||LA82_0==INCOMPLETE_TYPE_DECLARATION||LA82_0==SIGNAL||(LA82_0>=SUBPROGRAM_BODY && LA82_0<=SUBTYPE)||LA82_0==USE||LA82_0==VARIABLE))
				{
					alt82 = 1;
				}


				} finally { DebugExitDecision(82); }
				switch ( alt82 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:710:15: edi= entity_declarative_item
					{
					DebugLocation(710, 18);
					PushFollow(Follow._entity_declarative_item_in_entity_declaration5850);
					edi=entity_declarative_item();
					PopFollow();

					DebugLocation(710, 43);
					 retval.value.Declarations.Add((edi!=null?edi.value:default(IEntityDeclarativeItem))); 

					}
					break;

				default:
					goto loop82;
				}
			}

			loop82:
				;

			} finally { DebugExitSubRule(82); }

			DebugLocation(711, 13);
			 AddListEndComments((edi!=null?edi.value:default(IEntityDeclarativeItem)), (edi!=null?((CommonTree)edi.Start):default(CommonTree))); 
			DebugLocation(712, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:712:13: (es= entity_statement )*
			try { DebugEnterSubRule(83);
			while (true)
			{
				int alt83=2;
				try { DebugEnterDecision(83, false);
				int LA83_0 = input.LA(1);

				if ((LA83_0==ENTITY_STATEMENT))
				{
					alt83 = 1;
				}


				} finally { DebugExitDecision(83); }
				switch ( alt83 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:712:15: es= entity_statement
					{
					DebugLocation(712, 17);
					PushFollow(Follow._entity_statement_in_entity_declaration5887);
					es=entity_statement();
					PopFollow();

					DebugLocation(712, 35);
					 retval.value.Statements.Add((es!=null?es.value:default(EntityStatement))); 

					}
					break;

				default:
					goto loop83;
				}
			}

			loop83:
				;

			} finally { DebugExitSubRule(83); }

			DebugLocation(713, 13);
			 AddListEndComments((es!=null?es.value:default(EntityStatement)), (es!=null?((CommonTree)es.Start):default(CommonTree))); 
			DebugLocation(714, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:714:13: ( end_identifier )?
			int alt84=2;
			try { DebugEnterSubRule(84);
			try { DebugEnterDecision(84, false);
			int LA84_0 = input.LA(1);

			if ((LA84_0==BASIC_IDENTIFIER||LA84_0==EXTENDED_IDENTIFIER))
			{
				alt84 = 1;
			}
			} finally { DebugExitDecision(84); }
			switch (alt84)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:714:13: end_identifier
				{
				DebugLocation(714, 13);
				PushFollow(Follow._end_identifier_in_entity_declaration5920);
				end_identifier75=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(84); }

			DebugLocation(715, 13);

			            	if(((end_identifier75!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier75.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier75.Start))):null) != null) && (!(end_identifier75!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier75.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier75.Start))):null).Equals(retval.value.Identifier, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier75!=null?((CommonTree)end_identifier75.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_ENTITY, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier75!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier75.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier75.Start))):null), retval.value.Identifier));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_declaration", 50);
			LeaveRule("entity_declaration", 50);
			LeaveRule_entity_declaration();
		}
		DebugLocation(720, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_declaration"); }
		return retval;

	}
	// $ANTLR end "entity_declaration"

	private sealed partial class entity_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public IEntityDeclarativeItem value;
		public entity_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_entity_declarative_item();
	partial void LeaveRule_entity_declarative_item();

	// $ANTLR start "entity_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:722:1: entity_declarative_item returns [IEntityDeclarativeItem value] : ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | variable_declaration | constant_declaration | signal_declaration | file_declaration | alias_declaration | attribute_specification | attribute_declaration | disconnection_specification | use_clause | group_template_declaration | group_declaration );
	[GrammarRule("entity_declarative_item")]
	private MetaClassCreator.entity_declarative_item_return entity_declarative_item()
	{
		EnterRule_entity_declarative_item();
		EnterRule("entity_declarative_item", 51);
		TraceIn("entity_declarative_item", 51);
		MetaClassCreator.entity_declarative_item_return retval = new MetaClassCreator.entity_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.subprogram_declaration_return subprogram_declaration76 = default(MetaClassCreator.subprogram_declaration_return);
		MetaClassCreator.subprogram_body_return subprogram_body77 = default(MetaClassCreator.subprogram_body_return);
		VHDL.type.Type type_declaration78 = default(VHDL.type.Type);
		MetaClassCreator.subtype_declaration_return subtype_declaration79 = default(MetaClassCreator.subtype_declaration_return);
		MetaClassCreator.variable_declaration_return variable_declaration80 = default(MetaClassCreator.variable_declaration_return);
		MetaClassCreator.constant_declaration_return constant_declaration81 = default(MetaClassCreator.constant_declaration_return);
		MetaClassCreator.signal_declaration_return signal_declaration82 = default(MetaClassCreator.signal_declaration_return);
		MetaClassCreator.file_declaration_return file_declaration83 = default(MetaClassCreator.file_declaration_return);
		MetaClassCreator.alias_declaration_return alias_declaration84 = default(MetaClassCreator.alias_declaration_return);
		MetaClassCreator.attribute_specification_return attribute_specification85 = default(MetaClassCreator.attribute_specification_return);
		MetaClassCreator.attribute_declaration_return attribute_declaration86 = default(MetaClassCreator.attribute_declaration_return);
		MetaClassCreator.disconnection_specification_return disconnection_specification87 = default(MetaClassCreator.disconnection_specification_return);
		MetaClassCreator.use_clause_return use_clause88 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.group_template_declaration_return group_template_declaration89 = default(MetaClassCreator.group_template_declaration_return);
		MetaClassCreator.group_declaration_return group_declaration90 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "entity_declarative_item");
		DebugLocation(722, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:723:5: ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | variable_declaration | constant_declaration | signal_declaration | file_declaration | alias_declaration | attribute_specification | attribute_declaration | disconnection_specification | use_clause | group_template_declaration | group_declaration )
			int alt85=15;
			try { DebugEnterDecision(85, false);
			switch (input.LA(1))
			{
			case SUBPROGRAM_DECLARATION:
				{
				alt85 = 1;
				}
				break;
			case SUBPROGRAM_BODY:
				{
				alt85 = 2;
				}
				break;
			case FULL_TYPE_DECLARATION:
			case INCOMPLETE_TYPE_DECLARATION:
				{
				alt85 = 3;
				}
				break;
			case SUBTYPE:
				{
				alt85 = 4;
				}
				break;
			case VARIABLE:
				{
				alt85 = 5;
				}
				break;
			case CONSTANT:
				{
				alt85 = 6;
				}
				break;
			case SIGNAL:
				{
				alt85 = 7;
				}
				break;
			case FILE:
				{
				alt85 = 8;
				}
				break;
			case ALIAS:
				{
				alt85 = 9;
				}
				break;
			case ATTRIBUTE_SPECIFICATION:
				{
				alt85 = 10;
				}
				break;
			case ATTRIBUTE_DECLARATION:
				{
				alt85 = 11;
				}
				break;
			case DISCONNECT:
				{
				alt85 = 12;
				}
				break;
			case USE:
				{
				alt85 = 13;
				}
				break;
			case GROUP_TEMPLATE_DECLARATION:
				{
				alt85 = 14;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt85 = 15;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 85, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(85); }
			switch (alt85)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:723:9: subprogram_declaration
				{
				DebugLocation(723, 9);
				PushFollow(Follow._subprogram_declaration_in_entity_declarative_item5968);
				subprogram_declaration76=subprogram_declaration();
				PopFollow();

				DebugLocation(723, 37);
				 retval.value = (subprogram_declaration76!=null?subprogram_declaration76.value:default(SubprogramDeclaration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:724:9: subprogram_body
				{
				DebugLocation(724, 9);
				PushFollow(Follow._subprogram_body_in_entity_declarative_item5985);
				subprogram_body77=subprogram_body();
				PopFollow();

				DebugLocation(724, 37);
				 retval.value = (subprogram_body77!=null?subprogram_body77.value:default(SubprogramBody)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:725:9: type_declaration
				{
				DebugLocation(725, 9);
				PushFollow(Follow._type_declaration_in_entity_declarative_item6009);
				type_declaration78=type_declaration();
				PopFollow();

				DebugLocation(725, 37);
				 retval.value = type_declaration78; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:726:9: subtype_declaration
				{
				DebugLocation(726, 9);
				PushFollow(Follow._subtype_declaration_in_entity_declarative_item6032);
				subtype_declaration79=subtype_declaration();
				PopFollow();

				DebugLocation(726, 37);
				 retval.value = (subtype_declaration79!=null?subtype_declaration79.value:default(Subtype)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:727:9: variable_declaration
				{
				DebugLocation(727, 9);
				PushFollow(Follow._variable_declaration_in_entity_declarative_item6052);
				variable_declaration80=variable_declaration();
				PopFollow();

				DebugLocation(727, 37);
				 retval.value = (variable_declaration80!=null?variable_declaration80.value:default(VariableDeclaration)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:728:9: constant_declaration
				{
				DebugLocation(728, 9);
				PushFollow(Follow._constant_declaration_in_entity_declarative_item6071);
				constant_declaration81=constant_declaration();
				PopFollow();

				DebugLocation(728, 37);
				 retval.value = (constant_declaration81!=null?constant_declaration81.value:default(ConstantDeclaration)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:729:9: signal_declaration
				{
				DebugLocation(729, 9);
				PushFollow(Follow._signal_declaration_in_entity_declarative_item6090);
				signal_declaration82=signal_declaration();
				PopFollow();

				DebugLocation(729, 37);
				 retval.value = (signal_declaration82!=null?signal_declaration82.value:default(SignalDeclaration)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:730:9: file_declaration
				{
				DebugLocation(730, 9);
				PushFollow(Follow._file_declaration_in_entity_declarative_item6111);
				file_declaration83=file_declaration();
				PopFollow();

				DebugLocation(730, 37);
				 retval.value = (file_declaration83!=null?file_declaration83.value:default(FileDeclaration)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:731:9: alias_declaration
				{
				DebugLocation(731, 9);
				PushFollow(Follow._alias_declaration_in_entity_declarative_item6134);
				alias_declaration84=alias_declaration();
				PopFollow();

				DebugLocation(731, 37);
				 retval.value = (alias_declaration84!=null?alias_declaration84.value:default(Alias)); 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:732:9: attribute_specification
				{
				DebugLocation(732, 9);
				PushFollow(Follow._attribute_specification_in_entity_declarative_item6156);
				attribute_specification85=attribute_specification();
				PopFollow();

				DebugLocation(732, 37);
				 retval.value = (attribute_specification85!=null?attribute_specification85.value:default(VHDL.declaration.AttributeSpecification)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:733:9: attribute_declaration
				{
				DebugLocation(733, 9);
				PushFollow(Follow._attribute_declaration_in_entity_declarative_item6172);
				attribute_declaration86=attribute_declaration();
				PopFollow();

				DebugLocation(733, 37);
				 retval.value = (attribute_declaration86!=null?attribute_declaration86.value:default(VHDL.declaration.Attribute)); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:734:9: disconnection_specification
				{
				DebugLocation(734, 9);
				PushFollow(Follow._disconnection_specification_in_entity_declarative_item6190);
				disconnection_specification87=disconnection_specification();
				PopFollow();

				DebugLocation(734, 37);
				 retval.value = (disconnection_specification87!=null?disconnection_specification87.value:default(DisconnectionSpecification)); 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:735:9: use_clause
				{
				DebugLocation(735, 9);
				PushFollow(Follow._use_clause_in_entity_declarative_item6202);
				use_clause88=use_clause();
				PopFollow();

				DebugLocation(735, 37);
				 retval.value = (use_clause88!=null?use_clause88.value:default(UseClause)); 

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:736:9: group_template_declaration
				{
				DebugLocation(736, 9);
				PushFollow(Follow._group_template_declaration_in_entity_declarative_item6231);
				group_template_declaration89=group_template_declaration();
				PopFollow();

				DebugLocation(736, 37);
				 retval.value = (group_template_declaration89!=null?group_template_declaration89.value:default(GroupTemplate)); 

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:737:9: group_declaration
				{
				DebugLocation(737, 9);
				PushFollow(Follow._group_declaration_in_entity_declarative_item6244);
				group_declaration90=group_declaration();
				PopFollow();

				DebugLocation(737, 37);
				 retval.value = (group_declaration90!=null?group_declaration90.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_declarative_item", 51);
			LeaveRule("entity_declarative_item", 51);
			LeaveRule_entity_declarative_item();
		}
		DebugLocation(738, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_declarative_item"); }
		return retval;

	}
	// $ANTLR end "entity_declarative_item"

	partial void EnterRule_entity_designator();
	partial void LeaveRule_entity_designator();

	// $ANTLR start "entity_designator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:741:1: entity_designator returns [VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator value] : entity_tag ( signature )? ;
	[GrammarRule("entity_designator")]
	private VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator entity_designator()
	{
		EnterRule_entity_designator();
		EnterRule("entity_designator", 52);
		TraceIn("entity_designator", 52);
		VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator value = default(VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator);


		TreeRuleReturnScope<CommonTree> entity_tag91 = default(TreeRuleReturnScope<CommonTree>);
		Signature signature92 = default(Signature);

		try { DebugEnterRule(GrammarFileName, "entity_designator");
		DebugLocation(741, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:742:5: ( entity_tag ( signature )? )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:742:9: entity_tag ( signature )?
			{
			DebugLocation(742, 9);
			PushFollow(Follow._entity_tag_in_entity_designator6280);
			entity_tag91=entity_tag();
			PopFollow();

			DebugLocation(742, 20);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:742:20: ( signature )?
			int alt86=2;
			try { DebugEnterSubRule(86);
			try { DebugEnterDecision(86, false);
			int LA86_0 = input.LA(1);

			if ((LA86_0==SIGNATURE))
			{
				alt86 = 1;
			}
			} finally { DebugExitDecision(86); }
			switch (alt86)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:742:20: signature
				{
				DebugLocation(742, 20);
				PushFollow(Follow._signature_in_entity_designator6282);
				signature92=signature();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(86); }

			DebugLocation(743, 9);
			 value = new VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator((entity_tag91!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(entity_tag91.Start),input.TreeAdaptor.GetTokenStopIndex(entity_tag91.Start))):null), signature92); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_designator", 52);
			LeaveRule("entity_designator", 52);
			LeaveRule_entity_designator();
		}
		DebugLocation(744, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_designator"); }
		return value;

	}
	// $ANTLR end "entity_designator"

	partial void EnterRule_entity_name_list();
	partial void LeaveRule_entity_name_list();

	// $ANTLR start "entity_name_list"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:746:1: entity_name_list returns [VHDL.declaration.AttributeSpecification.EntityNameList value] : ( ( entity_designator )* | OTHERS | ALL );
	[GrammarRule("entity_name_list")]
	private VHDL.declaration.AttributeSpecification.EntityNameList entity_name_list()
	{
		EnterRule_entity_name_list();
		EnterRule("entity_name_list", 53);
		TraceIn("entity_name_list", 53);
		VHDL.declaration.AttributeSpecification.EntityNameList value = default(VHDL.declaration.AttributeSpecification.EntityNameList);


		VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator entity_designator93 = default(VHDL.declaration.AttributeSpecification.EntityNameList.EntityDesignator);

		try { DebugEnterRule(GrammarFileName, "entity_name_list");
		DebugLocation(746, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:747:5: ( ( entity_designator )* | OTHERS | ALL )
			int alt88=3;
			try { DebugEnterDecision(88, false);
			switch (input.LA(1))
			{
			case ARCHITECTURE:
			case BASIC_IDENTIFIER:
			case CHARACTER_LITERAL:
			case COMPONENT:
			case CONFIGURATION:
			case CONSTANT:
			case ENTITY:
			case EXTENDED_IDENTIFIER:
			case FILE:
			case FUNCTION:
			case GROUP:
			case LABEL:
			case LITERAL:
			case PACKAGE:
			case PROCEDURE:
			case SIGNAL:
			case STRING_LITERAL:
			case SUBTYPE:
			case TYPE:
			case UNITS:
			case VARIABLE:
				{
				alt88 = 1;
				}
				break;
			case OTHERS:
				{
				alt88 = 2;
				}
				break;
			case ALL:
				{
				alt88 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 88, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(88); }
			switch (alt88)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:747:9: ( entity_designator )*
				{
				DebugLocation(747, 9);
				 value = new VHDL.declaration.AttributeSpecification.EntityNameList(); 
				DebugLocation(748, 9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:748:9: ( entity_designator )*
				try { DebugEnterSubRule(87);
				while (true)
				{
					int alt87=2;
					try { DebugEnterDecision(87, false);
					int LA87_0 = input.LA(1);

					if ((LA87_0==BASIC_IDENTIFIER||LA87_0==CHARACTER_LITERAL||LA87_0==EXTENDED_IDENTIFIER||LA87_0==STRING_LITERAL))
					{
						alt87 = 1;
					}


					} finally { DebugExitDecision(87); }
					switch ( alt87 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:749:13: entity_designator
						{
						DebugLocation(749, 13);
						PushFollow(Follow._entity_designator_in_entity_name_list6340);
						entity_designator93=entity_designator();
						PopFollow();

						DebugLocation(749, 31);
						 value.Designators.Add(entity_designator93); 

						}
						break;

					default:
						goto loop87;
					}
				}

				loop87:
					;

				} finally { DebugExitSubRule(87); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:751:9: OTHERS
				{
				DebugLocation(751, 9);
				Match(input,OTHERS,Follow._OTHERS_in_entity_name_list6363); 
				DebugLocation(751, 16);
				 value = VHDL.declaration.AttributeSpecification.EntityNameList.OTHERS; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:752:9: ALL
				{
				DebugLocation(752, 9);
				Match(input,ALL,Follow._ALL_in_entity_name_list6375); 
				DebugLocation(752, 13);
				 value = VHDL.declaration.AttributeSpecification.EntityNameList.ALL; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_name_list", 53);
			LeaveRule("entity_name_list", 53);
			LeaveRule_entity_name_list();
		}
		DebugLocation(753, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_name_list"); }
		return value;

	}
	// $ANTLR end "entity_name_list"

	private sealed partial class entity_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public EntityStatement value;
		public entity_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_entity_statement();
	partial void LeaveRule_entity_statement();

	// $ANTLR start "entity_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:755:1: entity_statement returns [EntityStatement value] : ^( ENTITY_STATEMENT ( identifier )? ( POSTPONED )? (cas= concurrent_assertion_statement[$identifier.text] |ps= process_statement[$identifier.text, isPostponed] |cpcs= concurrent_procedure_call_statement[$identifier.text] ) ) ;
	[GrammarRule("entity_statement")]
	private MetaClassCreator.entity_statement_return entity_statement()
	{
		EnterRule_entity_statement();
		EnterRule("entity_statement", 54);
		TraceIn("entity_statement", 54);
		MetaClassCreator.entity_statement_return retval = new MetaClassCreator.entity_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ConcurrentAssertionStatement cas = default(ConcurrentAssertionStatement);
		MetaClassCreator.process_statement_return ps = default(MetaClassCreator.process_statement_return);
		ConcurrentProcedureCall cpcs = default(ConcurrentProcedureCall);
		TreeRuleReturnScope<CommonTree> identifier94 = default(TreeRuleReturnScope<CommonTree>);

		 bool isPostponed = false; 
		try { DebugEnterRule(GrammarFileName, "entity_statement");
		DebugLocation(755, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:758:5: ( ^( ENTITY_STATEMENT ( identifier )? ( POSTPONED )? (cas= concurrent_assertion_statement[$identifier.text] |ps= process_statement[$identifier.text, isPostponed] |cpcs= concurrent_procedure_call_statement[$identifier.text] ) ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:758:9: ^( ENTITY_STATEMENT ( identifier )? ( POSTPONED )? (cas= concurrent_assertion_statement[$identifier.text] |ps= process_statement[$identifier.text, isPostponed] |cpcs= concurrent_procedure_call_statement[$identifier.text] ) )
			{
			DebugLocation(758, 9);
			DebugLocation(758, 12);
			Match(input,ENTITY_STATEMENT,Follow._ENTITY_STATEMENT_in_entity_statement6412); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(758, 29);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:758:29: ( identifier )?
			int alt89=2;
			try { DebugEnterSubRule(89);
			try { DebugEnterDecision(89, false);
			int LA89_0 = input.LA(1);

			if ((LA89_0==BASIC_IDENTIFIER||LA89_0==EXTENDED_IDENTIFIER))
			{
				alt89 = 1;
			}
			} finally { DebugExitDecision(89); }
			switch (alt89)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:758:29: identifier
				{
				DebugLocation(758, 29);
				PushFollow(Follow._identifier_in_entity_statement6414);
				identifier94=identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(89); }

			DebugLocation(758, 41);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:758:41: ( POSTPONED )?
			int alt90=2;
			try { DebugEnterSubRule(90);
			try { DebugEnterDecision(90, false);
			int LA90_0 = input.LA(1);

			if ((LA90_0==POSTPONED))
			{
				alt90 = 1;
			}
			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:758:43: POSTPONED
				{
				DebugLocation(758, 43);
				Match(input,POSTPONED,Follow._POSTPONED_in_entity_statement6419); 
				DebugLocation(758, 53);
				 isPostponed = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(90); }

			DebugLocation(759, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:759:13: (cas= concurrent_assertion_statement[$identifier.text] |ps= process_statement[$identifier.text, isPostponed] |cpcs= concurrent_procedure_call_statement[$identifier.text] )
			int alt91=3;
			try { DebugEnterSubRule(91);
			try { DebugEnterDecision(91, false);
			switch (input.LA(1))
			{
			case ASSERT:
				{
				alt91 = 1;
				}
				break;
			case PROCESS:
				{
				alt91 = 2;
				}
				break;
			case PROCEDURE_CALL:
				{
				alt91 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 91, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(91); }
			switch (alt91)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:760:21: cas= concurrent_assertion_statement[$identifier.text]
				{
				DebugLocation(760, 24);
				PushFollow(Follow._concurrent_assertion_statement_in_entity_statement6462);
				cas=concurrent_assertion_statement((identifier94!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier94.Start),input.TreeAdaptor.GetTokenStopIndex(identifier94.Start))):null));
				PopFollow();

				DebugLocation(761, 21);
				 retval.value = cas; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:762:21: ps= process_statement[$identifier.text, isPostponed]
				{
				DebugLocation(762, 23);
				PushFollow(Follow._process_statement_in_entity_statement6509);
				ps=process_statement((identifier94!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier94.Start),input.TreeAdaptor.GetTokenStopIndex(identifier94.Start))):null), isPostponed);
				PopFollow();

				DebugLocation(763, 21);
				 retval.value = (ps!=null?ps.value:default(ProcessStatement)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:764:21: cpcs= concurrent_procedure_call_statement[$identifier.text]
				{
				DebugLocation(764, 25);
				PushFollow(Follow._concurrent_procedure_call_statement_in_entity_statement6556);
				cpcs=concurrent_procedure_call_statement((identifier94!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier94.Start),input.TreeAdaptor.GetTokenStopIndex(identifier94.Start))):null));
				PopFollow();

				DebugLocation(765, 21);
				 retval.value = cpcs; 

				}
				break;

			}
			} finally { DebugExitSubRule(91); }

			DebugLocation(767, 13);

			                if (retval.value != null) {
			                    retval.value.Postponed = isPostponed;
			                }
			            

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_statement", 54);
			LeaveRule("entity_statement", 54);
			LeaveRule_entity_statement();
		}
		DebugLocation(773, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_statement"); }
		return retval;

	}
	// $ANTLR end "entity_statement"

	partial void EnterRule_entity_tag();
	partial void LeaveRule_entity_tag();

	// $ANTLR start "entity_tag"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:775:1: entity_tag : ( identifier | CHARACTER_LITERAL | STRING_LITERAL );
	[GrammarRule("entity_tag")]
	private TreeRuleReturnScope<CommonTree> entity_tag()
	{
		EnterRule_entity_tag();
		EnterRule("entity_tag", 55);
		TraceIn("entity_tag", 55);
		TreeRuleReturnScope<CommonTree> retval = new TreeRuleReturnScope<CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "entity_tag");
		DebugLocation(775, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:776:5: ( identifier | CHARACTER_LITERAL | STRING_LITERAL )
			int alt92=3;
			try { DebugEnterDecision(92, false);
			switch (input.LA(1))
			{
			case BASIC_IDENTIFIER:
			case EXTENDED_IDENTIFIER:
				{
				alt92 = 1;
				}
				break;
			case CHARACTER_LITERAL:
				{
				alt92 = 2;
				}
				break;
			case STRING_LITERAL:
				{
				alt92 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 92, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(92); }
			switch (alt92)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:776:9: identifier
				{
				DebugLocation(776, 9);
				PushFollow(Follow._identifier_in_entity_tag6636);
				identifier();
				PopFollow();


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:777:9: CHARACTER_LITERAL
				{
				DebugLocation(777, 9);
				Match(input,CHARACTER_LITERAL,Follow._CHARACTER_LITERAL_in_entity_tag6646); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:778:9: STRING_LITERAL
				{
				DebugLocation(778, 9);
				Match(input,STRING_LITERAL,Follow._STRING_LITERAL_in_entity_tag6656); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("entity_tag", 55);
			LeaveRule("entity_tag", 55);
			LeaveRule_entity_tag();
		}
		DebugLocation(779, 4);
		} finally { DebugExitRule(GrammarFileName, "entity_tag"); }
		return retval;

	}
	// $ANTLR end "entity_tag"

	partial void EnterRule_enumeration_type_definition();
	partial void LeaveRule_enumeration_type_definition();

	// $ANTLR start "enumeration_type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:781:1: enumeration_type_definition[String ident] returns [EnumerationType value] : ^( ENUMERATION_TYPE_DEFINITION ( identifier |cl= CHARACTER_LITERAL )+ ) ;
	[GrammarRule("enumeration_type_definition")]
	private EnumerationType enumeration_type_definition(String ident)
	{
		EnterRule_enumeration_type_definition();
		EnterRule("enumeration_type_definition", 56);
		TraceIn("enumeration_type_definition", 56);
		EnumerationType value = default(EnumerationType);


		CommonTree cl = default(CommonTree);
		TreeRuleReturnScope<CommonTree> identifier95 = default(TreeRuleReturnScope<CommonTree>);

		 value = new EnumerationType(ident); 
		try { DebugEnterRule(GrammarFileName, "enumeration_type_definition");
		DebugLocation(781, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:783:5: ( ^( ENUMERATION_TYPE_DEFINITION ( identifier |cl= CHARACTER_LITERAL )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:783:9: ^( ENUMERATION_TYPE_DEFINITION ( identifier |cl= CHARACTER_LITERAL )+ )
			{
			DebugLocation(783, 9);
			DebugLocation(783, 12);
			Match(input,ENUMERATION_TYPE_DEFINITION,Follow._ENUMERATION_TYPE_DEFINITION_in_enumeration_type_definition6687); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(784, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:784:13: ( identifier |cl= CHARACTER_LITERAL )+
			int cnt93=0;
			try { DebugEnterSubRule(93);
			while (true)
			{
				int alt93=3;
				try { DebugEnterDecision(93, false);
				int LA93_0 = input.LA(1);

				if ((LA93_0==BASIC_IDENTIFIER||LA93_0==EXTENDED_IDENTIFIER))
				{
					alt93 = 1;
				}
				else if ((LA93_0==CHARACTER_LITERAL))
				{
					alt93 = 2;
				}


				} finally { DebugExitDecision(93); }
				switch (alt93)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:785:21: identifier
					{
					DebugLocation(785, 21);
					PushFollow(Follow._identifier_in_enumeration_type_definition6723);
					identifier95=identifier();
					PopFollow();

					DebugLocation(785, 42);
					 value.createLiteral((identifier95!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier95.Start),input.TreeAdaptor.GetTokenStopIndex(identifier95.Start))):null)); 

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:786:21: cl= CHARACTER_LITERAL
					{
					DebugLocation(786, 23);
					cl=(CommonTree)Match(input,CHARACTER_LITERAL,Follow._CHARACTER_LITERAL_in_enumeration_type_definition6759); 
					DebugLocation(786, 42);
					 value.createLiteral((cl!=null?cl.Text:null)); 

					}
					break;

				default:
					if (cnt93 >= 1)
						goto loop93;

					EarlyExitException eee93 = new EarlyExitException( 93, input );
					DebugRecognitionException(eee93);
					throw eee93;
				}
				cnt93++;
			}
			loop93:
				;

			} finally { DebugExitSubRule(93); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("enumeration_type_definition", 56);
			LeaveRule("enumeration_type_definition", 56);
			LeaveRule_enumeration_type_definition();
		}
		DebugLocation(789, 4);
		} finally { DebugExitRule(GrammarFileName, "enumeration_type_definition"); }
		return value;

	}
	// $ANTLR end "enumeration_type_definition"

	private sealed partial class exit_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public ExitStatement value = new ExitStatement();
		public exit_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_exit_statement();
	partial void LeaveRule_exit_statement();

	// $ANTLR start "exit_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:791:1: exit_statement[string label] returns [ExitStatement value = new ExitStatement()] : ^( EXIT ( loop_label )? ( expression )? ) ;
	[GrammarRule("exit_statement")]
	private MetaClassCreator.exit_statement_return exit_statement(string label)
	{
		EnterRule_exit_statement();
		EnterRule("exit_statement", 57);
		TraceIn("exit_statement", 57);
		MetaClassCreator.exit_statement_return retval = new MetaClassCreator.exit_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		LoopStatement loop_label96 = default(LoopStatement);
		MetaClassCreator.expression_return expression97 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "exit_statement");
		DebugLocation(791, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:793:5: ( ^( EXIT ( loop_label )? ( expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:793:9: ^( EXIT ( loop_label )? ( expression )? )
			{
			DebugLocation(793, 9);
			DebugLocation(793, 12);
			Match(input,EXIT,Follow._EXIT_in_exit_statement6817); 

			DebugLocation(794, 13);
			 retval.value.Label = label; 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(795, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:795:13: ( loop_label )?
				int alt94=2;
				try { DebugEnterSubRule(94);
				try { DebugEnterDecision(94, false);
				int LA94_0 = input.LA(1);

				if ((LA94_0==BASIC_IDENTIFIER||LA94_0==EXTENDED_IDENTIFIER))
				{
					alt94 = 1;
				}
				} finally { DebugExitDecision(94); }
				switch (alt94)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:795:15: loop_label
					{
					DebugLocation(795, 15);
					PushFollow(Follow._loop_label_in_exit_statement6847);
					loop_label96=loop_label();
					PopFollow();

					DebugLocation(795, 26);
					 retval.value.Loop = loop_label96; 

					}
					break;

				}
				} finally { DebugExitSubRule(94); }

				DebugLocation(796, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:796:13: ( expression )?
				int alt95=2;
				try { DebugEnterSubRule(95);
				try { DebugEnterDecision(95, false);
				int LA95_0 = input.LA(1);

				if ((LA95_0==EXPRESSION))
				{
					alt95 = 1;
				}
				} finally { DebugExitDecision(95); }
				switch (alt95)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:796:15: expression
					{
					DebugLocation(796, 15);
					PushFollow(Follow._expression_in_exit_statement6868);
					expression97=expression();
					PopFollow();

					DebugLocation(796, 26);
					 retval.value.Condition = (expression97!=null?expression97.value:default(Expression)); 

					}
					break;

				}
				} finally { DebugExitSubRule(95); }


				Match(input, TokenTypes.Up, null); 
			}


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("exit_statement", 57);
			LeaveRule("exit_statement", 57);
			LeaveRule_exit_statement();
		}
		DebugLocation(798, 4);
		} finally { DebugExitRule(GrammarFileName, "exit_statement"); }
		return retval;

	}
	// $ANTLR end "exit_statement"

	private sealed partial class expression_return : TreeRuleReturnScope<CommonTree>
	{
		public Expression value;
		public expression_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_expression();
	partial void LeaveRule_expression();

	// $ANTLR start "expression"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:800:1: expression returns [Expression value] : ^( EXPRESSION expression2 ) ;
	[GrammarRule("expression")]
	private MetaClassCreator.expression_return expression()
	{
		EnterRule_expression();
		EnterRule("expression", 58);
		TraceIn("expression", 58);
		MetaClassCreator.expression_return retval = new MetaClassCreator.expression_return(this);
		retval.Start = (CommonTree)input.LT(1);

		Expression expression298 = default(Expression);

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(800, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:805:5: ( ^( EXPRESSION expression2 ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:805:9: ^( EXPRESSION expression2 )
			{
			DebugLocation(805, 9);
			DebugLocation(805, 12);
			Match(input,EXPRESSION,Follow._EXPRESSION_in_expression6914); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(805, 23);
			PushFollow(Follow._expression2_in_expression6916);
			expression298=expression2();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(805, 37);
			 retval.value = expression298; 

			}


				AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("expression", 58);
			LeaveRule("expression", 58);
			LeaveRule_expression();
		}
		DebugLocation(806, 4);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return retval;

	}
	// $ANTLR end "expression"

	partial void EnterRule_expression2();
	partial void LeaveRule_expression2();

	// $ANTLR start "expression2"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:808:1: expression2 returns [Expression value] : ( ^(lo= logical_operator l= expression2 r= expression2 ) | relation );
	[GrammarRule("expression2")]
	private Expression expression2()
	{
		EnterRule_expression2();
		EnterRule("expression2", 59);
		TraceIn("expression2", 59);
		Expression value = default(Expression);


		ExpressionType lo = default(ExpressionType);
		Expression l = default(Expression);
		Expression r = default(Expression);
		Expression relation99 = default(Expression);

		try { DebugEnterRule(GrammarFileName, "expression2");
		DebugLocation(808, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:809:5: ( ^(lo= logical_operator l= expression2 r= expression2 ) | relation )
			int alt96=2;
			try { DebugEnterDecision(96, false);
			int LA96_0 = input.LA(1);

			if ((LA96_0==AND||LA96_0==NAND||LA96_0==NOR||LA96_0==OR||(LA96_0>=XNOR && LA96_0<=XOR)))
			{
				alt96 = 1;
			}
			else if ((LA96_0==ABS||LA96_0==AGGREGATE||LA96_0==AMPERSAND||LA96_0==BINANRY_BASED_INTEGER||(LA96_0>=BIT_STRING_LITERAL_BINARY && LA96_0<=BIT_STRING_LITERAL_OCTAL)||LA96_0==CHARACTER_LITERAL||LA96_0==DEC_BASED_INTEGER||LA96_0==DIV||LA96_0==DOUBLESTAR||LA96_0==EQ||LA96_0==FLOAT_POINT_LITERAL||LA96_0==GE||LA96_0==GT||LA96_0==HEXA_BASED_INTEGER||LA96_0==LE||LA96_0==LT||(LA96_0>=MINUS && LA96_0<=NAME)||(LA96_0>=NEQ && LA96_0<=NEW)||(LA96_0>=NOT && LA96_0<=OCTAL_BASED_INTEGER)||LA96_0==PHYSICAL_LITERAL||LA96_0==PLUS||LA96_0==QUALIFIED_EXPRESSION||LA96_0==REM||(LA96_0>=ROL && LA96_0<=ROR)||(LA96_0>=SLA && LA96_0<=SLL)||(LA96_0>=SRA && LA96_0<=SRL)))
			{
				alt96 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 96, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(96); }
			switch (alt96)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:809:9: ^(lo= logical_operator l= expression2 r= expression2 )
				{
				DebugLocation(809, 9);
				DebugLocation(809, 14);
				PushFollow(Follow._logical_operator_in_expression26947);
				lo=logical_operator();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(809, 33);
				PushFollow(Follow._expression2_in_expression26951);
				l=expression2();
				PopFollow();

				DebugLocation(809, 47);
				PushFollow(Follow._expression2_in_expression26955);
				r=expression2();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(810, 9);
				 value = ExpressionTypeCreator.create(lo, l, r); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:811:9: relation
				{
				DebugLocation(811, 9);
				PushFollow(Follow._relation_in_expression26977);
				relation99=relation();
				PopFollow();

				DebugLocation(812, 9);
				 value = relation99; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("expression2", 59);
			LeaveRule("expression2", 59);
			LeaveRule_expression2();
		}
		DebugLocation(813, 4);
		} finally { DebugExitRule(GrammarFileName, "expression2"); }
		return value;

	}
	// $ANTLR end "expression2"

	partial void EnterRule_factor();
	partial void LeaveRule_factor();

	// $ANTLR start "factor"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:815:1: factor returns [Expression value] : ( ^( DOUBLESTAR l= primary r= primary ) | ^( ABS primary ) | ^( NOT primary ) | primary );
	[GrammarRule("factor")]
	private Expression factor()
	{
		EnterRule_factor();
		EnterRule("factor", 60);
		TraceIn("factor", 60);
		Expression value = default(Expression);


		MetaClassCreator.primary_return l = default(MetaClassCreator.primary_return);
		MetaClassCreator.primary_return r = default(MetaClassCreator.primary_return);
		MetaClassCreator.primary_return primary100 = default(MetaClassCreator.primary_return);
		MetaClassCreator.primary_return primary101 = default(MetaClassCreator.primary_return);
		MetaClassCreator.primary_return primary102 = default(MetaClassCreator.primary_return);

		try { DebugEnterRule(GrammarFileName, "factor");
		DebugLocation(815, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:816:5: ( ^( DOUBLESTAR l= primary r= primary ) | ^( ABS primary ) | ^( NOT primary ) | primary )
			int alt97=4;
			try { DebugEnterDecision(97, false);
			switch (input.LA(1))
			{
			case DOUBLESTAR:
				{
				alt97 = 1;
				}
				break;
			case ABS:
				{
				alt97 = 2;
				}
				break;
			case NOT:
				{
				alt97 = 3;
				}
				break;
			case AGGREGATE:
			case BINANRY_BASED_INTEGER:
			case BIT_STRING_LITERAL_BINARY:
			case BIT_STRING_LITERAL_HEX:
			case BIT_STRING_LITERAL_OCTAL:
			case CHARACTER_LITERAL:
			case DEC_BASED_INTEGER:
			case FLOAT_POINT_LITERAL:
			case HEXA_BASED_INTEGER:
			case NAME:
			case NEW:
			case NULLTOK:
			case OCTAL_BASED_INTEGER:
			case PHYSICAL_LITERAL:
			case QUALIFIED_EXPRESSION:
				{
				alt97 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 97, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(97); }
			switch (alt97)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:816:9: ^( DOUBLESTAR l= primary r= primary )
				{
				DebugLocation(816, 9);
				DebugLocation(816, 12);
				Match(input,DOUBLESTAR,Follow._DOUBLESTAR_in_factor7012); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(816, 24);
				PushFollow(Follow._primary_in_factor7016);
				l=primary();
				PopFollow();

				DebugLocation(816, 34);
				PushFollow(Follow._primary_in_factor7020);
				r=primary();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(816, 45);
				 value = new Pow((l!=null?l.value:default(Expression)), (r!=null?r.value:default(Expression))); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:817:9: ^( ABS primary )
				{
				DebugLocation(817, 9);
				DebugLocation(817, 12);
				Match(input,ABS,Follow._ABS_in_factor7036); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(817, 16);
				PushFollow(Follow._primary_in_factor7038);
				primary100=primary();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(817, 45);
				 value = new Abs((primary100!=null?primary100.value:default(Expression))); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:818:9: ^( NOT primary )
				{
				DebugLocation(818, 9);
				DebugLocation(818, 12);
				Match(input,NOT,Follow._NOT_in_factor7073); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(818, 16);
				PushFollow(Follow._primary_in_factor7075);
				primary101=primary();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(818, 45);
				 value = new Not((primary101!=null?primary101.value:default(Expression))); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:819:9: primary
				{
				DebugLocation(819, 9);
				PushFollow(Follow._primary_in_factor7108);
				primary102=primary();
				PopFollow();

				DebugLocation(819, 45);
				 value = (primary102!=null?primary102.value:default(Expression)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("factor", 60);
			LeaveRule("factor", 60);
			LeaveRule_factor();
		}
		DebugLocation(820, 4);
		} finally { DebugExitRule(GrammarFileName, "factor"); }
		return value;

	}
	// $ANTLR end "factor"

	private sealed partial class file_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public FileDeclaration value;
		public file_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_file_declaration();
	partial void LeaveRule_file_declaration();

	// $ANTLR start "file_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:822:1: file_declaration returns [FileDeclaration value] : ^( FILE identifier_list si= subtype_indication ( ^( OPEN open_kind= expression ) )? (logical_name= expression )? ) ;
	[GrammarRule("file_declaration")]
	private MetaClassCreator.file_declaration_return file_declaration()
	{
		EnterRule_file_declaration();
		EnterRule("file_declaration", 61);
		TraceIn("file_declaration", 61);
		MetaClassCreator.file_declaration_return retval = new MetaClassCreator.file_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication si = default(ISubtypeIndication);
		MetaClassCreator.expression_return open_kind = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return logical_name = default(MetaClassCreator.expression_return);
		List<string> identifier_list103 = default(List<string>);

		try { DebugEnterRule(GrammarFileName, "file_declaration");
		DebugLocation(822, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:824:5: ( ^( FILE identifier_list si= subtype_indication ( ^( OPEN open_kind= expression ) )? (logical_name= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:824:9: ^( FILE identifier_list si= subtype_indication ( ^( OPEN open_kind= expression ) )? (logical_name= expression )? )
			{
			DebugLocation(824, 9);
			DebugLocation(824, 12);
			Match(input,FILE,Follow._FILE_in_file_declaration7168); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(824, 17);
			PushFollow(Follow._identifier_list_in_file_declaration7170);
			identifier_list103=identifier_list();
			PopFollow();

			DebugLocation(824, 35);
			PushFollow(Follow._subtype_indication_in_file_declaration7174);
			si=subtype_indication();
			PopFollow();

			DebugLocation(825, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:825:13: ( ^( OPEN open_kind= expression ) )?
			int alt98=2;
			try { DebugEnterSubRule(98);
			try { DebugEnterDecision(98, false);
			int LA98_0 = input.LA(1);

			if ((LA98_0==OPEN))
			{
				alt98 = 1;
			}
			} finally { DebugExitDecision(98); }
			switch (alt98)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:825:15: ^( OPEN open_kind= expression )
				{
				DebugLocation(825, 15);
				DebugLocation(825, 18);
				Match(input,OPEN,Follow._OPEN_in_file_declaration7192); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(825, 32);
				PushFollow(Follow._expression_in_file_declaration7196);
				open_kind=expression();
				PopFollow();


				Match(input, TokenTypes.Up, null); 


				}
				break;

			}
			} finally { DebugExitSubRule(98); }

			DebugLocation(825, 60);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:825:60: (logical_name= expression )?
			int alt99=2;
			try { DebugEnterSubRule(99);
			try { DebugEnterDecision(99, false);
			int LA99_0 = input.LA(1);

			if ((LA99_0==EXPRESSION))
			{
				alt99 = 1;
			}
			} finally { DebugExitDecision(99); }
			switch (alt99)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:825:60: logical_name= expression
				{
				DebugLocation(825, 60);
				PushFollow(Follow._expression_in_file_declaration7204);
				logical_name=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(99); }

			DebugLocation(826, 13);

			                List<FileObject> files = new List<FileObject>();
			                foreach (string ident in identifier_list103)
			                {
			                    files.Add(new FileObject(ident, si, (open_kind!=null?open_kind.value:default(Expression)),
			                        (logical_name!=null?logical_name.value:default(Expression))));
			                }
			                retval.value = new FileDeclaration(files);
			            

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("file_declaration", 61);
			LeaveRule("file_declaration", 61);
			LeaveRule_file_declaration();
		}
		DebugLocation(836, 4);
		} finally { DebugExitRule(GrammarFileName, "file_declaration"); }
		return retval;

	}
	// $ANTLR end "file_declaration"

	private sealed partial class file_type_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public FileType value;
		public file_type_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_file_type_definition();
	partial void LeaveRule_file_type_definition();

	// $ANTLR start "file_type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:838:1: file_type_definition[string ident] returns [FileType value] : ^( FILE_TYPE_DEFINITION type_mark= name ) ;
	[GrammarRule("file_type_definition")]
	private MetaClassCreator.file_type_definition_return file_type_definition(string ident)
	{
		EnterRule_file_type_definition();
		EnterRule("file_type_definition", 62);
		TraceIn("file_type_definition", 62);
		MetaClassCreator.file_type_definition_return retval = new MetaClassCreator.file_type_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return type_mark = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "file_type_definition");
		DebugLocation(838, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:840:5: ( ^( FILE_TYPE_DEFINITION type_mark= name ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:840:9: ^( FILE_TYPE_DEFINITION type_mark= name )
			{
			DebugLocation(840, 9);
			DebugLocation(840, 12);
			Match(input,FILE_TYPE_DEFINITION,Follow._FILE_TYPE_DEFINITION_in_file_type_definition7260); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(840, 42);
			PushFollow(Follow._name_in_file_type_definition7264);
			type_mark=name();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(841, 9);
			 retval.value = new FileType(ident, (type_mark!=null?type_mark.value:default(TemporaryName)).toTypeMark(currentScope)); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("file_type_definition", 62);
			LeaveRule("file_type_definition", 62);
			LeaveRule_file_type_definition();
		}
		DebugLocation(842, 4);
		} finally { DebugExitRule(GrammarFileName, "file_type_definition"); }
		return retval;

	}
	// $ANTLR end "file_type_definition"

	partial void EnterRule_generate_statement();
	partial void LeaveRule_generate_statement();

	// $ANTLR start "generate_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:845:1: generate_statement[string label] returns [AbstractGenerateStatement value] : ^( GENERATE generation_scheme[label] (bdi= block_declarative_item )* (cs= concurrent_statement )* ( end_identifier )? ) ;
	[GrammarRule("generate_statement")]
	private AbstractGenerateStatement generate_statement(string label)
	{
		EnterRule_generate_statement();
		EnterRule("generate_statement", 63);
		TraceIn("generate_statement", 63);
		AbstractGenerateStatement value = default(AbstractGenerateStatement);


		MetaClassCreator.block_declarative_item_return bdi = default(MetaClassCreator.block_declarative_item_return);
		MetaClassCreator.concurrent_statement_return cs = default(MetaClassCreator.concurrent_statement_return);
		AbstractGenerateStatement generation_scheme104 = default(AbstractGenerateStatement);
		TreeRuleReturnScope<CommonTree> end_identifier105 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "generate_statement");
		DebugLocation(845, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:850:5: ( ^( GENERATE generation_scheme[label] (bdi= block_declarative_item )* (cs= concurrent_statement )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:850:9: ^( GENERATE generation_scheme[label] (bdi= block_declarative_item )* (cs= concurrent_statement )* ( end_identifier )? )
			{
			DebugLocation(850, 9);
			DebugLocation(850, 12);
			Match(input,GENERATE,Follow._GENERATE_in_generate_statement7313); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(851, 13);
			PushFollow(Follow._generation_scheme_in_generate_statement7327);
			generation_scheme104=generation_scheme(label);
			PopFollow();

			DebugLocation(852, 13);

			                value = generation_scheme104;
			                value.Parent = oldScope;
			                currentScope = value;
			            
			DebugLocation(857, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:857:13: (bdi= block_declarative_item )*
			try { DebugEnterSubRule(100);
			while (true)
			{
				int alt100=2;
				try { DebugEnterDecision(100, false);
				int LA100_0 = input.LA(1);

				if ((LA100_0==ALIAS||(LA100_0>=ATTRIBUTE_DECLARATION && LA100_0<=ATTRIBUTE_SPECIFICATION)||LA100_0==COMPONENT||(LA100_0>=CONFIGURATION_SPECIFICATION && LA100_0<=CONSTANT)||LA100_0==DISCONNECT||LA100_0==FILE||LA100_0==FULL_TYPE_DECLARATION||(LA100_0>=GROUP_DECLARATION && LA100_0<=GROUP_TEMPLATE_DECLARATION)||LA100_0==INCOMPLETE_TYPE_DECLARATION||LA100_0==SIGNAL||(LA100_0>=SUBPROGRAM_BODY && LA100_0<=SUBTYPE)||LA100_0==USE||LA100_0==VARIABLE))
				{
					alt100 = 1;
				}


				} finally { DebugExitDecision(100); }
				switch ( alt100 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:857:15: bdi= block_declarative_item
					{
					DebugLocation(857, 18);
					PushFollow(Follow._block_declarative_item_in_generate_statement7360);
					bdi=block_declarative_item();
					PopFollow();

					DebugLocation(857, 42);
					 value.Declarations.Add((bdi!=null?bdi.value:default(IBlockDeclarativeItem))); 

					}
					break;

				default:
					goto loop100;
				}
			}

			loop100:
				;

			} finally { DebugExitSubRule(100); }

			DebugLocation(858, 13);
			 AddListEndComments((bdi!=null?bdi.value:default(IBlockDeclarativeItem)), (bdi!=null?((CommonTree)bdi.Start):default(CommonTree))); 
			DebugLocation(859, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:859:13: (cs= concurrent_statement )*
			try { DebugEnterSubRule(101);
			while (true)
			{
				int alt101=2;
				try { DebugEnterDecision(101, false);
				int LA101_0 = input.LA(1);

				if ((LA101_0==ASSERT||LA101_0==CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT||LA101_0==LABEL_STATEMENT||LA101_0==POSTPONED||(LA101_0>=PROCEDURE_CALL && LA101_0<=PROCESS)||LA101_0==SELECTED_SIGNAL_ASSIGNMENT_STATEMENT))
				{
					alt101 = 1;
				}


				} finally { DebugExitDecision(101); }
				switch ( alt101 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:859:15: cs= concurrent_statement
					{
					DebugLocation(859, 17);
					PushFollow(Follow._concurrent_statement_in_generate_statement7397);
					cs=concurrent_statement();
					PopFollow();

					DebugLocation(859, 39);
					 value.Statements.Add((cs!=null?cs.value:default(ConcurrentStatement))); 

					}
					break;

				default:
					goto loop101;
				}
			}

			loop101:
				;

			} finally { DebugExitSubRule(101); }

			DebugLocation(860, 13);
			 AddListEndComments((cs!=null?cs.value:default(ConcurrentStatement)), (cs!=null?((CommonTree)cs.Start):default(CommonTree))); 
			DebugLocation(861, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:861:13: ( end_identifier )?
			int alt102=2;
			try { DebugEnterSubRule(102);
			try { DebugEnterDecision(102, false);
			int LA102_0 = input.LA(1);

			if ((LA102_0==BASIC_IDENTIFIER||LA102_0==EXTENDED_IDENTIFIER))
			{
				alt102 = 1;
			}
			} finally { DebugExitDecision(102); }
			switch (alt102)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:861:13: end_identifier
				{
				DebugLocation(861, 13);
				PushFollow(Follow._end_identifier_in_generate_statement7430);
				end_identifier105=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(102); }

			DebugLocation(862, 13);

			            	if(((end_identifier105!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier105.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier105.Start))):null) != null) && (!(end_identifier105!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier105.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier105.Start))):null).Equals(label, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier105!=null?((CommonTree)end_identifier105.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_GENERATE_STATEMENT, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier105!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier105.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier105.Start))):null), label));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("generate_statement", 63);
			LeaveRule("generate_statement", 63);
			LeaveRule_generate_statement();
		}
		DebugLocation(867, 4);
		} finally { DebugExitRule(GrammarFileName, "generate_statement"); }
		return value;

	}
	// $ANTLR end "generate_statement"

	partial void EnterRule_generation_scheme();
	partial void LeaveRule_generation_scheme();

	// $ANTLR start "generation_scheme"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:869:1: generation_scheme[string label] returns [AbstractGenerateStatement value] : ( FOR identifier discrete_range | IF expression );
	[GrammarRule("generation_scheme")]
	private AbstractGenerateStatement generation_scheme(string label)
	{
		EnterRule_generation_scheme();
		EnterRule("generation_scheme", 64);
		TraceIn("generation_scheme", 64);
		AbstractGenerateStatement value = default(AbstractGenerateStatement);


		TreeRuleReturnScope<CommonTree> identifier106 = default(TreeRuleReturnScope<CommonTree>);
		DiscreteRange discrete_range107 = default(DiscreteRange);
		MetaClassCreator.expression_return expression108 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "generation_scheme");
		DebugLocation(869, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:870:5: ( FOR identifier discrete_range | IF expression )
			int alt103=2;
			try { DebugEnterDecision(103, false);
			int LA103_0 = input.LA(1);

			if ((LA103_0==FOR))
			{
				alt103 = 1;
			}
			else if ((LA103_0==IF))
			{
				alt103 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 103, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(103); }
			switch (alt103)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:870:9: FOR identifier discrete_range
				{
				DebugLocation(870, 9);
				Match(input,FOR,Follow._FOR_in_generation_scheme7479); 
				DebugLocation(870, 13);
				PushFollow(Follow._identifier_in_generation_scheme7481);
				identifier106=identifier();
				PopFollow();

				DebugLocation(870, 24);
				PushFollow(Follow._discrete_range_in_generation_scheme7483);
				discrete_range107=discrete_range();
				PopFollow();

				DebugLocation(871, 9);
				 value = new ForGenerateStatement(label, (identifier106!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier106.Start),input.TreeAdaptor.GetTokenStopIndex(identifier106.Start))):null), discrete_range107); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:872:9: IF expression
				{
				DebugLocation(872, 9);
				Match(input,IF,Follow._IF_in_generation_scheme7503); 
				DebugLocation(872, 12);
				PushFollow(Follow._expression_in_generation_scheme7505);
				expression108=expression();
				PopFollow();

				DebugLocation(873, 9);
				 value = new IfGenerateStatement(label, (expression108!=null?expression108.value:default(Expression))); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("generation_scheme", 64);
			LeaveRule("generation_scheme", 64);
			LeaveRule_generation_scheme();
		}
		DebugLocation(874, 4);
		} finally { DebugExitRule(GrammarFileName, "generation_scheme"); }
		return value;

	}
	// $ANTLR end "generation_scheme"

	partial void EnterRule_generic_clause();
	partial void LeaveRule_generic_clause();

	// $ANTLR start "generic_clause"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:876:1: generic_clause returns [List<IVhdlObjectProvider> value] : ^( GENERIC (icd= interface_constant_declaration )+ ) ;
	[GrammarRule("generic_clause")]
	private List<IVhdlObjectProvider> generic_clause()
	{
		EnterRule_generic_clause();
		EnterRule("generic_clause", 65);
		TraceIn("generic_clause", 65);
		List<IVhdlObjectProvider> value = default(List<IVhdlObjectProvider>);


		MetaClassCreator.interface_constant_declaration_return icd = default(MetaClassCreator.interface_constant_declaration_return);

		 value = new List<IVhdlObjectProvider>(); 
		try { DebugEnterRule(GrammarFileName, "generic_clause");
		DebugLocation(876, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:878:5: ( ^( GENERIC (icd= interface_constant_declaration )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:878:9: ^( GENERIC (icd= interface_constant_declaration )+ )
			{
			DebugLocation(878, 9);
			DebugLocation(878, 12);
			Match(input,GENERIC,Follow._GENERIC_in_generic_clause7545); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(879, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:879:13: (icd= interface_constant_declaration )+
			int cnt104=0;
			try { DebugEnterSubRule(104);
			while (true)
			{
				int alt104=2;
				try { DebugEnterDecision(104, false);
				int LA104_0 = input.LA(1);

				if ((LA104_0==INTERFACE_CONSTANT_DECLARATION))
				{
					alt104 = 1;
				}


				} finally { DebugExitDecision(104); }
				switch (alt104)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:879:15: icd= interface_constant_declaration
					{
					DebugLocation(879, 18);
					PushFollow(Follow._interface_constant_declaration_in_generic_clause7563);
					icd=interface_constant_declaration();
					PopFollow();

					DebugLocation(879, 50);
					 value.Add((icd!=null?icd.value:default(ConstantGroup))); 

					}
					break;

				default:
					if (cnt104 >= 1)
						goto loop104;

					EarlyExitException eee104 = new EarlyExitException( 104, input );
					DebugRecognitionException(eee104);
					throw eee104;
				}
				cnt104++;
			}
			loop104:
				;

			} finally { DebugExitSubRule(104); }

			DebugLocation(880, 13);
			 AddListEndComments((icd!=null?icd.value:default(ConstantGroup)), (icd!=null?((CommonTree)icd.Start):default(CommonTree))); 

			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("generic_clause", 65);
			LeaveRule("generic_clause", 65);
			LeaveRule_generic_clause();
		}
		DebugLocation(882, 4);
		} finally { DebugExitRule(GrammarFileName, "generic_clause"); }
		return value;

	}
	// $ANTLR end "generic_clause"

	partial void EnterRule_generic_map_aspect();
	partial void LeaveRule_generic_map_aspect();

	// $ANTLR start "generic_map_aspect"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:884:1: generic_map_aspect returns [List<AssociationElement> value] : ^( GENERIC_MAP association_list ) ;
	[GrammarRule("generic_map_aspect")]
	private List<AssociationElement> generic_map_aspect()
	{
		EnterRule_generic_map_aspect();
		EnterRule("generic_map_aspect", 66);
		TraceIn("generic_map_aspect", 66);
		List<AssociationElement> value = default(List<AssociationElement>);


		List<AssociationElement> association_list109 = default(List<AssociationElement>);

		try { DebugEnterRule(GrammarFileName, "generic_map_aspect");
		DebugLocation(884, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:885:5: ( ^( GENERIC_MAP association_list ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:885:9: ^( GENERIC_MAP association_list )
			{
			DebugLocation(885, 9);
			DebugLocation(885, 12);
			Match(input,GENERIC_MAP,Follow._GENERIC_MAP_in_generic_map_aspect7617); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(885, 24);
			PushFollow(Follow._association_list_in_generic_map_aspect7619);
			association_list109=association_list();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(885, 43);
			 value = association_list109; 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("generic_map_aspect", 66);
			LeaveRule("generic_map_aspect", 66);
			LeaveRule_generic_map_aspect();
		}
		DebugLocation(886, 4);
		} finally { DebugExitRule(GrammarFileName, "generic_map_aspect"); }
		return value;

	}
	// $ANTLR end "generic_map_aspect"

	partial void EnterRule_group_constituent();
	partial void LeaveRule_group_constituent();

	// $ANTLR start "group_constituent"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:888:1: group_constituent : ( name | CHARACTER_LITERAL );
	[GrammarRule("group_constituent")]
	private TreeRuleReturnScope<CommonTree> group_constituent()
	{
		EnterRule_group_constituent();
		EnterRule("group_constituent", 67);
		TraceIn("group_constituent", 67);
		TreeRuleReturnScope<CommonTree> retval = new TreeRuleReturnScope<CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "group_constituent");
		DebugLocation(888, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:889:5: ( name | CHARACTER_LITERAL )
			int alt105=2;
			try { DebugEnterDecision(105, false);
			int LA105_0 = input.LA(1);

			if ((LA105_0==NAME))
			{
				alt105 = 1;
			}
			else if ((LA105_0==CHARACTER_LITERAL))
			{
				alt105 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 105, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(105); }
			switch (alt105)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:889:9: name
				{
				DebugLocation(889, 9);
				PushFollow(Follow._name_in_group_constituent7642);
				name();
				PopFollow();


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:890:9: CHARACTER_LITERAL
				{
				DebugLocation(890, 9);
				Match(input,CHARACTER_LITERAL,Follow._CHARACTER_LITERAL_in_group_constituent7652); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("group_constituent", 67);
			LeaveRule("group_constituent", 67);
			LeaveRule_group_constituent();
		}
		DebugLocation(891, 4);
		} finally { DebugExitRule(GrammarFileName, "group_constituent"); }
		return retval;

	}
	// $ANTLR end "group_constituent"

	private sealed partial class group_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public Group value;
		public group_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_group_declaration();
	partial void LeaveRule_group_declaration();

	// $ANTLR start "group_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:896:1: group_declaration returns [Group value] : ^( GROUP_DECLARATION identifier group_template= name (gc= group_constituent )+ ) ;
	[GrammarRule("group_declaration")]
	private MetaClassCreator.group_declaration_return group_declaration()
	{
		EnterRule_group_declaration();
		EnterRule("group_declaration", 68);
		TraceIn("group_declaration", 68);
		MetaClassCreator.group_declaration_return retval = new MetaClassCreator.group_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return group_template = default(MetaClassCreator.name_return);
		TreeRuleReturnScope<CommonTree> gc = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> identifier110 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "group_declaration");
		DebugLocation(896, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:898:5: ( ^( GROUP_DECLARATION identifier group_template= name (gc= group_constituent )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:898:9: ^( GROUP_DECLARATION identifier group_template= name (gc= group_constituent )+ )
			{
			DebugLocation(898, 9);
			DebugLocation(898, 12);
			Match(input,GROUP_DECLARATION,Follow._GROUP_DECLARATION_in_group_declaration7685); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(899, 13);
			PushFollow(Follow._identifier_in_group_declaration7699);
			identifier110=identifier();
			PopFollow();

			DebugLocation(899, 38);
			PushFollow(Follow._name_in_group_declaration7703);
			group_template=name();
			PopFollow();

			DebugLocation(900, 13);

			                GroupTemplate dummy = new GroupTemplate((group_template!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(group_template.Start),input.TreeAdaptor.GetTokenStopIndex(group_template.Start))):null));
			                retval.value = new Group((identifier110!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier110.Start),input.TreeAdaptor.GetTokenStopIndex(identifier110.Start))):null), dummy);
			            
			DebugLocation(904, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:904:13: (gc= group_constituent )+
			int cnt106=0;
			try { DebugEnterSubRule(106);
			while (true)
			{
				int alt106=2;
				try { DebugEnterDecision(106, false);
				int LA106_0 = input.LA(1);

				if ((LA106_0==CHARACTER_LITERAL||LA106_0==NAME))
				{
					alt106 = 1;
				}


				} finally { DebugExitDecision(106); }
				switch (alt106)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:904:15: gc= group_constituent
					{
					DebugLocation(904, 17);
					PushFollow(Follow._group_constituent_in_group_declaration7735);
					gc=group_constituent();
					PopFollow();

					DebugLocation(904, 36);
					 retval.value.Constituents.Add((gc!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(gc.Start),input.TreeAdaptor.GetTokenStopIndex(gc.Start))):null)); 

					}
					break;

				default:
					if (cnt106 >= 1)
						goto loop106;

					EarlyExitException eee106 = new EarlyExitException( 106, input );
					DebugRecognitionException(eee106);
					throw eee106;
				}
				cnt106++;
			}
			loop106:
				;

			} finally { DebugExitSubRule(106); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("group_declaration", 68);
			LeaveRule("group_declaration", 68);
			LeaveRule_group_declaration();
		}
		DebugLocation(906, 4);
		} finally { DebugExitRule(GrammarFileName, "group_declaration"); }
		return retval;

	}
	// $ANTLR end "group_declaration"

	private sealed partial class group_template_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public GroupTemplate value;
		public group_template_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_group_template_declaration();
	partial void LeaveRule_group_template_declaration();

	// $ANTLR start "group_template_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:908:1: group_template_declaration returns [GroupTemplate value] : ^( GROUP_TEMPLATE_DECLARATION identifier (ec= entity_class ( BOX )? )+ ) ;
	[GrammarRule("group_template_declaration")]
	private MetaClassCreator.group_template_declaration_return group_template_declaration()
	{
		EnterRule_group_template_declaration();
		EnterRule("group_template_declaration", 69);
		TraceIn("group_template_declaration", 69);
		MetaClassCreator.group_template_declaration_return retval = new MetaClassCreator.group_template_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		EntityClass ec = default(EntityClass);
		TreeRuleReturnScope<CommonTree> identifier111 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "group_template_declaration");
		DebugLocation(908, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:910:5: ( ^( GROUP_TEMPLATE_DECLARATION identifier (ec= entity_class ( BOX )? )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:910:9: ^( GROUP_TEMPLATE_DECLARATION identifier (ec= entity_class ( BOX )? )+ )
			{
			DebugLocation(910, 9);
			DebugLocation(910, 12);
			Match(input,GROUP_TEMPLATE_DECLARATION,Follow._GROUP_TEMPLATE_DECLARATION_in_group_template_declaration7780); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(911, 13);
			PushFollow(Follow._identifier_in_group_template_declaration7794);
			identifier111=identifier();
			PopFollow();

			DebugLocation(911, 24);
			 retval.value = new GroupTemplate((identifier111!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier111.Start),input.TreeAdaptor.GetTokenStopIndex(identifier111.Start))):null)); 
			DebugLocation(912, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:912:13: (ec= entity_class ( BOX )? )+
			int cnt108=0;
			try { DebugEnterSubRule(108);
			while (true)
			{
				int alt108=2;
				try { DebugEnterDecision(108, false);
				int LA108_0 = input.LA(1);

				if ((LA108_0==ARCHITECTURE||LA108_0==COMPONENT||LA108_0==CONFIGURATION||LA108_0==CONSTANT||LA108_0==ENTITY||LA108_0==FILE||LA108_0==FUNCTION||LA108_0==GROUP||LA108_0==LABEL||LA108_0==LITERAL||LA108_0==PACKAGE||LA108_0==PROCEDURE||LA108_0==SIGNAL||LA108_0==SUBTYPE||LA108_0==TYPE||LA108_0==UNITS||LA108_0==VARIABLE))
				{
					alt108 = 1;
				}


				} finally { DebugExitDecision(108); }
				switch (alt108)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:913:17: ec= entity_class ( BOX )?
					{
					DebugLocation(913, 19);
					PushFollow(Follow._entity_class_in_group_template_declaration7830);
					ec=entity_class();
					PopFollow();

					DebugLocation(913, 33);
					 retval.value.EntityClasses.Add(ec); 
					DebugLocation(914, 17);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:914:17: ( BOX )?
					int alt107=2;
					try { DebugEnterSubRule(107);
					try { DebugEnterDecision(107, false);
					int LA107_0 = input.LA(1);

					if ((LA107_0==BOX))
					{
						alt107 = 1;
					}
					} finally { DebugExitDecision(107); }
					switch (alt107)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:914:19: BOX
						{
						DebugLocation(914, 19);
						Match(input,BOX,Follow._BOX_in_group_template_declaration7852); 
						DebugLocation(914, 23);
						 retval.value.RepeatLast = true; 

						}
						break;

					}
					} finally { DebugExitSubRule(107); }


					}
					break;

				default:
					if (cnt108 >= 1)
						goto loop108;

					EarlyExitException eee108 = new EarlyExitException( 108, input );
					DebugRecognitionException(eee108);
					throw eee108;
				}
				cnt108++;
			}
			loop108:
				;

			} finally { DebugExitSubRule(108); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("group_template_declaration", 69);
			LeaveRule("group_template_declaration", 69);
			LeaveRule_group_template_declaration();
		}
		DebugLocation(917, 4);
		} finally { DebugExitRule(GrammarFileName, "group_template_declaration"); }
		return retval;

	}
	// $ANTLR end "group_template_declaration"

	partial void EnterRule_identifier();
	partial void LeaveRule_identifier();

	// $ANTLR start "identifier"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:919:1: identifier : ( BASIC_IDENTIFIER | EXTENDED_IDENTIFIER );
	[GrammarRule("identifier")]
	private TreeRuleReturnScope<CommonTree> identifier()
	{
		EnterRule_identifier();
		EnterRule("identifier", 70);
		TraceIn("identifier", 70);
		TreeRuleReturnScope<CommonTree> retval = new TreeRuleReturnScope<CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "identifier");
		DebugLocation(919, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:920:5: ( BASIC_IDENTIFIER | EXTENDED_IDENTIFIER )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:
			{
			DebugLocation(920, 5);
			if (input.LA(1)==BASIC_IDENTIFIER||input.LA(1)==EXTENDED_IDENTIFIER)
			{
				input.Consume();
				state.errorRecovery=false;
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("identifier", 70);
			LeaveRule("identifier", 70);
			LeaveRule_identifier();
		}
		DebugLocation(922, 4);
		} finally { DebugExitRule(GrammarFileName, "identifier"); }
		return retval;

	}
	// $ANTLR end "identifier"

	partial void EnterRule_identifier_list();
	partial void LeaveRule_identifier_list();

	// $ANTLR start "identifier_list"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:924:1: identifier_list returns [List<string> value = new List<string>()] : ( identifier )+ ;
	[GrammarRule("identifier_list")]
	private List<string> identifier_list()
	{
		EnterRule_identifier_list();
		EnterRule("identifier_list", 71);
		TraceIn("identifier_list", 71);
		List<string> value =  new List<string>();


		TreeRuleReturnScope<CommonTree> identifier112 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "identifier_list");
		DebugLocation(924, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:925:5: ( ( identifier )+ )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:925:9: ( identifier )+
			{
			DebugLocation(925, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:925:9: ( identifier )+
			int cnt109=0;
			try { DebugEnterSubRule(109);
			while (true)
			{
				int alt109=2;
				try { DebugEnterDecision(109, false);
				int LA109_0 = input.LA(1);

				if ((LA109_0==BASIC_IDENTIFIER||LA109_0==EXTENDED_IDENTIFIER))
				{
					alt109 = 1;
				}


				} finally { DebugExitDecision(109); }
				switch (alt109)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:925:11: identifier
					{
					DebugLocation(925, 11);
					PushFollow(Follow._identifier_in_identifier_list7936);
					identifier112=identifier();
					PopFollow();

					DebugLocation(925, 22);
					 value.Add((identifier112!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier112.Start),input.TreeAdaptor.GetTokenStopIndex(identifier112.Start))):null)); 

					}
					break;

				default:
					if (cnt109 >= 1)
						goto loop109;

					EarlyExitException eee109 = new EarlyExitException( 109, input );
					DebugRecognitionException(eee109);
					throw eee109;
				}
				cnt109++;
			}
			loop109:
				;

			} finally { DebugExitSubRule(109); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("identifier_list", 71);
			LeaveRule("identifier_list", 71);
			LeaveRule_identifier_list();
		}
		DebugLocation(926, 4);
		} finally { DebugExitRule(GrammarFileName, "identifier_list"); }
		return value;

	}
	// $ANTLR end "identifier_list"

	partial void EnterRule_end_identifier();
	partial void LeaveRule_end_identifier();

	// $ANTLR start "end_identifier"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:927:1: end_identifier : identifier ;
	[GrammarRule("end_identifier")]
	private TreeRuleReturnScope<CommonTree> end_identifier()
	{
		EnterRule_end_identifier();
		EnterRule("end_identifier", 72);
		TraceIn("end_identifier", 72);
		TreeRuleReturnScope<CommonTree> retval = new TreeRuleReturnScope<CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "end_identifier");
		DebugLocation(927, 14);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:928:3: ( identifier )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:928:5: identifier
			{
			DebugLocation(928, 5);
			PushFollow(Follow._identifier_in_end_identifier7955);
			identifier();
			PopFollow();


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("end_identifier", 72);
			LeaveRule("end_identifier", 72);
			LeaveRule_end_identifier();
		}
		DebugLocation(928, 14);
		} finally { DebugExitRule(GrammarFileName, "end_identifier"); }
		return retval;

	}
	// $ANTLR end "end_identifier"

	private sealed partial class if_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public IfStatement value;
		public if_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_if_statement();
	partial void LeaveRule_if_statement();

	// $ANTLR start "if_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:930:1: if_statement[string label] returns [IfStatement value] : ^( IF c1= expression (ss1= sequential_statement )* ( ^( ELSIF c2= expression (ss2= sequential_statement )* ) )* ( ^( ELSE (ss3= sequential_statement )* ) )? ( end_identifier )? ) ;
	[GrammarRule("if_statement")]
	private MetaClassCreator.if_statement_return if_statement(string label)
	{
		EnterRule_if_statement();
		EnterRule("if_statement", 73);
		TraceIn("if_statement", 73);
		MetaClassCreator.if_statement_return retval = new MetaClassCreator.if_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.expression_return c1 = default(MetaClassCreator.expression_return);
		MetaClassCreator.sequential_statement_return ss1 = default(MetaClassCreator.sequential_statement_return);
		MetaClassCreator.expression_return c2 = default(MetaClassCreator.expression_return);
		MetaClassCreator.sequential_statement_return ss2 = default(MetaClassCreator.sequential_statement_return);
		MetaClassCreator.sequential_statement_return ss3 = default(MetaClassCreator.sequential_statement_return);
		TreeRuleReturnScope<CommonTree> end_identifier113 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "if_statement");
		DebugLocation(930, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:932:5: ( ^( IF c1= expression (ss1= sequential_statement )* ( ^( ELSIF c2= expression (ss2= sequential_statement )* ) )* ( ^( ELSE (ss3= sequential_statement )* ) )? ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:932:9: ^( IF c1= expression (ss1= sequential_statement )* ( ^( ELSIF c2= expression (ss2= sequential_statement )* ) )* ( ^( ELSE (ss3= sequential_statement )* ) )? ( end_identifier )? )
			{
			DebugLocation(932, 9);
			DebugLocation(932, 12);
			Match(input,IF,Follow._IF_in_if_statement7981); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(933, 15);
			PushFollow(Follow._expression_in_if_statement7997);
			c1=expression();
			PopFollow();

			DebugLocation(934, 13);

			                retval.value = new IfStatement((c1!=null?c1.value:default(Expression)));
			                retval.value.Label = label;
			            
			DebugLocation(938, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:938:13: (ss1= sequential_statement )*
			try { DebugEnterSubRule(110);
			while (true)
			{
				int alt110=2;
				try { DebugEnterDecision(110, false);
				int LA110_0 = input.LA(1);

				if ((LA110_0==ASSERT||LA110_0==CASE||LA110_0==EXIT||LA110_0==IF||LA110_0==LABEL_STATEMENT||LA110_0==LOOP||LA110_0==NEXT||LA110_0==NULLTOK||LA110_0==PROCEDURE_CALL||LA110_0==REPORT||LA110_0==RETURN||LA110_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA110_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA110_0<=WAIT)))
				{
					alt110 = 1;
				}


				} finally { DebugExitDecision(110); }
				switch ( alt110 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:938:15: ss1= sequential_statement
					{
					DebugLocation(938, 18);
					PushFollow(Follow._sequential_statement_in_if_statement8029);
					ss1=sequential_statement();
					PopFollow();

					DebugLocation(938, 40);
					 retval.value.Statements.Add((ss1!=null?ss1.value:default(SequentialStatement))); 

					}
					break;

				default:
					goto loop110;
				}
			}

			loop110:
				;

			} finally { DebugExitSubRule(110); }

			DebugLocation(939, 13);
			 AddListEndComments((ss1!=null?ss1.value:default(SequentialStatement)), (ss1!=null?((CommonTree)ss1.Start):default(CommonTree))); 
			DebugLocation(940, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:940:13: ( ^( ELSIF c2= expression (ss2= sequential_statement )* ) )*
			try { DebugEnterSubRule(112);
			while (true)
			{
				int alt112=2;
				try { DebugEnterDecision(112, false);
				int LA112_0 = input.LA(1);

				if ((LA112_0==ELSIF))
				{
					alt112 = 1;
				}


				} finally { DebugExitDecision(112); }
				switch ( alt112 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:941:17: ^( ELSIF c2= expression (ss2= sequential_statement )* )
					{
					DebugLocation(941, 17);
					DebugLocation(941, 20);
					Match(input,ELSIF,Follow._ELSIF_in_if_statement8082); 

					Match(input, TokenTypes.Down, null); 
					DebugLocation(942, 23);
					PushFollow(Follow._expression_in_if_statement8106);
					c2=expression();
					PopFollow();

					DebugLocation(943, 21);
					 IfStatement.ElsifPart part = retval.value.createElsifPart((c2!=null?c2.value:default(Expression))); 
					DebugLocation(944, 21);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:944:21: (ss2= sequential_statement )*
					try { DebugEnterSubRule(111);
					while (true)
					{
						int alt111=2;
						try { DebugEnterDecision(111, false);
						int LA111_0 = input.LA(1);

						if ((LA111_0==ASSERT||LA111_0==CASE||LA111_0==EXIT||LA111_0==IF||LA111_0==LABEL_STATEMENT||LA111_0==LOOP||LA111_0==NEXT||LA111_0==NULLTOK||LA111_0==PROCEDURE_CALL||LA111_0==REPORT||LA111_0==RETURN||LA111_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA111_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA111_0<=WAIT)))
						{
							alt111 = 1;
						}


						} finally { DebugExitDecision(111); }
						switch ( alt111 )
						{
						case 1:
							DebugEnterAlt(1);
							// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:944:23: ss2= sequential_statement
							{
							DebugLocation(944, 26);
							PushFollow(Follow._sequential_statement_in_if_statement8154);
							ss2=sequential_statement();
							PopFollow();

							DebugLocation(944, 48);
							 part.Statements.Add((ss2!=null?ss2.value:default(SequentialStatement))); 

							}
							break;

						default:
							goto loop111;
						}
					}

					loop111:
						;

					} finally { DebugExitSubRule(111); }

					DebugLocation(945, 21);
					 AddListEndComments((ss2!=null?ss2.value:default(SequentialStatement)), (ss2!=null?((CommonTree)ss2.Start):default(CommonTree))); 

					Match(input, TokenTypes.Up, null); 


					}
					break;

				default:
					goto loop112;
				}
			}

			loop112:
				;

			} finally { DebugExitSubRule(112); }

			DebugLocation(948, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:948:13: ( ^( ELSE (ss3= sequential_statement )* ) )?
			int alt114=2;
			try { DebugEnterSubRule(114);
			try { DebugEnterDecision(114, false);
			int LA114_0 = input.LA(1);

			if ((LA114_0==ELSE))
			{
				alt114 = 1;
			}
			} finally { DebugExitDecision(114); }
			switch (alt114)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:949:17: ^( ELSE (ss3= sequential_statement )* )
				{
				DebugLocation(949, 17);
				DebugLocation(949, 20);
				Match(input,ELSE,Follow._ELSE_in_if_statement8248); 

				if (input.LA(1) == TokenTypes.Down)
				{
					Match(input, TokenTypes.Down, null); 
					DebugLocation(950, 21);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:950:21: (ss3= sequential_statement )*
					try { DebugEnterSubRule(113);
					while (true)
					{
						int alt113=2;
						try { DebugEnterDecision(113, false);
						int LA113_0 = input.LA(1);

						if ((LA113_0==ASSERT||LA113_0==CASE||LA113_0==EXIT||LA113_0==IF||LA113_0==LABEL_STATEMENT||LA113_0==LOOP||LA113_0==NEXT||LA113_0==NULLTOK||LA113_0==PROCEDURE_CALL||LA113_0==REPORT||LA113_0==RETURN||LA113_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA113_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA113_0<=WAIT)))
						{
							alt113 = 1;
						}


						} finally { DebugExitDecision(113); }
						switch ( alt113 )
						{
						case 1:
							DebugEnterAlt(1);
							// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:950:23: ss3= sequential_statement
							{
							DebugLocation(950, 26);
							PushFollow(Follow._sequential_statement_in_if_statement8274);
							ss3=sequential_statement();
							PopFollow();

							DebugLocation(950, 48);
							 retval.value.ElseStatements.Add((ss3!=null?ss3.value:default(SequentialStatement))); 

							}
							break;

						default:
							goto loop113;
						}
					}

					loop113:
						;

					} finally { DebugExitSubRule(113); }

					DebugLocation(951, 21);
					 AddListEndComments((ss3!=null?ss3.value:default(SequentialStatement)), (ss3!=null?((CommonTree)ss3.Start):default(CommonTree))); 

					Match(input, TokenTypes.Up, null); 
				}


				}
				break;

			}
			} finally { DebugExitSubRule(114); }

			DebugLocation(954, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:954:13: ( end_identifier )?
			int alt115=2;
			try { DebugEnterSubRule(115);
			try { DebugEnterDecision(115, false);
			int LA115_0 = input.LA(1);

			if ((LA115_0==BASIC_IDENTIFIER||LA115_0==EXTENDED_IDENTIFIER))
			{
				alt115 = 1;
			}
			} finally { DebugExitDecision(115); }
			switch (alt115)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:954:13: end_identifier
				{
				DebugLocation(954, 13);
				PushFollow(Follow._end_identifier_in_if_statement8348);
				end_identifier113=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(115); }

			DebugLocation(955, 13);

			            	if(((end_identifier113!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier113.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier113.Start))):null) != null) && (!(end_identifier113!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier113.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier113.Start))):null).Equals(label, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier113!=null?((CommonTree)end_identifier113.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_IF, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier113!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier113.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier113.Start))):null), label));
			            

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("if_statement", 73);
			LeaveRule("if_statement", 73);
			LeaveRule_if_statement();
		}
		DebugLocation(960, 4);
		} finally { DebugExitRule(GrammarFileName, "if_statement"); }
		return retval;

	}
	// $ANTLR end "if_statement"

	partial void EnterRule_index_constraint();
	partial void LeaveRule_index_constraint();

	// $ANTLR start "index_constraint"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:962:1: index_constraint returns [List<DiscreteRange> value = new List<DiscreteRange>()] : ^( INDEX_CONSTRAINT ( discrete_range )+ ) ;
	[GrammarRule("index_constraint")]
	private List<DiscreteRange> index_constraint()
	{
		EnterRule_index_constraint();
		EnterRule("index_constraint", 74);
		TraceIn("index_constraint", 74);
		List<DiscreteRange> value =  new List<DiscreteRange>();


		DiscreteRange discrete_range114 = default(DiscreteRange);

		try { DebugEnterRule(GrammarFileName, "index_constraint");
		DebugLocation(962, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:963:5: ( ^( INDEX_CONSTRAINT ( discrete_range )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:963:9: ^( INDEX_CONSTRAINT ( discrete_range )+ )
			{
			DebugLocation(963, 9);
			DebugLocation(963, 12);
			Match(input,INDEX_CONSTRAINT,Follow._INDEX_CONSTRAINT_in_index_constraint8398); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(963, 29);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:963:29: ( discrete_range )+
			int cnt116=0;
			try { DebugEnterSubRule(116);
			while (true)
			{
				int alt116=2;
				try { DebugEnterDecision(116, false);
				int LA116_0 = input.LA(1);

				if ((LA116_0==DISCRETE_RANGE||LA116_0==DOWNTO||LA116_0==TO))
				{
					alt116 = 1;
				}


				} finally { DebugExitDecision(116); }
				switch (alt116)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:963:31: discrete_range
					{
					DebugLocation(963, 31);
					PushFollow(Follow._discrete_range_in_index_constraint8402);
					discrete_range114=discrete_range();
					PopFollow();

					DebugLocation(963, 46);
					 value.Add(discrete_range114); 

					}
					break;

				default:
					if (cnt116 >= 1)
						goto loop116;

					EarlyExitException eee116 = new EarlyExitException( 116, input );
					DebugRecognitionException(eee116);
					throw eee116;
				}
				cnt116++;
			}
			loop116:
				;

			} finally { DebugExitSubRule(116); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("index_constraint", 74);
			LeaveRule("index_constraint", 74);
			LeaveRule_index_constraint();
		}
		DebugLocation(964, 4);
		} finally { DebugExitRule(GrammarFileName, "index_constraint"); }
		return value;

	}
	// $ANTLR end "index_constraint"

	partial void EnterRule_instantiated_unit();
	partial void LeaveRule_instantiated_unit();

	// $ANTLR start "instantiated_unit"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:966:1: instantiated_unit[string label] returns [AbstractComponentInstantiation value] : ( ^( COMPONENT_INSTANCE ( COMPONENT )? component= name ) | ^( ENTITY entity= name (architecture= identifier |) ) | ^( CONFIGURATION configuration= name ) );
	[GrammarRule("instantiated_unit")]
	private AbstractComponentInstantiation instantiated_unit(string label)
	{
		EnterRule_instantiated_unit();
		EnterRule("instantiated_unit", 75);
		TraceIn("instantiated_unit", 75);
		AbstractComponentInstantiation value = default(AbstractComponentInstantiation);


		MetaClassCreator.name_return component = default(MetaClassCreator.name_return);
		MetaClassCreator.name_return entity = default(MetaClassCreator.name_return);
		TreeRuleReturnScope<CommonTree> architecture = default(TreeRuleReturnScope<CommonTree>);
		MetaClassCreator.name_return configuration = default(MetaClassCreator.name_return);

		 bool optionalComponent = false; 
		try { DebugEnterRule(GrammarFileName, "instantiated_unit");
		DebugLocation(966, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:968:5: ( ^( COMPONENT_INSTANCE ( COMPONENT )? component= name ) | ^( ENTITY entity= name (architecture= identifier |) ) | ^( CONFIGURATION configuration= name ) )
			int alt119=3;
			try { DebugEnterDecision(119, false);
			switch (input.LA(1))
			{
			case COMPONENT_INSTANCE:
				{
				alt119 = 1;
				}
				break;
			case ENTITY:
				{
				alt119 = 2;
				}
				break;
			case CONFIGURATION:
				{
				alt119 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 119, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(119); }
			switch (alt119)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:968:9: ^( COMPONENT_INSTANCE ( COMPONENT )? component= name )
				{
				DebugLocation(968, 9);
				DebugLocation(968, 12);
				Match(input,COMPONENT_INSTANCE,Follow._COMPONENT_INSTANCE_in_instantiated_unit8440); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(969, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:969:13: ( COMPONENT )?
				int alt117=2;
				try { DebugEnterSubRule(117);
				try { DebugEnterDecision(117, false);
				int LA117_0 = input.LA(1);

				if ((LA117_0==COMPONENT))
				{
					alt117 = 1;
				}
				} finally { DebugExitDecision(117); }
				switch (alt117)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:969:15: COMPONENT
					{
					DebugLocation(969, 15);
					Match(input,COMPONENT,Follow._COMPONENT_in_instantiated_unit8456); 
					DebugLocation(969, 25);
					 optionalComponent = true; 

					}
					break;

				}
				} finally { DebugExitSubRule(117); }

				DebugLocation(970, 22);
				PushFollow(Follow._name_in_instantiated_unit8477);
				component=name();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(972, 9);

				            value = new ComponentInstantiation(label, (component!=null?component.value:default(TemporaryName)).toComponent(currentScope));
				            if (optionalComponent) {
				                Annotations.putAnnotation(
				                    value, 
				                    new ComponentInstantiationFormat(optionalComponent)
				                );
				            }
				        

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:981:9: ^( ENTITY entity= name (architecture= identifier |) )
				{
				DebugLocation(981, 9);
				DebugLocation(981, 12);
				Match(input,ENTITY,Follow._ENTITY_in_instantiated_unit8509); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(981, 25);
				PushFollow(Follow._name_in_instantiated_unit8513);
				entity=name();
				PopFollow();

				DebugLocation(982, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:982:13: (architecture= identifier |)
				int alt118=2;
				try { DebugEnterSubRule(118);
				try { DebugEnterDecision(118, false);
				int LA118_0 = input.LA(1);

				if ((LA118_0==BASIC_IDENTIFIER||LA118_0==EXTENDED_IDENTIFIER))
				{
					alt118 = 1;
				}
				else if ((LA118_0==UP))
				{
					alt118 = 2;
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 118, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(118); }
				switch (alt118)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:983:21: architecture= identifier
					{
					DebugLocation(983, 33);
					PushFollow(Follow._identifier_in_instantiated_unit8551);
					architecture=identifier();
					PopFollow();

					DebugLocation(984, 21);

					                        //TODO: remove dummy architecture
					                        Architecture arch = new Architecture((architecture!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(architecture.Start),input.TreeAdaptor.GetTokenStopIndex(architecture.Start))):null), (entity!=null?entity.value:default(TemporaryName)).toEntity(currentScope));
					                        value = new ArchitectureInstantiation(label, arch);
					                    

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:990:21: 
					{
					DebugLocation(990, 21);
					 value = new EntityInstantiation(label, (entity!=null?entity.value:default(TemporaryName)).toEntity(currentScope)); 

					}
					break;

				}
				} finally { DebugExitSubRule(118); }


				Match(input, TokenTypes.Up, null); 


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:993:9: ^( CONFIGURATION configuration= name )
				{
				DebugLocation(993, 9);
				DebugLocation(993, 12);
				Match(input,CONFIGURATION,Follow._CONFIGURATION_in_instantiated_unit8649); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(993, 39);
				PushFollow(Follow._name_in_instantiated_unit8653);
				configuration=name();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(994, 9);
				 value = new ConfigurationInstantiation(label, (configuration!=null?configuration.value:default(TemporaryName)).toConfiguration(currentScope)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("instantiated_unit", 75);
			LeaveRule("instantiated_unit", 75);
			LeaveRule_instantiated_unit();
		}
		DebugLocation(995, 4);
		} finally { DebugExitRule(GrammarFileName, "instantiated_unit"); }
		return value;

	}
	// $ANTLR end "instantiated_unit"

	private sealed partial class integer_or_float_type_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public IntegerType value;
		public integer_or_float_type_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_integer_or_float_type_definition();
	partial void LeaveRule_integer_or_float_type_definition();

	// $ANTLR start "integer_or_float_type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:998:1: integer_or_float_type_definition[string ident] returns [IntegerType value] : ^( INTEGER_OR_FLOAT_TYPE_DEFINITION range_constraint ) ;
	[GrammarRule("integer_or_float_type_definition")]
	private MetaClassCreator.integer_or_float_type_definition_return integer_or_float_type_definition(string ident)
	{
		EnterRule_integer_or_float_type_definition();
		EnterRule("integer_or_float_type_definition", 76);
		TraceIn("integer_or_float_type_definition", 76);
		MetaClassCreator.integer_or_float_type_definition_return retval = new MetaClassCreator.integer_or_float_type_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		RangeProvider range_constraint115 = default(RangeProvider);

		try { DebugEnterRule(GrammarFileName, "integer_or_float_type_definition");
		DebugLocation(998, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1000:5: ( ^( INTEGER_OR_FLOAT_TYPE_DEFINITION range_constraint ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1000:9: ^( INTEGER_OR_FLOAT_TYPE_DEFINITION range_constraint )
			{
			DebugLocation(1000, 9);
			DebugLocation(1000, 12);
			Match(input,INTEGER_OR_FLOAT_TYPE_DEFINITION,Follow._INTEGER_OR_FLOAT_TYPE_DEFINITION_in_integer_or_float_type_definition8697); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1000, 45);
			PushFollow(Follow._range_constraint_in_integer_or_float_type_definition8699);
			range_constraint115=range_constraint();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1001, 9);
			 retval.value = new IntegerType(ident, range_constraint115); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("integer_or_float_type_definition", 76);
			LeaveRule("integer_or_float_type_definition", 76);
			LeaveRule_integer_or_float_type_definition();
		}
		DebugLocation(1002, 4);
		} finally { DebugExitRule(GrammarFileName, "integer_or_float_type_definition"); }
		return retval;

	}
	// $ANTLR end "integer_or_float_type_definition"

	private sealed partial class interface_constant_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public ConstantGroup value;
		public interface_constant_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_interface_constant_declaration();
	partial void LeaveRule_interface_constant_declaration();

	// $ANTLR start "interface_constant_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1004:1: interface_constant_declaration returns [ConstantGroup value] : ^( INTERFACE_CONSTANT_DECLARATION ( CONSTANT )? identifier_list ( IN )? si= subtype_indication (def= expression )? ) ;
	[GrammarRule("interface_constant_declaration")]
	private MetaClassCreator.interface_constant_declaration_return interface_constant_declaration()
	{
		EnterRule_interface_constant_declaration();
		EnterRule("interface_constant_declaration", 77);
		TraceIn("interface_constant_declaration", 77);
		MetaClassCreator.interface_constant_declaration_return retval = new MetaClassCreator.interface_constant_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication si = default(ISubtypeIndication);
		MetaClassCreator.expression_return def = default(MetaClassCreator.expression_return);
		List<string> identifier_list116 = default(List<string>);


		    bool hasObjectClass = false;
		    bool hasMode = false;

		try { DebugEnterRule(GrammarFileName, "interface_constant_declaration");
		DebugLocation(1004, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1012:5: ( ^( INTERFACE_CONSTANT_DECLARATION ( CONSTANT )? identifier_list ( IN )? si= subtype_indication (def= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1012:9: ^( INTERFACE_CONSTANT_DECLARATION ( CONSTANT )? identifier_list ( IN )? si= subtype_indication (def= expression )? )
			{
			DebugLocation(1012, 9);
			DebugLocation(1012, 12);
			Match(input,INTERFACE_CONSTANT_DECLARATION,Follow._INTERFACE_CONSTANT_DECLARATION_in_interface_constant_declaration8745); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1013, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1013:13: ( CONSTANT )?
			int alt120=2;
			try { DebugEnterSubRule(120);
			try { DebugEnterDecision(120, false);
			int LA120_0 = input.LA(1);

			if ((LA120_0==CONSTANT))
			{
				alt120 = 1;
			}
			} finally { DebugExitDecision(120); }
			switch (alt120)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1013:15: CONSTANT
				{
				DebugLocation(1013, 15);
				Match(input,CONSTANT,Follow._CONSTANT_in_interface_constant_declaration8761); 
				DebugLocation(1013, 24);
				 hasObjectClass = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(120); }

			DebugLocation(1014, 13);
			PushFollow(Follow._identifier_list_in_interface_constant_declaration8780);
			identifier_list116=identifier_list();
			PopFollow();

			DebugLocation(1015, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1015:13: ( IN )?
			int alt121=2;
			try { DebugEnterSubRule(121);
			try { DebugEnterDecision(121, false);
			int LA121_0 = input.LA(1);

			if ((LA121_0==IN))
			{
				alt121 = 1;
			}
			} finally { DebugExitDecision(121); }
			switch (alt121)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1015:15: IN
				{
				DebugLocation(1015, 15);
				Match(input,IN,Follow._IN_in_interface_constant_declaration8796); 
				DebugLocation(1015, 18);
				 hasMode = true;

				}
				break;

			}
			} finally { DebugExitSubRule(121); }

			DebugLocation(1016, 15);
			PushFollow(Follow._subtype_indication_in_interface_constant_declaration8817);
			si=subtype_indication();
			PopFollow();

			DebugLocation(1017, 16);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1017:16: (def= expression )?
			int alt122=2;
			try { DebugEnterSubRule(122);
			try { DebugEnterDecision(122, false);
			int LA122_0 = input.LA(1);

			if ((LA122_0==EXPRESSION))
			{
				alt122 = 1;
			}
			} finally { DebugExitDecision(122); }
			switch (alt122)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1017:16: def= expression
				{
				DebugLocation(1017, 16);
				PushFollow(Follow._expression_in_interface_constant_declaration8833);
				def=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(122); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1019, 9);

			            InterfaceDeclarationFormat format =
			                new InterfaceDeclarationFormat(hasObjectClass, hasMode);

			            retval.value = new ConstantGroup();
			            foreach (string identifier in identifier_list116)
			            {
			                Constant c = new Constant(identifier, si, (def!=null?def.value:default(Expression)));
			                Annotations.putAnnotation(c, format);

			                retval.value.Elements.Add(c);
			            }
			        

			}


			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("interface_constant_declaration", 77);
			LeaveRule("interface_constant_declaration", 77);
			LeaveRule_interface_constant_declaration();
		}
		DebugLocation(1032, 4);
		} finally { DebugExitRule(GrammarFileName, "interface_constant_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_constant_declaration"

	partial void EnterRule_interface_declaration();
	partial void LeaveRule_interface_declaration();

	// $ANTLR start "interface_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1034:1: interface_declaration returns [IVhdlObjectProvider value] : (isd= interface_signal_declaration |icd= interface_constant_declaration |ivd= interface_variable_declaration |ifd= interface_file_declaration );
	[GrammarRule("interface_declaration")]
	private IVhdlObjectProvider interface_declaration()
	{
		EnterRule_interface_declaration();
		EnterRule("interface_declaration", 78);
		TraceIn("interface_declaration", 78);
		IVhdlObjectProvider value = default(IVhdlObjectProvider);


		MetaClassCreator.interface_signal_declaration_return isd = default(MetaClassCreator.interface_signal_declaration_return);
		MetaClassCreator.interface_constant_declaration_return icd = default(MetaClassCreator.interface_constant_declaration_return);
		VariableGroup ivd = default(VariableGroup);
		FileGroup ifd = default(FileGroup);

		try { DebugEnterRule(GrammarFileName, "interface_declaration");
		DebugLocation(1034, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1035:5: (isd= interface_signal_declaration |icd= interface_constant_declaration |ivd= interface_variable_declaration |ifd= interface_file_declaration )
			int alt123=4;
			try { DebugEnterDecision(123, false);
			switch (input.LA(1))
			{
			case INTERFACE_SIGNAL_DECLARATION:
				{
				alt123 = 1;
				}
				break;
			case INTERFACE_CONSTANT_DECLARATION:
				{
				alt123 = 2;
				}
				break;
			case INTERFACE_VARIABLE_DECLARATION:
				{
				alt123 = 3;
				}
				break;
			case INTERFACE_FILE_DECLARATION:
				{
				alt123 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 123, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(123); }
			switch (alt123)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1035:9: isd= interface_signal_declaration
				{
				DebugLocation(1035, 12);
				PushFollow(Follow._interface_signal_declaration_in_interface_declaration8879);
				isd=interface_signal_declaration();
				PopFollow();

				DebugLocation(1035, 44);
				 value = (isd!=null?isd.value:default(SignalGroup)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1036:9: icd= interface_constant_declaration
				{
				DebugLocation(1036, 12);
				PushFollow(Follow._interface_constant_declaration_in_interface_declaration8895);
				icd=interface_constant_declaration();
				PopFollow();

				DebugLocation(1036, 44);
				 value = (icd!=null?icd.value:default(ConstantGroup)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1037:9: ivd= interface_variable_declaration
				{
				DebugLocation(1037, 12);
				PushFollow(Follow._interface_variable_declaration_in_interface_declaration8909);
				ivd=interface_variable_declaration();
				PopFollow();

				DebugLocation(1037, 44);
				 value = ivd; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1038:9: ifd= interface_file_declaration
				{
				DebugLocation(1038, 12);
				PushFollow(Follow._interface_file_declaration_in_interface_declaration8923);
				ifd=interface_file_declaration();
				PopFollow();

				DebugLocation(1038, 44);
				 value = ifd; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("interface_declaration", 78);
			LeaveRule("interface_declaration", 78);
			LeaveRule_interface_declaration();
		}
		DebugLocation(1039, 4);
		} finally { DebugExitRule(GrammarFileName, "interface_declaration"); }
		return value;

	}
	// $ANTLR end "interface_declaration"

	partial void EnterRule_interface_file_declaration();
	partial void LeaveRule_interface_file_declaration();

	// $ANTLR start "interface_file_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1041:1: interface_file_declaration returns [FileGroup value] : ^( INTERFACE_FILE_DECLARATION FILE identifier_list subtype_indication ) ;
	[GrammarRule("interface_file_declaration")]
	private FileGroup interface_file_declaration()
	{
		EnterRule_interface_file_declaration();
		EnterRule("interface_file_declaration", 79);
		TraceIn("interface_file_declaration", 79);
		FileGroup value = default(FileGroup);


		List<string> identifier_list117 = default(List<string>);
		ISubtypeIndication subtype_indication118 = default(ISubtypeIndication);

		try { DebugEnterRule(GrammarFileName, "interface_file_declaration");
		DebugLocation(1041, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1042:5: ( ^( INTERFACE_FILE_DECLARATION FILE identifier_list subtype_indication ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1042:9: ^( INTERFACE_FILE_DECLARATION FILE identifier_list subtype_indication )
			{
			DebugLocation(1042, 9);
			DebugLocation(1042, 12);
			Match(input,INTERFACE_FILE_DECLARATION,Follow._INTERFACE_FILE_DECLARATION_in_interface_file_declaration8954); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1042, 39);
			Match(input,FILE,Follow._FILE_in_interface_file_declaration8956); 
			DebugLocation(1042, 44);
			PushFollow(Follow._identifier_list_in_interface_file_declaration8958);
			identifier_list117=identifier_list();
			PopFollow();

			DebugLocation(1042, 60);
			PushFollow(Follow._subtype_indication_in_interface_file_declaration8960);
			subtype_indication118=subtype_indication();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1043, 9);

			            value = new FileGroup();
			            foreach (string identifier in identifier_list117)
			            {
			                value.Elements.Add(new FileObject(identifier, subtype_indication118));
			            }
			        

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("interface_file_declaration", 79);
			LeaveRule("interface_file_declaration", 79);
			LeaveRule_interface_file_declaration();
		}
		DebugLocation(1050, 4);
		} finally { DebugExitRule(GrammarFileName, "interface_file_declaration"); }
		return value;

	}
	// $ANTLR end "interface_file_declaration"

	private sealed partial class interface_signal_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public SignalGroup value;
		public interface_signal_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_interface_signal_declaration();
	partial void LeaveRule_interface_signal_declaration();

	// $ANTLR start "interface_signal_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1052:1: interface_signal_declaration returns [SignalGroup value] : ^( INTERFACE_SIGNAL_DECLARATION ( SIGNAL )? identifier_list ( mode )? si= subtype_indication ( BUS )? (def= expression )? ) ;
	[GrammarRule("interface_signal_declaration")]
	private MetaClassCreator.interface_signal_declaration_return interface_signal_declaration()
	{
		EnterRule_interface_signal_declaration();
		EnterRule("interface_signal_declaration", 80);
		TraceIn("interface_signal_declaration", 80);
		MetaClassCreator.interface_signal_declaration_return retval = new MetaClassCreator.interface_signal_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication si = default(ISubtypeIndication);
		MetaClassCreator.expression_return def = default(MetaClassCreator.expression_return);
		VhdlObject.ModeEnum mode119 = default(VhdlObject.ModeEnum);
		List<string> identifier_list120 = default(List<string>);


		    bool hasObjectClass = false;
		    bool hasMode = false;
		    bool isBus = false;

		try { DebugEnterRule(GrammarFileName, "interface_signal_declaration");
		DebugLocation(1052, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1061:5: ( ^( INTERFACE_SIGNAL_DECLARATION ( SIGNAL )? identifier_list ( mode )? si= subtype_indication ( BUS )? (def= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1061:9: ^( INTERFACE_SIGNAL_DECLARATION ( SIGNAL )? identifier_list ( mode )? si= subtype_indication ( BUS )? (def= expression )? )
			{
			DebugLocation(1061, 9);
			DebugLocation(1061, 12);
			Match(input,INTERFACE_SIGNAL_DECLARATION,Follow._INTERFACE_SIGNAL_DECLARATION_in_interface_signal_declaration9006); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1062, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1062:13: ( SIGNAL )?
			int alt124=2;
			try { DebugEnterSubRule(124);
			try { DebugEnterDecision(124, false);
			int LA124_0 = input.LA(1);

			if ((LA124_0==SIGNAL))
			{
				alt124 = 1;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1062:15: SIGNAL
				{
				DebugLocation(1062, 15);
				Match(input,SIGNAL,Follow._SIGNAL_in_interface_signal_declaration9022); 
				DebugLocation(1062, 22);
				 hasObjectClass = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(124); }

			DebugLocation(1063, 13);
			PushFollow(Follow._identifier_list_in_interface_signal_declaration9041);
			identifier_list120=identifier_list();
			PopFollow();

			DebugLocation(1064, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1064:13: ( mode )?
			int alt125=2;
			try { DebugEnterSubRule(125);
			try { DebugEnterDecision(125, false);
			int LA125_0 = input.LA(1);

			if ((LA125_0==BUFFER||LA125_0==IN||LA125_0==INOUT||LA125_0==LINKAGE||LA125_0==OUT))
			{
				alt125 = 1;
			}
			} finally { DebugExitDecision(125); }
			switch (alt125)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1064:15: mode
				{
				DebugLocation(1064, 15);
				PushFollow(Follow._mode_in_interface_signal_declaration9057);
				mode119=mode();
				PopFollow();

				DebugLocation(1064, 20);
				 hasMode = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(125); }

			DebugLocation(1065, 15);
			PushFollow(Follow._subtype_indication_in_interface_signal_declaration9078);
			si=subtype_indication();
			PopFollow();

			DebugLocation(1066, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1066:13: ( BUS )?
			int alt126=2;
			try { DebugEnterSubRule(126);
			try { DebugEnterDecision(126, false);
			int LA126_0 = input.LA(1);

			if ((LA126_0==BUS))
			{
				alt126 = 1;
			}
			} finally { DebugExitDecision(126); }
			switch (alt126)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1066:15: BUS
				{
				DebugLocation(1066, 15);
				Match(input,BUS,Follow._BUS_in_interface_signal_declaration9094); 
				DebugLocation(1066, 19);
				 isBus = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(126); }

			DebugLocation(1067, 16);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1067:16: (def= expression )?
			int alt127=2;
			try { DebugEnterSubRule(127);
			try { DebugEnterDecision(127, false);
			int LA127_0 = input.LA(1);

			if ((LA127_0==EXPRESSION))
			{
				alt127 = 1;
			}
			} finally { DebugExitDecision(127); }
			switch (alt127)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1067:16: def= expression
				{
				DebugLocation(1067, 16);
				PushFollow(Follow._expression_in_interface_signal_declaration9115);
				def=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(127); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1069, 9);

			            InterfaceDeclarationFormat format =
			                new InterfaceDeclarationFormat(hasObjectClass, hasMode);

			            retval.value = new SignalGroup();
			            Signal.ModeEnum m = ((mode119 == null) ? Signal.ModeEnum.IN : mode119);
			            foreach (string identifier in identifier_list120) {
			                Signal s = new Signal(identifier, m, si, (def!=null?def.value:default(Expression)));
			                if (isBus) 
			                {
			                    s.Kind = Signal.KindEnum.BUS;
			                }
			                Annotations.putAnnotation(s, format);

			                retval.value.Elements.Add(s);
			            }
			        

			}


			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("interface_signal_declaration", 80);
			LeaveRule("interface_signal_declaration", 80);
			LeaveRule_interface_signal_declaration();
		}
		DebugLocation(1086, 4);
		} finally { DebugExitRule(GrammarFileName, "interface_signal_declaration"); }
		return retval;

	}
	// $ANTLR end "interface_signal_declaration"

	partial void EnterRule_interface_variable_declaration();
	partial void LeaveRule_interface_variable_declaration();

	// $ANTLR start "interface_variable_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1088:1: interface_variable_declaration returns [VariableGroup value] : ^( INTERFACE_VARIABLE_DECLARATION ( VARIABLE )? identifier_list ( mode )? si= subtype_indication (def= expression )? ) ;
	[GrammarRule("interface_variable_declaration")]
	private VariableGroup interface_variable_declaration()
	{
		EnterRule_interface_variable_declaration();
		EnterRule("interface_variable_declaration", 81);
		TraceIn("interface_variable_declaration", 81);
		VariableGroup value = default(VariableGroup);


		ISubtypeIndication si = default(ISubtypeIndication);
		MetaClassCreator.expression_return def = default(MetaClassCreator.expression_return);
		List<string> identifier_list121 = default(List<string>);
		VhdlObject.ModeEnum mode122 = default(VhdlObject.ModeEnum);


		    bool hasObjectClass = false;
		    bool hasMode = false;

		try { DebugEnterRule(GrammarFileName, "interface_variable_declaration");
		DebugLocation(1088, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1093:5: ( ^( INTERFACE_VARIABLE_DECLARATION ( VARIABLE )? identifier_list ( mode )? si= subtype_indication (def= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1093:9: ^( INTERFACE_VARIABLE_DECLARATION ( VARIABLE )? identifier_list ( mode )? si= subtype_indication (def= expression )? )
			{
			DebugLocation(1093, 9);
			DebugLocation(1093, 12);
			Match(input,INTERFACE_VARIABLE_DECLARATION,Follow._INTERFACE_VARIABLE_DECLARATION_in_interface_variable_declaration9165); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1094, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1094:13: ( VARIABLE )?
			int alt128=2;
			try { DebugEnterSubRule(128);
			try { DebugEnterDecision(128, false);
			int LA128_0 = input.LA(1);

			if ((LA128_0==VARIABLE))
			{
				alt128 = 1;
			}
			} finally { DebugExitDecision(128); }
			switch (alt128)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1094:15: VARIABLE
				{
				DebugLocation(1094, 15);
				Match(input,VARIABLE,Follow._VARIABLE_in_interface_variable_declaration9181); 
				DebugLocation(1094, 24);
				 hasObjectClass = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(128); }

			DebugLocation(1095, 13);
			PushFollow(Follow._identifier_list_in_interface_variable_declaration9200);
			identifier_list121=identifier_list();
			PopFollow();

			DebugLocation(1096, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1096:13: ( mode )?
			int alt129=2;
			try { DebugEnterSubRule(129);
			try { DebugEnterDecision(129, false);
			int LA129_0 = input.LA(1);

			if ((LA129_0==BUFFER||LA129_0==IN||LA129_0==INOUT||LA129_0==LINKAGE||LA129_0==OUT))
			{
				alt129 = 1;
			}
			} finally { DebugExitDecision(129); }
			switch (alt129)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1096:15: mode
				{
				DebugLocation(1096, 15);
				PushFollow(Follow._mode_in_interface_variable_declaration9216);
				mode122=mode();
				PopFollow();

				DebugLocation(1096, 20);
				 hasMode = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(129); }

			DebugLocation(1097, 15);
			PushFollow(Follow._subtype_indication_in_interface_variable_declaration9237);
			si=subtype_indication();
			PopFollow();

			DebugLocation(1098, 16);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1098:16: (def= expression )?
			int alt130=2;
			try { DebugEnterSubRule(130);
			try { DebugEnterDecision(130, false);
			int LA130_0 = input.LA(1);

			if ((LA130_0==EXPRESSION))
			{
				alt130 = 1;
			}
			} finally { DebugExitDecision(130); }
			switch (alt130)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1098:16: def= expression
				{
				DebugLocation(1098, 16);
				PushFollow(Follow._expression_in_interface_variable_declaration9253);
				def=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(130); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1100, 9);

			            InterfaceDeclarationFormat format =
			                new InterfaceDeclarationFormat(hasObjectClass, hasMode);

			            value = new VariableGroup();
			            foreach (string identifier in identifier_list121)
			            {
			                Variable v = new Variable(identifier, si, (def!=null?def.value:default(Expression)));
			                if (hasMode)
			                {
			                    v.Mode = mode122;
			                }
			                Annotations.putAnnotation(v, format);

			                value.Elements.Add(v);
			            }
			        

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("interface_variable_declaration", 81);
			LeaveRule("interface_variable_declaration", 81);
			LeaveRule_interface_variable_declaration();
		}
		DebugLocation(1117, 4);
		} finally { DebugExitRule(GrammarFileName, "interface_variable_declaration"); }
		return value;

	}
	// $ANTLR end "interface_variable_declaration"

	partial void EnterRule_iteration_scheme();
	partial void LeaveRule_iteration_scheme();

	// $ANTLR start "iteration_scheme"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1119:1: iteration_scheme returns [LoopStatement value] : ( ^( WHILE expression ) | ^( FOR identifier discrete_range ) | UNCONDITIONAL_LOOP );
	[GrammarRule("iteration_scheme")]
	private LoopStatement iteration_scheme()
	{
		EnterRule_iteration_scheme();
		EnterRule("iteration_scheme", 82);
		TraceIn("iteration_scheme", 82);
		LoopStatement value = default(LoopStatement);


		MetaClassCreator.expression_return expression123 = default(MetaClassCreator.expression_return);
		TreeRuleReturnScope<CommonTree> identifier124 = default(TreeRuleReturnScope<CommonTree>);
		DiscreteRange discrete_range125 = default(DiscreteRange);

		try { DebugEnterRule(GrammarFileName, "iteration_scheme");
		DebugLocation(1119, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1120:5: ( ^( WHILE expression ) | ^( FOR identifier discrete_range ) | UNCONDITIONAL_LOOP )
			int alt131=3;
			try { DebugEnterDecision(131, false);
			switch (input.LA(1))
			{
			case WHILE:
				{
				alt131 = 1;
				}
				break;
			case FOR:
				{
				alt131 = 2;
				}
				break;
			case UNCONDITIONAL_LOOP:
				{
				alt131 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 131, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(131); }
			switch (alt131)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1120:9: ^( WHILE expression )
				{
				DebugLocation(1120, 9);
				DebugLocation(1120, 12);
				Match(input,WHILE,Follow._WHILE_in_iteration_scheme9299); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1120, 18);
				PushFollow(Follow._expression_in_iteration_scheme9301);
				expression123=expression();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1121, 9);
				 value = new WhileStatement((expression123!=null?expression123.value:default(Expression))); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1122:9: ^( FOR identifier discrete_range )
				{
				DebugLocation(1122, 9);
				DebugLocation(1122, 12);
				Match(input,FOR,Follow._FOR_in_iteration_scheme9325); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1122, 16);
				PushFollow(Follow._identifier_in_iteration_scheme9327);
				identifier124=identifier();
				PopFollow();

				DebugLocation(1122, 27);
				PushFollow(Follow._discrete_range_in_iteration_scheme9329);
				discrete_range125=discrete_range();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1123, 9);
				 value = new ForStatement((identifier124!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier124.Start),input.TreeAdaptor.GetTokenStopIndex(identifier124.Start))):null), discrete_range125); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1124:9: UNCONDITIONAL_LOOP
				{
				DebugLocation(1124, 9);
				Match(input,UNCONDITIONAL_LOOP,Follow._UNCONDITIONAL_LOOP_in_iteration_scheme9351); 
				DebugLocation(1125, 9);
				 value = new LoopStatement(); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("iteration_scheme", 82);
			LeaveRule("iteration_scheme", 82);
			LeaveRule_iteration_scheme();
		}
		DebugLocation(1126, 4);
		} finally { DebugExitRule(GrammarFileName, "iteration_scheme"); }
		return value;

	}
	// $ANTLR end "iteration_scheme"

	private sealed partial class library_clause_return : TreeRuleReturnScope<CommonTree>
	{
		public LibraryClause value;
		public library_clause_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_library_clause();
	partial void LeaveRule_library_clause();

	// $ANTLR start "library_clause"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1128:1: library_clause returns [LibraryClause value] : ^( LIBRARY logical_name_list ) ;
	[GrammarRule("library_clause")]
	private MetaClassCreator.library_clause_return library_clause()
	{
		EnterRule_library_clause();
		EnterRule("library_clause", 83);
		TraceIn("library_clause", 83);
		MetaClassCreator.library_clause_return retval = new MetaClassCreator.library_clause_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<string> logical_name_list126 = default(List<string>);

		try { DebugEnterRule(GrammarFileName, "library_clause");
		DebugLocation(1128, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1134:5: ( ^( LIBRARY logical_name_list ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1134:9: ^( LIBRARY logical_name_list )
			{
			DebugLocation(1134, 9);
			DebugLocation(1134, 12);
			Match(input,LIBRARY,Follow._LIBRARY_in_library_clause9391); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1134, 20);
			PushFollow(Follow._logical_name_list_in_library_clause9393);
			logical_name_list126=logical_name_list();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1135, 9);
			 retval.value = new LibraryClause(logical_name_list126); 

			}


				AddAnnotations(retval.value, retval.Start);
				CheckLibraryClause(retval.Start, retval.value);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("library_clause", 83);
			LeaveRule("library_clause", 83);
			LeaveRule_library_clause();
		}
		DebugLocation(1136, 4);
		} finally { DebugExitRule(GrammarFileName, "library_clause"); }
		return retval;

	}
	// $ANTLR end "library_clause"

	partial void EnterRule_primary_unit();
	partial void LeaveRule_primary_unit();

	// $ANTLR start "primary_unit"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1138:1: primary_unit[List<LibraryUnit> contextItems] returns [PrimaryUnit value] : ( entity_declaration[contextItems] | configuration_declaration[contextItems] | package_declaration[contextItems] );
	[GrammarRule("primary_unit")]
	private PrimaryUnit primary_unit(List<LibraryUnit> contextItems)
	{
		EnterRule_primary_unit();
		EnterRule("primary_unit", 84);
		TraceIn("primary_unit", 84);
		PrimaryUnit value = default(PrimaryUnit);


		MetaClassCreator.entity_declaration_return entity_declaration127 = default(MetaClassCreator.entity_declaration_return);
		MetaClassCreator.configuration_declaration_return configuration_declaration128 = default(MetaClassCreator.configuration_declaration_return);
		MetaClassCreator.package_declaration_return package_declaration129 = default(MetaClassCreator.package_declaration_return);

		try { DebugEnterRule(GrammarFileName, "primary_unit");
		DebugLocation(1138, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1139:5: ( entity_declaration[contextItems] | configuration_declaration[contextItems] | package_declaration[contextItems] )
			int alt132=3;
			try { DebugEnterDecision(132, false);
			switch (input.LA(1))
			{
			case ENTITY:
				{
				alt132 = 1;
				}
				break;
			case CONFIGURATION:
				{
				alt132 = 2;
				}
				break;
			case PACKAGE:
				{
				alt132 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 132, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(132); }
			switch (alt132)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1139:9: entity_declaration[contextItems]
				{
				DebugLocation(1139, 9);
				PushFollow(Follow._entity_declaration_in_primary_unit9429);
				entity_declaration127=entity_declaration(contextItems);
				PopFollow();

				DebugLocation(1139, 49);
				 value = (entity_declaration127!=null?entity_declaration127.value:default(Entity)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1140:9: configuration_declaration[contextItems]
				{
				DebugLocation(1140, 9);
				PushFollow(Follow._configuration_declaration_in_primary_unit9449);
				configuration_declaration128=configuration_declaration(contextItems);
				PopFollow();

				DebugLocation(1140, 49);
				 value = (configuration_declaration128!=null?configuration_declaration128.value:default(Configuration)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1141:9: package_declaration[contextItems]
				{
				DebugLocation(1141, 9);
				PushFollow(Follow._package_declaration_in_primary_unit9462);
				package_declaration129=package_declaration(contextItems);
				PopFollow();

				DebugLocation(1141, 49);
				 value = (package_declaration129!=null?package_declaration129.value:default(PackageDeclaration)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("primary_unit", 84);
			LeaveRule("primary_unit", 84);
			LeaveRule_primary_unit();
		}
		DebugLocation(1142, 4);
		} finally { DebugExitRule(GrammarFileName, "primary_unit"); }
		return value;

	}
	// $ANTLR end "primary_unit"

	partial void EnterRule_secondary_unit();
	partial void LeaveRule_secondary_unit();

	// $ANTLR start "secondary_unit"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1144:1: secondary_unit[List<LibraryUnit> contextItems] returns [SecondaryUnit value] : ( architecture_body[contextItems] | package_body[contextItems] );
	[GrammarRule("secondary_unit")]
	private SecondaryUnit secondary_unit(List<LibraryUnit> contextItems)
	{
		EnterRule_secondary_unit();
		EnterRule("secondary_unit", 85);
		TraceIn("secondary_unit", 85);
		SecondaryUnit value = default(SecondaryUnit);


		MetaClassCreator.architecture_body_return architecture_body130 = default(MetaClassCreator.architecture_body_return);
		MetaClassCreator.package_body_return package_body131 = default(MetaClassCreator.package_body_return);

		try { DebugEnterRule(GrammarFileName, "secondary_unit");
		DebugLocation(1144, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1145:5: ( architecture_body[contextItems] | package_body[contextItems] )
			int alt133=2;
			try { DebugEnterDecision(133, false);
			int LA133_0 = input.LA(1);

			if ((LA133_0==ARCHITECTURE))
			{
				alt133 = 1;
			}
			else if ((LA133_0==PACKAGE_BODY))
			{
				alt133 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 133, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(133); }
			switch (alt133)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1145:7: architecture_body[contextItems]
				{
				DebugLocation(1145, 7);
				PushFollow(Follow._architecture_body_in_secondary_unit9497);
				architecture_body130=architecture_body(contextItems);
				PopFollow();

				DebugLocation(1145, 47);
				 value = (architecture_body130!=null?architecture_body130.value:default(Architecture)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1146:9: package_body[contextItems]
				{
				DebugLocation(1146, 9);
				PushFollow(Follow._package_body_in_secondary_unit9518);
				package_body131=package_body(contextItems);
				PopFollow();

				DebugLocation(1146, 49);
				 value = (package_body131!=null?package_body131.value:default(PackageBody)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("secondary_unit", 85);
			LeaveRule("secondary_unit", 85);
			LeaveRule_secondary_unit();
		}
		DebugLocation(1147, 4);
		} finally { DebugExitRule(GrammarFileName, "secondary_unit"); }
		return value;

	}
	// $ANTLR end "secondary_unit"

	partial void EnterRule_logical_name_list();
	partial void LeaveRule_logical_name_list();

	// $ANTLR start "logical_name_list"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1149:1: logical_name_list returns [List<string> value = new List<string>()] : ( identifier )+ ;
	[GrammarRule("logical_name_list")]
	private List<string> logical_name_list()
	{
		EnterRule_logical_name_list();
		EnterRule("logical_name_list", 86);
		TraceIn("logical_name_list", 86);
		List<string> value =  new List<string>();


		TreeRuleReturnScope<CommonTree> identifier132 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "logical_name_list");
		DebugLocation(1149, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1150:5: ( ( identifier )+ )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1150:9: ( identifier )+
			{
			DebugLocation(1150, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1150:9: ( identifier )+
			int cnt134=0;
			try { DebugEnterSubRule(134);
			while (true)
			{
				int alt134=2;
				try { DebugEnterDecision(134, false);
				int LA134_0 = input.LA(1);

				if ((LA134_0==BASIC_IDENTIFIER||LA134_0==EXTENDED_IDENTIFIER))
				{
					alt134 = 1;
				}


				} finally { DebugExitDecision(134); }
				switch (alt134)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1150:11: identifier
					{
					DebugLocation(1150, 11);
					PushFollow(Follow._identifier_in_logical_name_list9559);
					identifier132=identifier();
					PopFollow();

					DebugLocation(1150, 22);
					 value.Add((identifier132!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier132.Start),input.TreeAdaptor.GetTokenStopIndex(identifier132.Start))):null)); 

					}
					break;

				default:
					if (cnt134 >= 1)
						goto loop134;

					EarlyExitException eee134 = new EarlyExitException( 134, input );
					DebugRecognitionException(eee134);
					throw eee134;
				}
				cnt134++;
			}
			loop134:
				;

			} finally { DebugExitSubRule(134); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("logical_name_list", 86);
			LeaveRule("logical_name_list", 86);
			LeaveRule_logical_name_list();
		}
		DebugLocation(1151, 4);
		} finally { DebugExitRule(GrammarFileName, "logical_name_list"); }
		return value;

	}
	// $ANTLR end "logical_name_list"

	partial void EnterRule_logical_operator();
	partial void LeaveRule_logical_operator();

	// $ANTLR start "logical_operator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1153:1: logical_operator returns [ExpressionType value] : ( AND | OR | NAND | NOR | XOR | XNOR );
	[GrammarRule("logical_operator")]
	private ExpressionType logical_operator()
	{
		EnterRule_logical_operator();
		EnterRule("logical_operator", 87);
		TraceIn("logical_operator", 87);
		ExpressionType value = default(ExpressionType);


		try { DebugEnterRule(GrammarFileName, "logical_operator");
		DebugLocation(1153, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1154:5: ( AND | OR | NAND | NOR | XOR | XNOR )
			int alt135=6;
			try { DebugEnterDecision(135, false);
			switch (input.LA(1))
			{
			case AND:
				{
				alt135 = 1;
				}
				break;
			case OR:
				{
				alt135 = 2;
				}
				break;
			case NAND:
				{
				alt135 = 3;
				}
				break;
			case NOR:
				{
				alt135 = 4;
				}
				break;
			case XOR:
				{
				alt135 = 5;
				}
				break;
			case XNOR:
				{
				alt135 = 6;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 135, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(135); }
			switch (alt135)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1154:9: AND
				{
				DebugLocation(1154, 9);
				Match(input,AND,Follow._AND_in_logical_operator9587); 
				DebugLocation(1154, 14);
				 value = ExpressionType.AND; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1155:9: OR
				{
				DebugLocation(1155, 9);
				Match(input,OR,Follow._OR_in_logical_operator9600); 
				DebugLocation(1155, 14);
				 value = ExpressionType.OR; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1156:9: NAND
				{
				DebugLocation(1156, 9);
				Match(input,NAND,Follow._NAND_in_logical_operator9614); 
				DebugLocation(1156, 14);
				 value = ExpressionType.NAND; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1157:9: NOR
				{
				DebugLocation(1157, 9);
				Match(input,NOR,Follow._NOR_in_logical_operator9626); 
				DebugLocation(1157, 14);
				 value = ExpressionType.NOR; 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1158:9: XOR
				{
				DebugLocation(1158, 9);
				Match(input,XOR,Follow._XOR_in_logical_operator9639); 
				DebugLocation(1158, 14);
				 value = ExpressionType.XOR; 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1159:9: XNOR
				{
				DebugLocation(1159, 9);
				Match(input,XNOR,Follow._XNOR_in_logical_operator9652); 
				DebugLocation(1159, 14);
				 value = ExpressionType.XNOR; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("logical_operator", 87);
			LeaveRule("logical_operator", 87);
			LeaveRule_logical_operator();
		}
		DebugLocation(1160, 4);
		} finally { DebugExitRule(GrammarFileName, "logical_operator"); }
		return value;

	}
	// $ANTLR end "logical_operator"

	private sealed partial class loop_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public LoopStatement value;
		public loop_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_loop_statement();
	partial void LeaveRule_loop_statement();

	// $ANTLR start "loop_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1162:1: loop_statement[string label] returns [LoopStatement value] : ^( LOOP iteration_scheme (ss= sequential_statement )* ( end_identifier )? ) ;
	[GrammarRule("loop_statement")]
	private MetaClassCreator.loop_statement_return loop_statement(string label)
	{
		EnterRule_loop_statement();
		EnterRule("loop_statement", 88);
		TraceIn("loop_statement", 88);
		MetaClassCreator.loop_statement_return retval = new MetaClassCreator.loop_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.sequential_statement_return ss = default(MetaClassCreator.sequential_statement_return);
		LoopStatement iteration_scheme133 = default(LoopStatement);
		TreeRuleReturnScope<CommonTree> end_identifier134 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "loop_statement");
		DebugLocation(1162, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1168:5: ( ^( LOOP iteration_scheme (ss= sequential_statement )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1168:9: ^( LOOP iteration_scheme (ss= sequential_statement )* ( end_identifier )? )
			{
			DebugLocation(1168, 9);
			DebugLocation(1168, 12);
			Match(input,LOOP,Follow._LOOP_in_loop_statement9690); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1168, 17);
			PushFollow(Follow._iteration_scheme_in_loop_statement9692);
			iteration_scheme133=iteration_scheme();
			PopFollow();

			DebugLocation(1169, 13);

			                retval.value = iteration_scheme133;
			                retval.value.Label = label;
			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			            
			DebugLocation(1175, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1175:13: (ss= sequential_statement )*
			try { DebugEnterSubRule(136);
			while (true)
			{
				int alt136=2;
				try { DebugEnterDecision(136, false);
				int LA136_0 = input.LA(1);

				if ((LA136_0==ASSERT||LA136_0==CASE||LA136_0==EXIT||LA136_0==IF||LA136_0==LABEL_STATEMENT||LA136_0==LOOP||LA136_0==NEXT||LA136_0==NULLTOK||LA136_0==PROCEDURE_CALL||LA136_0==REPORT||LA136_0==RETURN||LA136_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA136_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA136_0<=WAIT)))
				{
					alt136 = 1;
				}


				} finally { DebugExitDecision(136); }
				switch ( alt136 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1175:15: ss= sequential_statement
					{
					DebugLocation(1175, 17);
					PushFollow(Follow._sequential_statement_in_loop_statement9724);
					ss=sequential_statement();
					PopFollow();

					DebugLocation(1175, 39);
					 retval.value.Statements.Add((ss!=null?ss.value:default(SequentialStatement))); 

					}
					break;

				default:
					goto loop136;
				}
			}

			loop136:
				;

			} finally { DebugExitSubRule(136); }

			DebugLocation(1176, 13);
			 AddListEndComments((ss!=null?ss.value:default(SequentialStatement)), (ss!=null?((CommonTree)ss.Start):default(CommonTree))); 
			DebugLocation(1177, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1177:13: ( end_identifier )?
			int alt137=2;
			try { DebugEnterSubRule(137);
			try { DebugEnterDecision(137, false);
			int LA137_0 = input.LA(1);

			if ((LA137_0==BASIC_IDENTIFIER||LA137_0==EXTENDED_IDENTIFIER))
			{
				alt137 = 1;
			}
			} finally { DebugExitDecision(137); }
			switch (alt137)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1177:13: end_identifier
				{
				DebugLocation(1177, 13);
				PushFollow(Follow._end_identifier_in_loop_statement9757);
				end_identifier134=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(137); }

			DebugLocation(1178, 13);

			            	if(((end_identifier134!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier134.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier134.Start))):null) != null) && (!(end_identifier134!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier134.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier134.Start))):null).Equals(label, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier134!=null?((CommonTree)end_identifier134.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_LOOP, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier134!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier134.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier134.Start))):null), label));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("loop_statement", 88);
			LeaveRule("loop_statement", 88);
			LeaveRule_loop_statement();
		}
		DebugLocation(1183, 4);
		} finally { DebugExitRule(GrammarFileName, "loop_statement"); }
		return retval;

	}
	// $ANTLR end "loop_statement"

	partial void EnterRule_mode();
	partial void LeaveRule_mode();

	// $ANTLR start "mode"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1185:1: mode returns [VhdlObject.ModeEnum value] : ( IN | OUT | INOUT | BUFFER | LINKAGE );
	[GrammarRule("mode")]
	private VhdlObject.ModeEnum mode()
	{
		EnterRule_mode();
		EnterRule("mode", 89);
		TraceIn("mode", 89);
		VhdlObject.ModeEnum value = default(VhdlObject.ModeEnum);


		try { DebugEnterRule(GrammarFileName, "mode");
		DebugLocation(1185, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1186:5: ( IN | OUT | INOUT | BUFFER | LINKAGE )
			int alt138=5;
			try { DebugEnterDecision(138, false);
			switch (input.LA(1))
			{
			case IN:
				{
				alt138 = 1;
				}
				break;
			case OUT:
				{
				alt138 = 2;
				}
				break;
			case INOUT:
				{
				alt138 = 3;
				}
				break;
			case BUFFER:
				{
				alt138 = 4;
				}
				break;
			case LINKAGE:
				{
				alt138 = 5;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 138, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(138); }
			switch (alt138)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1186:9: IN
				{
				DebugLocation(1186, 9);
				Match(input,IN,Follow._IN_in_mode9805); 
				DebugLocation(1186, 17);
				 value = VhdlObject.ModeEnum.IN; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1187:9: OUT
				{
				DebugLocation(1187, 9);
				Match(input,OUT,Follow._OUT_in_mode9822); 
				DebugLocation(1187, 17);
				 value = VhdlObject.ModeEnum.OUT; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1188:9: INOUT
				{
				DebugLocation(1188, 9);
				Match(input,INOUT,Follow._INOUT_in_mode9838); 
				DebugLocation(1188, 17);
				 value = VhdlObject.ModeEnum.INOUT; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1189:9: BUFFER
				{
				DebugLocation(1189, 9);
				Match(input,BUFFER,Follow._BUFFER_in_mode9852); 
				DebugLocation(1189, 17);
				 value = VhdlObject.ModeEnum.BUFFER; 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1190:9: LINKAGE
				{
				DebugLocation(1190, 9);
				Match(input,LINKAGE,Follow._LINKAGE_in_mode9865); 
				DebugLocation(1190, 17);
				 value = VhdlObject.ModeEnum.LINKAGE; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("mode", 89);
			LeaveRule("mode", 89);
			LeaveRule_mode();
		}
		DebugLocation(1191, 4);
		} finally { DebugExitRule(GrammarFileName, "mode"); }
		return value;

	}
	// $ANTLR end "mode"

	partial void EnterRule_multiplying_operator();
	partial void LeaveRule_multiplying_operator();

	// $ANTLR start "multiplying_operator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1193:1: multiplying_operator returns [ExpressionType value] : ( MUL | DIV | MOD | REM );
	[GrammarRule("multiplying_operator")]
	private ExpressionType multiplying_operator()
	{
		EnterRule_multiplying_operator();
		EnterRule("multiplying_operator", 90);
		TraceIn("multiplying_operator", 90);
		ExpressionType value = default(ExpressionType);


		try { DebugEnterRule(GrammarFileName, "multiplying_operator");
		DebugLocation(1193, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1194:5: ( MUL | DIV | MOD | REM )
			int alt139=4;
			try { DebugEnterDecision(139, false);
			switch (input.LA(1))
			{
			case MUL:
				{
				alt139 = 1;
				}
				break;
			case DIV:
				{
				alt139 = 2;
				}
				break;
			case MOD:
				{
				alt139 = 3;
				}
				break;
			case REM:
				{
				alt139 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 139, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(139); }
			switch (alt139)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1194:9: MUL
				{
				DebugLocation(1194, 9);
				Match(input,MUL,Follow._MUL_in_multiplying_operator9890); 
				DebugLocation(1194, 13);
				 value = ExpressionType.MUL; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1195:9: DIV
				{
				DebugLocation(1195, 9);
				Match(input,DIV,Follow._DIV_in_multiplying_operator9902); 
				DebugLocation(1195, 13);
				 value = ExpressionType.DIV; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1196:9: MOD
				{
				DebugLocation(1196, 9);
				Match(input,MOD,Follow._MOD_in_multiplying_operator9914); 
				DebugLocation(1196, 13);
				 value = ExpressionType.MOD; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1197:9: REM
				{
				DebugLocation(1197, 9);
				Match(input,REM,Follow._REM_in_multiplying_operator9926); 
				DebugLocation(1197, 13);
				 value = ExpressionType.REM; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("multiplying_operator", 90);
			LeaveRule("multiplying_operator", 90);
			LeaveRule_multiplying_operator();
		}
		DebugLocation(1198, 4);
		} finally { DebugExitRule(GrammarFileName, "multiplying_operator"); }
		return value;

	}
	// $ANTLR end "multiplying_operator"

	private sealed partial class name_return : TreeRuleReturnScope<CommonTree>
	{
		public TemporaryName value;
		public name_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_name();
	partial void LeaveRule_name();

	// $ANTLR start "name"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1209:1: name returns [TemporaryName value] : ^( NAME ( identifier | STRING_LITERAL ) ( name_indexed_part | name_slice_part | name_attribute_part | name_selected_part | association_list | name_indexed_or_slice_part )* ) ;
	[GrammarRule("name")]
	private MetaClassCreator.name_return name()
	{
		EnterRule_name();
		EnterRule("name", 91);
		TraceIn("name", 91);
		MetaClassCreator.name_return retval = new MetaClassCreator.name_return(this);
		retval.Start = (CommonTree)input.LT(1);

		CommonTree STRING_LITERAL136 = default(CommonTree);
		TreeRuleReturnScope<CommonTree> identifier135 = default(TreeRuleReturnScope<CommonTree>);
		Part name_indexed_part137 = default(Part);
		Part name_slice_part138 = default(Part);
		Part name_attribute_part139 = default(Part);
		Part name_selected_part140 = default(Part);
		List<AssociationElement> association_list141 = default(List<AssociationElement>);
		Part name_indexed_or_slice_part142 = default(Part);

		try { DebugEnterRule(GrammarFileName, "name");
		DebugLocation(1209, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1210:5: ( ^( NAME ( identifier | STRING_LITERAL ) ( name_indexed_part | name_slice_part | name_attribute_part | name_selected_part | association_list | name_indexed_or_slice_part )* ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1210:9: ^( NAME ( identifier | STRING_LITERAL ) ( name_indexed_part | name_slice_part | name_attribute_part | name_selected_part | association_list | name_indexed_or_slice_part )* )
			{
			DebugLocation(1210, 9);
			DebugLocation(1210, 12);
			Match(input,NAME,Follow._NAME_in_name9962); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1211, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1211:13: ( identifier | STRING_LITERAL )
			int alt140=2;
			try { DebugEnterSubRule(140);
			try { DebugEnterDecision(140, false);
			int LA140_0 = input.LA(1);

			if ((LA140_0==BASIC_IDENTIFIER||LA140_0==EXTENDED_IDENTIFIER))
			{
				alt140 = 1;
			}
			else if ((LA140_0==STRING_LITERAL))
			{
				alt140 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 140, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(140); }
			switch (alt140)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1211:21: identifier
				{
				DebugLocation(1211, 21);
				PushFollow(Follow._identifier_in_name9984);
				identifier135=identifier();
				PopFollow();

				DebugLocation(1212, 21);
				 retval.value = new TemporaryName(this, retval.Start, (identifier135!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier135.Start),input.TreeAdaptor.GetTokenStopIndex(identifier135.Start))):null)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1213:21: STRING_LITERAL
				{
				DebugLocation(1213, 21);
				STRING_LITERAL136=(CommonTree)Match(input,STRING_LITERAL,Follow._STRING_LITERAL_in_name10028); 
				DebugLocation(1214, 21);

				                        string literal = (STRING_LITERAL136!=null?STRING_LITERAL136.Text:null);
				                        literal = literal.Substring(1, literal.Length - 1);
				                        retval.value = new TemporaryName(this, retval.Start, new StringLiteral(literal));
				                    

				}
				break;

			}
			} finally { DebugExitSubRule(140); }

			DebugLocation(1220, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1220:13: ( name_indexed_part | name_slice_part | name_attribute_part | name_selected_part | association_list | name_indexed_or_slice_part )*
			try { DebugEnterSubRule(141);
			while (true)
			{
				int alt141=7;
				try { DebugEnterDecision(141, false);
				switch (input.LA(1))
				{
				case NAME_INDEXED_PART:
					{
					alt141 = 1;
					}
					break;
				case NAME_SLICE_PART:
					{
					alt141 = 2;
					}
					break;
				case NAME_ATTRIBUTE_PART:
					{
					alt141 = 3;
					}
					break;
				case NAME_SELECTED_PART:
					{
					alt141 = 4;
					}
					break;
				case ASSOCIATION_LIST:
					{
					alt141 = 5;
					}
					break;
				case NAME_INDEXED_OR_SLICE_PART:
					{
					alt141 = 6;
					}
					break;
				}

				} finally { DebugExitDecision(141); }
				switch ( alt141 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1221:21: name_indexed_part
					{
					DebugLocation(1221, 21);
					PushFollow(Follow._name_indexed_part_in_name10100);
					name_indexed_part137=name_indexed_part();
					PopFollow();

					DebugLocation(1221, 41);
					 retval.value.AddPart(name_indexed_part137); 

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1222:21: name_slice_part
					{
					DebugLocation(1222, 21);
					PushFollow(Follow._name_slice_part_in_name10126);
					name_slice_part138=name_slice_part();
					PopFollow();

					DebugLocation(1222, 41);
					 retval.value.AddPart(name_slice_part138); 

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1223:21: name_attribute_part
					{
					DebugLocation(1223, 21);
					PushFollow(Follow._name_attribute_part_in_name10154);
					name_attribute_part139=name_attribute_part();
					PopFollow();

					DebugLocation(1223, 41);
					 retval.value.AddPart(name_attribute_part139); 

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1224:21: name_selected_part
					{
					DebugLocation(1224, 21);
					PushFollow(Follow._name_selected_part_in_name10178);
					name_selected_part140=name_selected_part();
					PopFollow();

					DebugLocation(1224, 41);
					 retval.value.AddPart(name_selected_part140); 

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1225:21: association_list
					{
					DebugLocation(1225, 21);
					PushFollow(Follow._association_list_in_name10203);
					association_list141=association_list();
					PopFollow();

					DebugLocation(1226, 21);

					                        Part part =
					                            Part.CreateAssociation(association_list141);
					                        retval.value.AddPart(part);
					                    

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1231:21: name_indexed_or_slice_part
					{
					DebugLocation(1231, 21);
					PushFollow(Follow._name_indexed_or_slice_part_in_name10247);
					name_indexed_or_slice_part142=name_indexed_or_slice_part();
					PopFollow();

					DebugLocation(1232, 21);
					 retval.value.AddPart(name_indexed_or_slice_part142); 

					}
					break;

				default:
					goto loop141;
				}
			}

			loop141:
				;

			} finally { DebugExitSubRule(141); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("name", 91);
			LeaveRule("name", 91);
			LeaveRule_name();
		}
		DebugLocation(1235, 4);
		} finally { DebugExitRule(GrammarFileName, "name"); }
		return retval;

	}
	// $ANTLR end "name"

	partial void EnterRule_name_attribute_part();
	partial void LeaveRule_name_attribute_part();

	// $ANTLR start "name_attribute_part"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1237:1: name_attribute_part returns [Part value] : ^( NAME_ATTRIBUTE_PART ( signature )? identifier ( expression )? ) ;
	[GrammarRule("name_attribute_part")]
	private Part name_attribute_part()
	{
		EnterRule_name_attribute_part();
		EnterRule("name_attribute_part", 92);
		TraceIn("name_attribute_part", 92);
		Part value = default(Part);


		TreeRuleReturnScope<CommonTree> identifier143 = default(TreeRuleReturnScope<CommonTree>);
		MetaClassCreator.expression_return expression144 = default(MetaClassCreator.expression_return);
		Signature signature145 = default(Signature);

		try { DebugEnterRule(GrammarFileName, "name_attribute_part");
		DebugLocation(1237, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1238:5: ( ^( NAME_ATTRIBUTE_PART ( signature )? identifier ( expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1238:9: ^( NAME_ATTRIBUTE_PART ( signature )? identifier ( expression )? )
			{
			DebugLocation(1238, 9);
			DebugLocation(1238, 12);
			Match(input,NAME_ATTRIBUTE_PART,Follow._NAME_ATTRIBUTE_PART_in_name_attribute_part10319); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1238, 32);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1238:32: ( signature )?
			int alt142=2;
			try { DebugEnterSubRule(142);
			try { DebugEnterDecision(142, false);
			int LA142_0 = input.LA(1);

			if ((LA142_0==SIGNATURE))
			{
				alt142 = 1;
			}
			} finally { DebugExitDecision(142); }
			switch (alt142)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1238:32: signature
				{
				DebugLocation(1238, 32);
				PushFollow(Follow._signature_in_name_attribute_part10321);
				signature145=signature();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(142); }

			DebugLocation(1238, 43);
			PushFollow(Follow._identifier_in_name_attribute_part10324);
			identifier143=identifier();
			PopFollow();

			DebugLocation(1238, 54);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1238:54: ( expression )?
			int alt143=2;
			try { DebugEnterSubRule(143);
			try { DebugEnterDecision(143, false);
			int LA143_0 = input.LA(1);

			if ((LA143_0==EXPRESSION))
			{
				alt143 = 1;
			}
			} finally { DebugExitDecision(143); }
			switch (alt143)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1238:54: expression
				{
				DebugLocation(1238, 54);
				PushFollow(Follow._expression_in_name_attribute_part10326);
				expression144=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(143); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1239, 9);

			            value = Part.CreateAttribute((identifier143!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier143.Start),input.TreeAdaptor.GetTokenStopIndex(identifier143.Start))):null), (expression144!=null?expression144.value:default(Expression)),
			                signature145);
			        

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("name_attribute_part", 92);
			LeaveRule("name_attribute_part", 92);
			LeaveRule_name_attribute_part();
		}
		DebugLocation(1243, 4);
		} finally { DebugExitRule(GrammarFileName, "name_attribute_part"); }
		return value;

	}
	// $ANTLR end "name_attribute_part"

	partial void EnterRule_name_indexed_part();
	partial void LeaveRule_name_indexed_part();

	// $ANTLR start "name_indexed_part"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1245:1: name_indexed_part returns [Part value] : ^( NAME_INDEXED_PART ( expression )+ ) ;
	[GrammarRule("name_indexed_part")]
	private Part name_indexed_part()
	{
		EnterRule_name_indexed_part();
		EnterRule("name_indexed_part", 93);
		TraceIn("name_indexed_part", 93);
		Part value = default(Part);


		MetaClassCreator.expression_return expression146 = default(MetaClassCreator.expression_return);

		 List<Expression> indices = new List<Expression>(); 
		try { DebugEnterRule(GrammarFileName, "name_indexed_part");
		DebugLocation(1245, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1247:5: ( ^( NAME_INDEXED_PART ( expression )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1247:9: ^( NAME_INDEXED_PART ( expression )+ )
			{
			DebugLocation(1247, 9);
			DebugLocation(1247, 12);
			Match(input,NAME_INDEXED_PART,Follow._NAME_INDEXED_PART_in_name_indexed_part10369); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1248, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1248:13: ( expression )+
			int cnt144=0;
			try { DebugEnterSubRule(144);
			while (true)
			{
				int alt144=2;
				try { DebugEnterDecision(144, false);
				int LA144_0 = input.LA(1);

				if ((LA144_0==EXPRESSION))
				{
					alt144 = 1;
				}


				} finally { DebugExitDecision(144); }
				switch (alt144)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1248:15: expression
					{
					DebugLocation(1248, 15);
					PushFollow(Follow._expression_in_name_indexed_part10385);
					expression146=expression();
					PopFollow();

					DebugLocation(1248, 26);
					 indices.Add((expression146!=null?expression146.value:default(Expression))); 

					}
					break;

				default:
					if (cnt144 >= 1)
						goto loop144;

					EarlyExitException eee144 = new EarlyExitException( 144, input );
					DebugRecognitionException(eee144);
					throw eee144;
				}
				cnt144++;
			}
			loop144:
				;

			} finally { DebugExitSubRule(144); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1250, 9);
			 value = Part.CreateIndexed(indices); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("name_indexed_part", 93);
			LeaveRule("name_indexed_part", 93);
			LeaveRule_name_indexed_part();
		}
		DebugLocation(1251, 4);
		} finally { DebugExitRule(GrammarFileName, "name_indexed_part"); }
		return value;

	}
	// $ANTLR end "name_indexed_part"

	partial void EnterRule_name_selected_part();
	partial void LeaveRule_name_selected_part();

	// $ANTLR start "name_selected_part"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1254:1: name_selected_part returns [Part value] : ^( NAME_SELECTED_PART suffix ) ;
	[GrammarRule("name_selected_part")]
	private Part name_selected_part()
	{
		EnterRule_name_selected_part();
		EnterRule("name_selected_part", 94);
		TraceIn("name_selected_part", 94);
		Part value = default(Part);


		TreeRuleReturnScope<CommonTree> suffix147 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "name_selected_part");
		DebugLocation(1254, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1255:5: ( ^( NAME_SELECTED_PART suffix ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1255:9: ^( NAME_SELECTED_PART suffix )
			{
			DebugLocation(1255, 9);
			DebugLocation(1255, 12);
			Match(input,NAME_SELECTED_PART,Follow._NAME_SELECTED_PART_in_name_selected_part10436); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1255, 31);
			PushFollow(Follow._suffix_in_name_selected_part10438);
			suffix147=suffix();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1256, 9);
			 value = Part.CreateSelected((suffix147!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(suffix147.Start),input.TreeAdaptor.GetTokenStopIndex(suffix147.Start))):null)); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("name_selected_part", 94);
			LeaveRule("name_selected_part", 94);
			LeaveRule_name_selected_part();
		}
		DebugLocation(1257, 4);
		} finally { DebugExitRule(GrammarFileName, "name_selected_part"); }
		return value;

	}
	// $ANTLR end "name_selected_part"

	partial void EnterRule_name_slice_part();
	partial void LeaveRule_name_slice_part();

	// $ANTLR start "name_slice_part"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1259:1: name_slice_part returns [Part value] : ^( NAME_SLICE_PART discrete_range ) ;
	[GrammarRule("name_slice_part")]
	private Part name_slice_part()
	{
		EnterRule_name_slice_part();
		EnterRule("name_slice_part", 95);
		TraceIn("name_slice_part", 95);
		Part value = default(Part);


		DiscreteRange discrete_range148 = default(DiscreteRange);

		try { DebugEnterRule(GrammarFileName, "name_slice_part");
		DebugLocation(1259, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1260:5: ( ^( NAME_SLICE_PART discrete_range ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1260:9: ^( NAME_SLICE_PART discrete_range )
			{
			DebugLocation(1260, 9);
			DebugLocation(1260, 12);
			Match(input,NAME_SLICE_PART,Follow._NAME_SLICE_PART_in_name_slice_part10475); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1260, 28);
			PushFollow(Follow._discrete_range_in_name_slice_part10477);
			discrete_range148=discrete_range();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1261, 9);
			 value = Part.CreateSlice(discrete_range148); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("name_slice_part", 95);
			LeaveRule("name_slice_part", 95);
			LeaveRule_name_slice_part();
		}
		DebugLocation(1262, 4);
		} finally { DebugExitRule(GrammarFileName, "name_slice_part"); }
		return value;

	}
	// $ANTLR end "name_slice_part"

	partial void EnterRule_name_indexed_or_slice_part();
	partial void LeaveRule_name_indexed_or_slice_part();

	// $ANTLR start "name_indexed_or_slice_part"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1264:1: name_indexed_or_slice_part returns [Part value] : ^( NAME_INDEXED_OR_SLICE_PART name ) ;
	[GrammarRule("name_indexed_or_slice_part")]
	private Part name_indexed_or_slice_part()
	{
		EnterRule_name_indexed_or_slice_part();
		EnterRule("name_indexed_or_slice_part", 96);
		TraceIn("name_indexed_or_slice_part", 96);
		Part value = default(Part);


		MetaClassCreator.name_return name149 = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "name_indexed_or_slice_part");
		DebugLocation(1264, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1265:5: ( ^( NAME_INDEXED_OR_SLICE_PART name ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1265:9: ^( NAME_INDEXED_OR_SLICE_PART name )
			{
			DebugLocation(1265, 9);
			DebugLocation(1265, 12);
			Match(input,NAME_INDEXED_OR_SLICE_PART,Follow._NAME_INDEXED_OR_SLICE_PART_in_name_indexed_or_slice_part10514); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1265, 39);
			PushFollow(Follow._name_in_name_indexed_or_slice_part10516);
			name149=name();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1266, 9);
			 value = TemporaryName.CreateIndexedOrSlicePart((name149!=null?name149.value:default(TemporaryName)), currentScope); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("name_indexed_or_slice_part", 96);
			LeaveRule("name_indexed_or_slice_part", 96);
			LeaveRule_name_indexed_or_slice_part();
		}
		DebugLocation(1267, 4);
		} finally { DebugExitRule(GrammarFileName, "name_indexed_or_slice_part"); }
		return value;

	}
	// $ANTLR end "name_indexed_or_slice_part"

	partial void EnterRule_next_statement();
	partial void LeaveRule_next_statement();

	// $ANTLR start "next_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1269:1: next_statement[string label] returns [NextStatement value = new NextStatement()] : ^( NEXT ( loop_label )? ( expression )? ) ;
	[GrammarRule("next_statement")]
	private NextStatement next_statement(string label)
	{
		EnterRule_next_statement();
		EnterRule("next_statement", 97);
		TraceIn("next_statement", 97);
		NextStatement value =  new NextStatement();


		LoopStatement loop_label150 = default(LoopStatement);
		MetaClassCreator.expression_return expression151 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "next_statement");
		DebugLocation(1269, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1270:5: ( ^( NEXT ( loop_label )? ( expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1270:9: ^( NEXT ( loop_label )? ( expression )? )
			{
			DebugLocation(1270, 9);
			DebugLocation(1270, 12);
			Match(input,NEXT,Follow._NEXT_in_next_statement10554); 

			DebugLocation(1271, 13);
			 value.Label = label; 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(1272, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1272:13: ( loop_label )?
				int alt145=2;
				try { DebugEnterSubRule(145);
				try { DebugEnterDecision(145, false);
				int LA145_0 = input.LA(1);

				if ((LA145_0==BASIC_IDENTIFIER||LA145_0==EXTENDED_IDENTIFIER))
				{
					alt145 = 1;
				}
				} finally { DebugExitDecision(145); }
				switch (alt145)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1272:15: loop_label
					{
					DebugLocation(1272, 15);
					PushFollow(Follow._loop_label_in_next_statement10584);
					loop_label150=loop_label();
					PopFollow();

					DebugLocation(1272, 26);
					 value.Loop = loop_label150; 

					}
					break;

				}
				} finally { DebugExitSubRule(145); }

				DebugLocation(1273, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1273:13: ( expression )?
				int alt146=2;
				try { DebugEnterSubRule(146);
				try { DebugEnterDecision(146, false);
				int LA146_0 = input.LA(1);

				if ((LA146_0==EXPRESSION))
				{
					alt146 = 1;
				}
				} finally { DebugExitDecision(146); }
				switch (alt146)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1273:15: expression
					{
					DebugLocation(1273, 15);
					PushFollow(Follow._expression_in_next_statement10605);
					expression151=expression();
					PopFollow();

					DebugLocation(1273, 26);
					 value.Condition = (expression151!=null?expression151.value:default(Expression)); 

					}
					break;

				}
				} finally { DebugExitSubRule(146); }


				Match(input, TokenTypes.Up, null); 
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("next_statement", 97);
			LeaveRule("next_statement", 97);
			LeaveRule_next_statement();
		}
		DebugLocation(1275, 4);
		} finally { DebugExitRule(GrammarFileName, "next_statement"); }
		return value;

	}
	// $ANTLR end "next_statement"

	private sealed partial class null_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public NullStatement value = new NullStatement();
		public null_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_null_statement();
	partial void LeaveRule_null_statement();

	// $ANTLR start "null_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1277:1: null_statement[string label] returns [NullStatement value = new NullStatement()] : NULLTOK ;
	[GrammarRule("null_statement")]
	private MetaClassCreator.null_statement_return null_statement(string label)
	{
		EnterRule_null_statement();
		EnterRule("null_statement", 98);
		TraceIn("null_statement", 98);
		MetaClassCreator.null_statement_return retval = new MetaClassCreator.null_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "null_statement");
		DebugLocation(1277, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1279:5: ( NULLTOK )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1279:9: NULLTOK
			{
			DebugLocation(1279, 9);
			Match(input,NULLTOK,Follow._NULLTOK_in_null_statement10649); 
			DebugLocation(1280, 9);
			 retval.value.Label = label; 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("null_statement", 98);
			LeaveRule("null_statement", 98);
			LeaveRule_null_statement();
		}
		DebugLocation(1281, 4);
		} finally { DebugExitRule(GrammarFileName, "null_statement"); }
		return retval;

	}
	// $ANTLR end "null_statement"

	private sealed partial class package_body_return : TreeRuleReturnScope<CommonTree>
	{
		public PackageBody value;
		public package_body_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_package_body();
	partial void LeaveRule_package_body();

	// $ANTLR start "package_body"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1283:1: package_body[List<LibraryUnit> contextItems] returns [PackageBody value] : ^( PACKAGE_BODY psn= package_simple_name (pbdi= package_body_declarative_item )* ( end_identifier )? ) ;
	[GrammarRule("package_body")]
	private MetaClassCreator.package_body_return package_body(List<LibraryUnit> contextItems)
	{
		EnterRule_package_body();
		EnterRule("package_body", 99);
		TraceIn("package_body", 99);
		MetaClassCreator.package_body_return retval = new MetaClassCreator.package_body_return(this);
		retval.Start = (CommonTree)input.LT(1);

		PackageDeclaration psn = default(PackageDeclaration);
		MetaClassCreator.package_body_declarative_item_return pbdi = default(MetaClassCreator.package_body_declarative_item_return);
		TreeRuleReturnScope<CommonTree> end_identifier152 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "package_body");
		DebugLocation(1283, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1289:5: ( ^( PACKAGE_BODY psn= package_simple_name (pbdi= package_body_declarative_item )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1289:9: ^( PACKAGE_BODY psn= package_simple_name (pbdi= package_body_declarative_item )* ( end_identifier )? )
			{
			DebugLocation(1289, 9);
			DebugLocation(1289, 12);
			Match(input,PACKAGE_BODY,Follow._PACKAGE_BODY_in_package_body10696); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1290, 16);
			PushFollow(Follow._package_simple_name_in_package_body10712);
			psn=package_simple_name();
			PopFollow();

			DebugLocation(1291, 13);

			                retval.value = new PackageBody(psn);
			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			                retval.value.ContextItems.AddRange(contextItems);
			            	contextItems.Clear();
			            
			DebugLocation(1298, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1298:13: (pbdi= package_body_declarative_item )*
			try { DebugEnterSubRule(147);
			while (true)
			{
				int alt147=2;
				try { DebugEnterDecision(147, false);
				int LA147_0 = input.LA(1);

				if ((LA147_0==ALIAS||LA147_0==CONSTANT||LA147_0==FILE||LA147_0==FULL_TYPE_DECLARATION||(LA147_0>=GROUP_DECLARATION && LA147_0<=GROUP_TEMPLATE_DECLARATION)||LA147_0==INCOMPLETE_TYPE_DECLARATION||(LA147_0>=SUBPROGRAM_BODY && LA147_0<=SUBTYPE)||LA147_0==USE||LA147_0==VARIABLE))
				{
					alt147 = 1;
				}


				} finally { DebugExitDecision(147); }
				switch ( alt147 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1298:15: pbdi= package_body_declarative_item
					{
					DebugLocation(1298, 19);
					PushFollow(Follow._package_body_declarative_item_in_package_body10744);
					pbdi=package_body_declarative_item();
					PopFollow();

					DebugLocation(1298, 50);
					 retval.value.Declarations.Add((pbdi!=null?pbdi.value:default(IPackageBodyDeclarativeItem))); 

					}
					break;

				default:
					goto loop147;
				}
			}

			loop147:
				;

			} finally { DebugExitSubRule(147); }

			DebugLocation(1299, 13);
			 AddListEndComments((pbdi!=null?pbdi.value:default(IPackageBodyDeclarativeItem)), (pbdi!=null?((CommonTree)pbdi.Start):default(CommonTree))); 
			DebugLocation(1300, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1300:13: ( end_identifier )?
			int alt148=2;
			try { DebugEnterSubRule(148);
			try { DebugEnterDecision(148, false);
			int LA148_0 = input.LA(1);

			if ((LA148_0==BASIC_IDENTIFIER||LA148_0==EXTENDED_IDENTIFIER))
			{
				alt148 = 1;
			}
			} finally { DebugExitDecision(148); }
			switch (alt148)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1300:13: end_identifier
				{
				DebugLocation(1300, 13);
				PushFollow(Follow._end_identifier_in_package_body10777);
				end_identifier152=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(148); }

			DebugLocation(1301, 13);

			            	if(((end_identifier152!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier152.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier152.Start))):null) != null) && (!(end_identifier152!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier152.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier152.Start))):null).Equals(retval.value.Package.Identifier, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier152!=null?((CommonTree)end_identifier152.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_PACKAGE, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier152!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier152.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier152.Start))):null), retval.value.Package.Identifier));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("package_body", 99);
			LeaveRule("package_body", 99);
			LeaveRule_package_body();
		}
		DebugLocation(1306, 4);
		} finally { DebugExitRule(GrammarFileName, "package_body"); }
		return retval;

	}
	// $ANTLR end "package_body"

	private sealed partial class package_body_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public IPackageBodyDeclarativeItem value;
		public package_body_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_package_body_declarative_item();
	partial void LeaveRule_package_body_declarative_item();

	// $ANTLR start "package_body_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1308:1: package_body_declarative_item returns [IPackageBodyDeclarativeItem value] : ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | variable_declaration | file_declaration | alias_declaration | use_clause | group_template_declaration | group_declaration );
	[GrammarRule("package_body_declarative_item")]
	private MetaClassCreator.package_body_declarative_item_return package_body_declarative_item()
	{
		EnterRule_package_body_declarative_item();
		EnterRule("package_body_declarative_item", 100);
		TraceIn("package_body_declarative_item", 100);
		MetaClassCreator.package_body_declarative_item_return retval = new MetaClassCreator.package_body_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.subprogram_declaration_return subprogram_declaration153 = default(MetaClassCreator.subprogram_declaration_return);
		MetaClassCreator.subprogram_body_return subprogram_body154 = default(MetaClassCreator.subprogram_body_return);
		VHDL.type.Type type_declaration155 = default(VHDL.type.Type);
		MetaClassCreator.subtype_declaration_return subtype_declaration156 = default(MetaClassCreator.subtype_declaration_return);
		MetaClassCreator.constant_declaration_return constant_declaration157 = default(MetaClassCreator.constant_declaration_return);
		MetaClassCreator.variable_declaration_return variable_declaration158 = default(MetaClassCreator.variable_declaration_return);
		MetaClassCreator.file_declaration_return file_declaration159 = default(MetaClassCreator.file_declaration_return);
		MetaClassCreator.alias_declaration_return alias_declaration160 = default(MetaClassCreator.alias_declaration_return);
		MetaClassCreator.use_clause_return use_clause161 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.group_template_declaration_return group_template_declaration162 = default(MetaClassCreator.group_template_declaration_return);
		MetaClassCreator.group_declaration_return group_declaration163 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "package_body_declarative_item");
		DebugLocation(1308, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1309:5: ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | variable_declaration | file_declaration | alias_declaration | use_clause | group_template_declaration | group_declaration )
			int alt149=11;
			try { DebugEnterDecision(149, false);
			switch (input.LA(1))
			{
			case SUBPROGRAM_DECLARATION:
				{
				alt149 = 1;
				}
				break;
			case SUBPROGRAM_BODY:
				{
				alt149 = 2;
				}
				break;
			case FULL_TYPE_DECLARATION:
			case INCOMPLETE_TYPE_DECLARATION:
				{
				alt149 = 3;
				}
				break;
			case SUBTYPE:
				{
				alt149 = 4;
				}
				break;
			case CONSTANT:
				{
				alt149 = 5;
				}
				break;
			case VARIABLE:
				{
				alt149 = 6;
				}
				break;
			case FILE:
				{
				alt149 = 7;
				}
				break;
			case ALIAS:
				{
				alt149 = 8;
				}
				break;
			case USE:
				{
				alt149 = 9;
				}
				break;
			case GROUP_TEMPLATE_DECLARATION:
				{
				alt149 = 10;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt149 = 11;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 149, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(149); }
			switch (alt149)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1309:9: subprogram_declaration
				{
				DebugLocation(1309, 9);
				PushFollow(Follow._subprogram_declaration_in_package_body_declarative_item10825);
				subprogram_declaration153=subprogram_declaration();
				PopFollow();

				DebugLocation(1309, 36);
				 retval.value = (subprogram_declaration153!=null?subprogram_declaration153.value:default(SubprogramDeclaration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1310:9: subprogram_body
				{
				DebugLocation(1310, 9);
				PushFollow(Follow._subprogram_body_in_package_body_declarative_item10841);
				subprogram_body154=subprogram_body();
				PopFollow();

				DebugLocation(1310, 36);
				 retval.value = (subprogram_body154!=null?subprogram_body154.value:default(SubprogramBody)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1311:9: type_declaration
				{
				DebugLocation(1311, 9);
				PushFollow(Follow._type_declaration_in_package_body_declarative_item10864);
				type_declaration155=type_declaration();
				PopFollow();

				DebugLocation(1311, 36);
				 retval.value = type_declaration155; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1312:9: subtype_declaration
				{
				DebugLocation(1312, 9);
				PushFollow(Follow._subtype_declaration_in_package_body_declarative_item10886);
				subtype_declaration156=subtype_declaration();
				PopFollow();

				DebugLocation(1312, 36);
				 retval.value = (subtype_declaration156!=null?subtype_declaration156.value:default(Subtype)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1313:9: constant_declaration
				{
				DebugLocation(1313, 9);
				PushFollow(Follow._constant_declaration_in_package_body_declarative_item10905);
				constant_declaration157=constant_declaration();
				PopFollow();

				DebugLocation(1313, 36);
				 retval.value = (constant_declaration157!=null?constant_declaration157.value:default(ConstantDeclaration)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1314:9: variable_declaration
				{
				DebugLocation(1314, 9);
				PushFollow(Follow._variable_declaration_in_package_body_declarative_item10923);
				variable_declaration158=variable_declaration();
				PopFollow();

				DebugLocation(1314, 36);
				 retval.value = (variable_declaration158!=null?variable_declaration158.value:default(VariableDeclaration)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1315:9: file_declaration
				{
				DebugLocation(1315, 9);
				PushFollow(Follow._file_declaration_in_package_body_declarative_item10941);
				file_declaration159=file_declaration();
				PopFollow();

				DebugLocation(1315, 36);
				 retval.value = (file_declaration159!=null?file_declaration159.value:default(FileDeclaration)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1316:9: alias_declaration
				{
				DebugLocation(1316, 9);
				PushFollow(Follow._alias_declaration_in_package_body_declarative_item10963);
				alias_declaration160=alias_declaration();
				PopFollow();

				DebugLocation(1316, 36);
				 retval.value = (alias_declaration160!=null?alias_declaration160.value:default(Alias)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1317:9: use_clause
				{
				DebugLocation(1317, 9);
				PushFollow(Follow._use_clause_in_package_body_declarative_item10984);
				use_clause161=use_clause();
				PopFollow();

				DebugLocation(1317, 36);
				 retval.value = (use_clause161!=null?use_clause161.value:default(UseClause)); 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1318:9: group_template_declaration
				{
				DebugLocation(1318, 9);
				PushFollow(Follow._group_template_declaration_in_package_body_declarative_item11012);
				group_template_declaration162=group_template_declaration();
				PopFollow();

				DebugLocation(1318, 36);
				 retval.value = (group_template_declaration162!=null?group_template_declaration162.value:default(GroupTemplate)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1319:9: group_declaration
				{
				DebugLocation(1319, 9);
				PushFollow(Follow._group_declaration_in_package_body_declarative_item11024);
				group_declaration163=group_declaration();
				PopFollow();

				DebugLocation(1319, 36);
				 retval.value = (group_declaration163!=null?group_declaration163.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("package_body_declarative_item", 100);
			LeaveRule("package_body_declarative_item", 100);
			LeaveRule_package_body_declarative_item();
		}
		DebugLocation(1320, 4);
		} finally { DebugExitRule(GrammarFileName, "package_body_declarative_item"); }
		return retval;

	}
	// $ANTLR end "package_body_declarative_item"

	private sealed partial class package_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public PackageDeclaration value;
		public package_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_package_declaration();
	partial void LeaveRule_package_declaration();

	// $ANTLR start "package_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1322:1: package_declaration[List<LibraryUnit> contextItems] returns [PackageDeclaration value] : ^( PACKAGE identifier (pdi= package_declarative_item )* ( end_identifier )? ) ;
	[GrammarRule("package_declaration")]
	private MetaClassCreator.package_declaration_return package_declaration(List<LibraryUnit> contextItems)
	{
		EnterRule_package_declaration();
		EnterRule("package_declaration", 101);
		TraceIn("package_declaration", 101);
		MetaClassCreator.package_declaration_return retval = new MetaClassCreator.package_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.package_declarative_item_return pdi = default(MetaClassCreator.package_declarative_item_return);
		TreeRuleReturnScope<CommonTree> identifier164 = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> end_identifier165 = default(TreeRuleReturnScope<CommonTree>);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "package_declaration");
		DebugLocation(1322, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1328:5: ( ^( PACKAGE identifier (pdi= package_declarative_item )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1328:9: ^( PACKAGE identifier (pdi= package_declarative_item )* ( end_identifier )? )
			{
			DebugLocation(1328, 9);
			DebugLocation(1328, 12);
			Match(input,PACKAGE,Follow._PACKAGE_in_package_declaration11075); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1329, 13);
			PushFollow(Follow._identifier_in_package_declaration11089);
			identifier164=identifier();
			PopFollow();

			DebugLocation(1330, 13);

			                retval.value = new PackageDeclaration((identifier164!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier164.Start),input.TreeAdaptor.GetTokenStopIndex(identifier164.Start))):null));
			                retval.value.ContextItems.AddRange(contextItems);
			            	contextItems.Clear();
			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			            
			DebugLocation(1337, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1337:13: (pdi= package_declarative_item )*
			try { DebugEnterSubRule(150);
			while (true)
			{
				int alt150=2;
				try { DebugEnterDecision(150, false);
				int LA150_0 = input.LA(1);

				if ((LA150_0==ALIAS||(LA150_0>=ATTRIBUTE_DECLARATION && LA150_0<=ATTRIBUTE_SPECIFICATION)||LA150_0==COMPONENT||LA150_0==CONSTANT||LA150_0==DISCONNECT||LA150_0==FILE||LA150_0==FULL_TYPE_DECLARATION||(LA150_0>=GROUP_DECLARATION && LA150_0<=GROUP_TEMPLATE_DECLARATION)||LA150_0==INCOMPLETE_TYPE_DECLARATION||LA150_0==SIGNAL||(LA150_0>=SUBPROGRAM_DECLARATION && LA150_0<=SUBTYPE)||LA150_0==USE||LA150_0==VARIABLE))
				{
					alt150 = 1;
				}


				} finally { DebugExitDecision(150); }
				switch ( alt150 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1337:15: pdi= package_declarative_item
					{
					DebugLocation(1337, 18);
					PushFollow(Follow._package_declarative_item_in_package_declaration11121);
					pdi=package_declarative_item();
					PopFollow();

					DebugLocation(1337, 44);
					 retval.value.Declarations.Add((pdi!=null?pdi.value:default(IPackageDeclarativeItem))); 

					}
					break;

				default:
					goto loop150;
				}
			}

			loop150:
				;

			} finally { DebugExitSubRule(150); }

			DebugLocation(1338, 13);
			 AddListEndComments((pdi!=null?pdi.value:default(IPackageDeclarativeItem)), (pdi!=null?((CommonTree)pdi.Start):default(CommonTree))); 
			DebugLocation(1339, 6);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1339:6: ( end_identifier )?
			int alt151=2;
			try { DebugEnterSubRule(151);
			try { DebugEnterDecision(151, false);
			int LA151_0 = input.LA(1);

			if ((LA151_0==BASIC_IDENTIFIER||LA151_0==EXTENDED_IDENTIFIER))
			{
				alt151 = 1;
			}
			} finally { DebugExitDecision(151); }
			switch (alt151)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1339:6: end_identifier
				{
				DebugLocation(1339, 6);
				PushFollow(Follow._end_identifier_in_package_declaration11147);
				end_identifier165=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(151); }

			DebugLocation(1340, 13);

			            	if(((end_identifier165!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier165.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier165.Start))):null) != null) && (!(end_identifier165!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier165.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier165.Start))):null).Equals((identifier164!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier164.Start),input.TreeAdaptor.GetTokenStopIndex(identifier164.Start))):null), StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier165!=null?((CommonTree)end_identifier165.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_PACKAGE, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier165!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier165.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier165.Start))):null), (identifier164!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier164.Start),input.TreeAdaptor.GetTokenStopIndex(identifier164.Start))):null)));
			            

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("package_declaration", 101);
			LeaveRule("package_declaration", 101);
			LeaveRule_package_declaration();
		}
		DebugLocation(1345, 4);
		} finally { DebugExitRule(GrammarFileName, "package_declaration"); }
		return retval;

	}
	// $ANTLR end "package_declaration"

	private sealed partial class package_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public IPackageDeclarativeItem value;
		public package_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_package_declarative_item();
	partial void LeaveRule_package_declarative_item();

	// $ANTLR start "package_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1347:1: package_declarative_item returns [IPackageDeclarativeItem value] : ( subprogram_declaration | type_declaration | subtype_declaration | constant_declaration | signal_declaration | variable_declaration | file_declaration | alias_declaration | component_declaration | attribute_specification | attribute_declaration | disconnection_specification | use_clause | group_template_declaration | group_declaration );
	[GrammarRule("package_declarative_item")]
	private MetaClassCreator.package_declarative_item_return package_declarative_item()
	{
		EnterRule_package_declarative_item();
		EnterRule("package_declarative_item", 102);
		TraceIn("package_declarative_item", 102);
		MetaClassCreator.package_declarative_item_return retval = new MetaClassCreator.package_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.subprogram_declaration_return subprogram_declaration166 = default(MetaClassCreator.subprogram_declaration_return);
		VHDL.type.Type type_declaration167 = default(VHDL.type.Type);
		MetaClassCreator.subtype_declaration_return subtype_declaration168 = default(MetaClassCreator.subtype_declaration_return);
		MetaClassCreator.constant_declaration_return constant_declaration169 = default(MetaClassCreator.constant_declaration_return);
		MetaClassCreator.signal_declaration_return signal_declaration170 = default(MetaClassCreator.signal_declaration_return);
		MetaClassCreator.variable_declaration_return variable_declaration171 = default(MetaClassCreator.variable_declaration_return);
		MetaClassCreator.file_declaration_return file_declaration172 = default(MetaClassCreator.file_declaration_return);
		MetaClassCreator.alias_declaration_return alias_declaration173 = default(MetaClassCreator.alias_declaration_return);
		MetaClassCreator.component_declaration_return component_declaration174 = default(MetaClassCreator.component_declaration_return);
		MetaClassCreator.attribute_specification_return attribute_specification175 = default(MetaClassCreator.attribute_specification_return);
		MetaClassCreator.attribute_declaration_return attribute_declaration176 = default(MetaClassCreator.attribute_declaration_return);
		MetaClassCreator.disconnection_specification_return disconnection_specification177 = default(MetaClassCreator.disconnection_specification_return);
		MetaClassCreator.use_clause_return use_clause178 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.group_template_declaration_return group_template_declaration179 = default(MetaClassCreator.group_template_declaration_return);
		MetaClassCreator.group_declaration_return group_declaration180 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "package_declarative_item");
		DebugLocation(1347, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1348:5: ( subprogram_declaration | type_declaration | subtype_declaration | constant_declaration | signal_declaration | variable_declaration | file_declaration | alias_declaration | component_declaration | attribute_specification | attribute_declaration | disconnection_specification | use_clause | group_template_declaration | group_declaration )
			int alt152=15;
			try { DebugEnterDecision(152, false);
			switch (input.LA(1))
			{
			case SUBPROGRAM_DECLARATION:
				{
				alt152 = 1;
				}
				break;
			case FULL_TYPE_DECLARATION:
			case INCOMPLETE_TYPE_DECLARATION:
				{
				alt152 = 2;
				}
				break;
			case SUBTYPE:
				{
				alt152 = 3;
				}
				break;
			case CONSTANT:
				{
				alt152 = 4;
				}
				break;
			case SIGNAL:
				{
				alt152 = 5;
				}
				break;
			case VARIABLE:
				{
				alt152 = 6;
				}
				break;
			case FILE:
				{
				alt152 = 7;
				}
				break;
			case ALIAS:
				{
				alt152 = 8;
				}
				break;
			case COMPONENT:
				{
				alt152 = 9;
				}
				break;
			case ATTRIBUTE_SPECIFICATION:
				{
				alt152 = 10;
				}
				break;
			case ATTRIBUTE_DECLARATION:
				{
				alt152 = 11;
				}
				break;
			case DISCONNECT:
				{
				alt152 = 12;
				}
				break;
			case USE:
				{
				alt152 = 13;
				}
				break;
			case GROUP_TEMPLATE_DECLARATION:
				{
				alt152 = 14;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt152 = 15;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 152, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(152); }
			switch (alt152)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1348:9: subprogram_declaration
				{
				DebugLocation(1348, 9);
				PushFollow(Follow._subprogram_declaration_in_package_declarative_item11195);
				subprogram_declaration166=subprogram_declaration();
				PopFollow();

				DebugLocation(1348, 37);
				 retval.value = (subprogram_declaration166!=null?subprogram_declaration166.value:default(SubprogramDeclaration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1349:9: type_declaration
				{
				DebugLocation(1349, 9);
				PushFollow(Follow._type_declaration_in_package_declarative_item11212);
				type_declaration167=type_declaration();
				PopFollow();

				DebugLocation(1349, 37);
				 retval.value = type_declaration167; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1350:9: subtype_declaration
				{
				DebugLocation(1350, 9);
				PushFollow(Follow._subtype_declaration_in_package_declarative_item11235);
				subtype_declaration168=subtype_declaration();
				PopFollow();

				DebugLocation(1350, 37);
				 retval.value = (subtype_declaration168!=null?subtype_declaration168.value:default(Subtype)); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1351:9: constant_declaration
				{
				DebugLocation(1351, 9);
				PushFollow(Follow._constant_declaration_in_package_declarative_item11255);
				constant_declaration169=constant_declaration();
				PopFollow();

				DebugLocation(1351, 37);
				 retval.value = (constant_declaration169!=null?constant_declaration169.value:default(ConstantDeclaration)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1352:9: signal_declaration
				{
				DebugLocation(1352, 9);
				PushFollow(Follow._signal_declaration_in_package_declarative_item11274);
				signal_declaration170=signal_declaration();
				PopFollow();

				DebugLocation(1352, 37);
				 retval.value = (signal_declaration170!=null?signal_declaration170.value:default(SignalDeclaration)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1353:9: variable_declaration
				{
				DebugLocation(1353, 9);
				PushFollow(Follow._variable_declaration_in_package_declarative_item11295);
				variable_declaration171=variable_declaration();
				PopFollow();

				DebugLocation(1353, 37);
				 retval.value = (variable_declaration171!=null?variable_declaration171.value:default(VariableDeclaration)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1354:9: file_declaration
				{
				DebugLocation(1354, 9);
				PushFollow(Follow._file_declaration_in_package_declarative_item11314);
				file_declaration172=file_declaration();
				PopFollow();

				DebugLocation(1354, 37);
				 retval.value = (file_declaration172!=null?file_declaration172.value:default(FileDeclaration)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1355:9: alias_declaration
				{
				DebugLocation(1355, 9);
				PushFollow(Follow._alias_declaration_in_package_declarative_item11337);
				alias_declaration173=alias_declaration();
				PopFollow();

				DebugLocation(1355, 37);
				 retval.value = (alias_declaration173!=null?alias_declaration173.value:default(Alias)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1356:9: component_declaration
				{
				DebugLocation(1356, 9);
				PushFollow(Follow._component_declaration_in_package_declarative_item11359);
				component_declaration174=component_declaration();
				PopFollow();

				DebugLocation(1356, 37);
				 retval.value = (component_declaration174!=null?component_declaration174.value:default(Component)); 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1357:9: attribute_specification
				{
				DebugLocation(1357, 9);
				PushFollow(Follow._attribute_specification_in_package_declarative_item11377);
				attribute_specification175=attribute_specification();
				PopFollow();

				DebugLocation(1357, 37);
				 retval.value = (attribute_specification175!=null?attribute_specification175.value:default(VHDL.declaration.AttributeSpecification)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1358:9: attribute_declaration
				{
				DebugLocation(1358, 9);
				PushFollow(Follow._attribute_declaration_in_package_declarative_item11393);
				attribute_declaration176=attribute_declaration();
				PopFollow();

				DebugLocation(1358, 37);
				 retval.value = (attribute_declaration176!=null?attribute_declaration176.value:default(VHDL.declaration.Attribute)); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1359:9: disconnection_specification
				{
				DebugLocation(1359, 9);
				PushFollow(Follow._disconnection_specification_in_package_declarative_item11411);
				disconnection_specification177=disconnection_specification();
				PopFollow();

				DebugLocation(1359, 37);
				 retval.value = (disconnection_specification177!=null?disconnection_specification177.value:default(DisconnectionSpecification)); 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1360:9: use_clause
				{
				DebugLocation(1360, 9);
				PushFollow(Follow._use_clause_in_package_declarative_item11423);
				use_clause178=use_clause();
				PopFollow();

				DebugLocation(1360, 37);
				 retval.value = (use_clause178!=null?use_clause178.value:default(UseClause)); 

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1361:9: group_template_declaration
				{
				DebugLocation(1361, 9);
				PushFollow(Follow._group_template_declaration_in_package_declarative_item11452);
				group_template_declaration179=group_template_declaration();
				PopFollow();

				DebugLocation(1361, 37);
				 retval.value = (group_template_declaration179!=null?group_template_declaration179.value:default(GroupTemplate)); 

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1362:9: group_declaration
				{
				DebugLocation(1362, 9);
				PushFollow(Follow._group_declaration_in_package_declarative_item11465);
				group_declaration180=group_declaration();
				PopFollow();

				DebugLocation(1362, 37);
				 retval.value = (group_declaration180!=null?group_declaration180.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("package_declarative_item", 102);
			LeaveRule("package_declarative_item", 102);
			LeaveRule_package_declarative_item();
		}
		DebugLocation(1363, 4);
		} finally { DebugExitRule(GrammarFileName, "package_declarative_item"); }
		return retval;

	}
	// $ANTLR end "package_declarative_item"

	private sealed partial class physical_type_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public PhysicalType value;
		public physical_type_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_physical_type_definition();
	partial void LeaveRule_physical_type_definition();

	// $ANTLR start "physical_type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1366:1: physical_type_definition[string ident] returns [PhysicalType value] : ^( PHYSICAL_TYPE_DEFINITION range_constraint baseUnit= identifier (unit= identifier (al= abstract_literal n1= name |n2= name ) )* ( end_identifier )? ) ;
	[GrammarRule("physical_type_definition")]
	private MetaClassCreator.physical_type_definition_return physical_type_definition(string ident)
	{
		EnterRule_physical_type_definition();
		EnterRule("physical_type_definition", 103);
		TraceIn("physical_type_definition", 103);
		MetaClassCreator.physical_type_definition_return retval = new MetaClassCreator.physical_type_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		TreeRuleReturnScope<CommonTree> baseUnit = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> unit = default(TreeRuleReturnScope<CommonTree>);
		MetaClassCreator.abstract_literal_return al = default(MetaClassCreator.abstract_literal_return);
		MetaClassCreator.name_return n1 = default(MetaClassCreator.name_return);
		MetaClassCreator.name_return n2 = default(MetaClassCreator.name_return);
		RangeProvider range_constraint181 = default(RangeProvider);
		TreeRuleReturnScope<CommonTree> end_identifier182 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "physical_type_definition");
		DebugLocation(1366, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1368:5: ( ^( PHYSICAL_TYPE_DEFINITION range_constraint baseUnit= identifier (unit= identifier (al= abstract_literal n1= name |n2= name ) )* ( end_identifier )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1368:9: ^( PHYSICAL_TYPE_DEFINITION range_constraint baseUnit= identifier (unit= identifier (al= abstract_literal n1= name |n2= name ) )* ( end_identifier )? )
			{
			DebugLocation(1368, 9);
			DebugLocation(1368, 12);
			Match(input,PHYSICAL_TYPE_DEFINITION,Follow._PHYSICAL_TYPE_DEFINITION_in_physical_type_definition11509); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1369, 13);
			PushFollow(Follow._range_constraint_in_physical_type_definition11523);
			range_constraint181=range_constraint();
			PopFollow();

			DebugLocation(1369, 38);
			PushFollow(Follow._identifier_in_physical_type_definition11527);
			baseUnit=identifier();
			PopFollow();

			DebugLocation(1370, 13);
			 retval.value = new PhysicalType(ident, range_constraint181, (baseUnit!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(baseUnit.Start),input.TreeAdaptor.GetTokenStopIndex(baseUnit.Start))):null)); 
			DebugLocation(1371, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1371:13: (unit= identifier (al= abstract_literal n1= name |n2= name ) )*
			try { DebugEnterSubRule(154);
			while (true)
			{
				int alt154=2;
				try { DebugEnterDecision(154, false);
				int LA154_0 = input.LA(1);

				if ((LA154_0==BASIC_IDENTIFIER||LA154_0==EXTENDED_IDENTIFIER))
				{
					int LA154_1 = input.LA(2);

					if ((LA154_1==BINANRY_BASED_INTEGER||LA154_1==DEC_BASED_INTEGER||LA154_1==HEXA_BASED_INTEGER||LA154_1==NAME||LA154_1==OCTAL_BASED_INTEGER))
					{
						alt154 = 1;
					}


				}


				} finally { DebugExitDecision(154); }
				switch ( alt154 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1372:17: unit= identifier (al= abstract_literal n1= name |n2= name )
					{
					DebugLocation(1372, 21);
					PushFollow(Follow._identifier_in_physical_type_definition11575);
					unit=identifier();
					PopFollow();

					DebugLocation(1373, 17);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1373:17: (al= abstract_literal n1= name |n2= name )
					int alt153=2;
					try { DebugEnterSubRule(153);
					try { DebugEnterDecision(153, false);
					int LA153_0 = input.LA(1);

					if ((LA153_0==BINANRY_BASED_INTEGER||LA153_0==DEC_BASED_INTEGER||LA153_0==HEXA_BASED_INTEGER||LA153_0==OCTAL_BASED_INTEGER))
					{
						alt153 = 1;
					}
					else if ((LA153_0==NAME))
					{
						alt153 = 2;
					}
					else
					{
						NoViableAltException nvae = new NoViableAltException("", 153, 0, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(153); }
					switch (alt153)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1374:25: al= abstract_literal n1= name
						{
						DebugLocation(1374, 27);
						PushFollow(Follow._abstract_literal_in_physical_type_definition11621);
						al=abstract_literal();
						PopFollow();

						DebugLocation(1374, 47);
						PushFollow(Follow._name_in_physical_type_definition11625);
						n1=name();
						PopFollow();

						DebugLocation(1375, 25);
						 retval.value.createUnit((unit!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(unit.Start),input.TreeAdaptor.GetTokenStopIndex(unit.Start))):null), (al!=null?al.value:default(AbstractLiteral)), (n1!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(n1.Start),input.TreeAdaptor.GetTokenStopIndex(n1.Start))):null)); 

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1376:25: n2= name
						{
						DebugLocation(1376, 27);
						PushFollow(Follow._name_in_physical_type_definition11679);
						n2=name();
						PopFollow();

						DebugLocation(1377, 25);
						 retval.value.createUnit((unit!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(unit.Start),input.TreeAdaptor.GetTokenStopIndex(unit.Start))):null)); 

						}
						break;

					}
					} finally { DebugExitSubRule(153); }


					}
					break;

				default:
					goto loop154;
				}
			}

			loop154:
				;

			} finally { DebugExitSubRule(154); }

			DebugLocation(1380, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1380:13: ( end_identifier )?
			int alt155=2;
			try { DebugEnterSubRule(155);
			try { DebugEnterDecision(155, false);
			int LA155_0 = input.LA(1);

			if ((LA155_0==BASIC_IDENTIFIER||LA155_0==EXTENDED_IDENTIFIER))
			{
				alt155 = 1;
			}
			} finally { DebugExitDecision(155); }
			switch (alt155)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1380:13: end_identifier
				{
				DebugLocation(1380, 13);
				PushFollow(Follow._end_identifier_in_physical_type_definition11752);
				end_identifier182=end_identifier();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(155); }

			DebugLocation(1381, 13);

			            	if(((end_identifier182!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier182.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier182.Start))):null) != null) && (!(end_identifier182!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier182.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier182.Start))):null).Equals(retval.value.Identifier, StringComparison.InvariantCultureIgnoreCase)))
			            		resolveError((end_identifier182!=null?((CommonTree)end_identifier182.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_TYPE, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier182!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier182.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier182.Start))):null), retval.value.Identifier));
			            

			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("physical_type_definition", 103);
			LeaveRule("physical_type_definition", 103);
			LeaveRule_physical_type_definition();
		}
		DebugLocation(1386, 4);
		} finally { DebugExitRule(GrammarFileName, "physical_type_definition"); }
		return retval;

	}
	// $ANTLR end "physical_type_definition"

	partial void EnterRule_port_clause();
	partial void LeaveRule_port_clause();

	// $ANTLR start "port_clause"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1388:1: port_clause returns [List<IVhdlObjectProvider> value] : ^( PORT (isd= interface_signal_declaration )+ ) ;
	[GrammarRule("port_clause")]
	private List<IVhdlObjectProvider> port_clause()
	{
		EnterRule_port_clause();
		EnterRule("port_clause", 104);
		TraceIn("port_clause", 104);
		List<IVhdlObjectProvider> value = default(List<IVhdlObjectProvider>);


		MetaClassCreator.interface_signal_declaration_return isd = default(MetaClassCreator.interface_signal_declaration_return);

		 value = new List<IVhdlObjectProvider>(); 
		try { DebugEnterRule(GrammarFileName, "port_clause");
		DebugLocation(1388, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1390:5: ( ^( PORT (isd= interface_signal_declaration )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1390:9: ^( PORT (isd= interface_signal_declaration )+ )
			{
			DebugLocation(1390, 9);
			DebugLocation(1390, 12);
			Match(input,PORT,Follow._PORT_in_port_clause11807); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1391, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1391:13: (isd= interface_signal_declaration )+
			int cnt156=0;
			try { DebugEnterSubRule(156);
			while (true)
			{
				int alt156=2;
				try { DebugEnterDecision(156, false);
				int LA156_0 = input.LA(1);

				if ((LA156_0==INTERFACE_SIGNAL_DECLARATION))
				{
					alt156 = 1;
				}


				} finally { DebugExitDecision(156); }
				switch (alt156)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1391:15: isd= interface_signal_declaration
					{
					DebugLocation(1391, 18);
					PushFollow(Follow._interface_signal_declaration_in_port_clause11825);
					isd=interface_signal_declaration();
					PopFollow();

					DebugLocation(1391, 48);
					 value.Add((isd!=null?isd.value:default(SignalGroup))); 

					}
					break;

				default:
					if (cnt156 >= 1)
						goto loop156;

					EarlyExitException eee156 = new EarlyExitException( 156, input );
					DebugRecognitionException(eee156);
					throw eee156;
				}
				cnt156++;
			}
			loop156:
				;

			} finally { DebugExitSubRule(156); }

			DebugLocation(1392, 13);
			 AddListEndComments((isd!=null?isd.value:default(SignalGroup)), (isd!=null?((CommonTree)isd.Start):default(CommonTree))); 

			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("port_clause", 104);
			LeaveRule("port_clause", 104);
			LeaveRule_port_clause();
		}
		DebugLocation(1394, 4);
		} finally { DebugExitRule(GrammarFileName, "port_clause"); }
		return value;

	}
	// $ANTLR end "port_clause"

	partial void EnterRule_port_map_aspect();
	partial void LeaveRule_port_map_aspect();

	// $ANTLR start "port_map_aspect"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1396:1: port_map_aspect returns [List<AssociationElement> value] : ^( PORT_MAP association_list ) ;
	[GrammarRule("port_map_aspect")]
	private List<AssociationElement> port_map_aspect()
	{
		EnterRule_port_map_aspect();
		EnterRule("port_map_aspect", 105);
		TraceIn("port_map_aspect", 105);
		List<AssociationElement> value = default(List<AssociationElement>);


		List<AssociationElement> association_list183 = default(List<AssociationElement>);

		try { DebugEnterRule(GrammarFileName, "port_map_aspect");
		DebugLocation(1396, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1397:5: ( ^( PORT_MAP association_list ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1397:9: ^( PORT_MAP association_list )
			{
			DebugLocation(1397, 9);
			DebugLocation(1397, 12);
			Match(input,PORT_MAP,Follow._PORT_MAP_in_port_map_aspect11879); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1397, 21);
			PushFollow(Follow._association_list_in_port_map_aspect11881);
			association_list183=association_list();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1398, 9);
			 value = association_list183; 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("port_map_aspect", 105);
			LeaveRule("port_map_aspect", 105);
			LeaveRule_port_map_aspect();
		}
		DebugLocation(1399, 4);
		} finally { DebugExitRule(GrammarFileName, "port_map_aspect"); }
		return value;

	}
	// $ANTLR end "port_map_aspect"

	private sealed partial class primary_return : TreeRuleReturnScope<CommonTree>
	{
		public Expression value;
		public primary_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_primary();
	partial void LeaveRule_primary();

	// $ANTLR start "primary"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1401:1: primary returns [Expression value] : ( abstract_literal | ^( PHYSICAL_LITERAL abstract_literal identifier ) | FLOAT_POINT_LITERAL | CHARACTER_LITERAL | BIT_STRING_LITERAL_BINARY | BIT_STRING_LITERAL_OCTAL | BIT_STRING_LITERAL_HEX | NULLTOK | aggregate | allocator | name | qualified_expression );
	[GrammarRule("primary")]
	private MetaClassCreator.primary_return primary()
	{
		EnterRule_primary();
		EnterRule("primary", 106);
		TraceIn("primary", 106);
		MetaClassCreator.primary_return retval = new MetaClassCreator.primary_return(this);
		retval.Start = (CommonTree)input.LT(1);

		CommonTree FLOAT_POINT_LITERAL187 = default(CommonTree);
		CommonTree CHARACTER_LITERAL188 = default(CommonTree);
		CommonTree BIT_STRING_LITERAL_BINARY189 = default(CommonTree);
		CommonTree BIT_STRING_LITERAL_OCTAL190 = default(CommonTree);
		CommonTree BIT_STRING_LITERAL_HEX191 = default(CommonTree);
		MetaClassCreator.abstract_literal_return abstract_literal184 = default(MetaClassCreator.abstract_literal_return);
		MetaClassCreator.abstract_literal_return abstract_literal185 = default(MetaClassCreator.abstract_literal_return);
		TreeRuleReturnScope<CommonTree> identifier186 = default(TreeRuleReturnScope<CommonTree>);
		MetaClassCreator.aggregate_return aggregate192 = default(MetaClassCreator.aggregate_return);
		MetaClassCreator.allocator_return allocator193 = default(MetaClassCreator.allocator_return);
		MetaClassCreator.name_return name194 = default(MetaClassCreator.name_return);
		MetaClassCreator.qualified_expression_return qualified_expression195 = default(MetaClassCreator.qualified_expression_return);

		try { DebugEnterRule(GrammarFileName, "primary");
		DebugLocation(1401, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1403:5: ( abstract_literal | ^( PHYSICAL_LITERAL abstract_literal identifier ) | FLOAT_POINT_LITERAL | CHARACTER_LITERAL | BIT_STRING_LITERAL_BINARY | BIT_STRING_LITERAL_OCTAL | BIT_STRING_LITERAL_HEX | NULLTOK | aggregate | allocator | name | qualified_expression )
			int alt157=12;
			try { DebugEnterDecision(157, false);
			switch (input.LA(1))
			{
			case BINANRY_BASED_INTEGER:
			case DEC_BASED_INTEGER:
			case HEXA_BASED_INTEGER:
			case OCTAL_BASED_INTEGER:
				{
				alt157 = 1;
				}
				break;
			case PHYSICAL_LITERAL:
				{
				alt157 = 2;
				}
				break;
			case FLOAT_POINT_LITERAL:
				{
				alt157 = 3;
				}
				break;
			case CHARACTER_LITERAL:
				{
				alt157 = 4;
				}
				break;
			case BIT_STRING_LITERAL_BINARY:
				{
				alt157 = 5;
				}
				break;
			case BIT_STRING_LITERAL_OCTAL:
				{
				alt157 = 6;
				}
				break;
			case BIT_STRING_LITERAL_HEX:
				{
				alt157 = 7;
				}
				break;
			case NULLTOK:
				{
				alt157 = 8;
				}
				break;
			case AGGREGATE:
				{
				alt157 = 9;
				}
				break;
			case NEW:
				{
				alt157 = 10;
				}
				break;
			case NAME:
				{
				alt157 = 11;
				}
				break;
			case QUALIFIED_EXPRESSION:
				{
				alt157 = 12;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 157, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(157); }
			switch (alt157)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1403:9: abstract_literal
				{
				DebugLocation(1403, 9);
				PushFollow(Follow._abstract_literal_in_primary11925);
				abstract_literal184=abstract_literal();
				PopFollow();

				DebugLocation(1403, 26);
				 retval.value = (abstract_literal184!=null?abstract_literal184.value:default(AbstractLiteral)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1404:7: ^( PHYSICAL_LITERAL abstract_literal identifier )
				{
				DebugLocation(1404, 7);
				DebugLocation(1404, 9);
				Match(input,PHYSICAL_LITERAL,Follow._PHYSICAL_LITERAL_in_primary11936); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1404, 26);
				PushFollow(Follow._abstract_literal_in_primary11938);
				abstract_literal185=abstract_literal();
				PopFollow();

				DebugLocation(1404, 43);
				PushFollow(Follow._identifier_in_primary11940);
				identifier186=identifier();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1405, 9);
				 retval.value = new PhysicalLiteral((abstract_literal185!=null?abstract_literal185.value:default(AbstractLiteral)), (identifier186!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier186.Start),input.TreeAdaptor.GetTokenStopIndex(identifier186.Start))):null)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1406:9: FLOAT_POINT_LITERAL
				{
				DebugLocation(1406, 9);
				FLOAT_POINT_LITERAL187=(CommonTree)Match(input,FLOAT_POINT_LITERAL,Follow._FLOAT_POINT_LITERAL_in_primary11961); 
				DebugLocation(1406, 29);
				 retval.value = new RealLiteral((FLOAT_POINT_LITERAL187!=null?FLOAT_POINT_LITERAL187.Text:null)); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1407:9: CHARACTER_LITERAL
				{
				DebugLocation(1407, 9);
				CHARACTER_LITERAL188=(CommonTree)Match(input,CHARACTER_LITERAL,Follow._CHARACTER_LITERAL_in_primary11973); 
				DebugLocation(1408, 9);
				 retval.value = new CharacterLiteral((CHARACTER_LITERAL188!=null?CHARACTER_LITERAL188.Text:null)[1]); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1409:9: BIT_STRING_LITERAL_BINARY
				{
				DebugLocation(1409, 9);
				BIT_STRING_LITERAL_BINARY189=(CommonTree)Match(input,BIT_STRING_LITERAL_BINARY,Follow._BIT_STRING_LITERAL_BINARY_in_primary11993); 
				DebugLocation(1410, 9);

				            String v = (BIT_STRING_LITERAL_BINARY189!=null?BIT_STRING_LITERAL_BINARY189.Text:null);
				            v = v.Substring(2, v.Length - 1 - 2);
				            retval.value = new BinaryStringLiteral(v);
				        

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1415:9: BIT_STRING_LITERAL_OCTAL
				{
				DebugLocation(1415, 9);
				BIT_STRING_LITERAL_OCTAL190=(CommonTree)Match(input,BIT_STRING_LITERAL_OCTAL,Follow._BIT_STRING_LITERAL_OCTAL_in_primary12013); 
				DebugLocation(1416, 9);

				            String v = (BIT_STRING_LITERAL_OCTAL190!=null?BIT_STRING_LITERAL_OCTAL190.Text:null);
				            v = v.Substring(2, v.Length - 1 - 2);
				            retval.value = new OctalStringLiteral(v);
				        

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1421:9: BIT_STRING_LITERAL_HEX
				{
				DebugLocation(1421, 9);
				BIT_STRING_LITERAL_HEX191=(CommonTree)Match(input,BIT_STRING_LITERAL_HEX,Follow._BIT_STRING_LITERAL_HEX_in_primary12033); 
				DebugLocation(1422, 9);

				            String v = (BIT_STRING_LITERAL_HEX191!=null?BIT_STRING_LITERAL_HEX191.Text:null);
				            v = v.Substring(2, v.Length - 1 - 2);
				            retval.value = new HexStringLiteral(v);
				        

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1427:9: NULLTOK
				{
				DebugLocation(1427, 9);
				Match(input,NULLTOK,Follow._NULLTOK_in_primary12053); 
				DebugLocation(1428, 9);
				 retval.value = Literals.NULL; 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1429:9: aggregate
				{
				DebugLocation(1429, 9);
				PushFollow(Follow._aggregate_in_primary12073);
				aggregate192=aggregate();
				PopFollow();

				DebugLocation(1430, 9);

				            Aggregate a = (aggregate192!=null?aggregate192.value:default(Aggregate));
				            if (a.Associations.Count == 1 &&
				                    a.Associations[0].Choices.Count == 0) {
				                retval.value = new Parentheses(a.Associations[0].Expression);
				            } else {
				                retval.value = a;
				            }
				        

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1439:9: allocator
				{
				DebugLocation(1439, 9);
				PushFollow(Follow._allocator_in_primary12093);
				allocator193=allocator();
				PopFollow();

				DebugLocation(1440, 9);
				 retval.value = (allocator193!=null?allocator193.value:default(Expression)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1441:9: name
				{
				DebugLocation(1441, 9);
				PushFollow(Follow._name_in_primary12113);
				name194=name();
				PopFollow();

				DebugLocation(1442, 9);
				 retval.value = (name194!=null?name194.value:default(TemporaryName)).toPrimary(currentScope, inElementAssociation); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1443:9: qualified_expression
				{
				DebugLocation(1443, 9);
				PushFollow(Follow._qualified_expression_in_primary12133);
				qualified_expression195=qualified_expression();
				PopFollow();

				DebugLocation(1444, 9);
				 retval.value = (qualified_expression195!=null?qualified_expression195.value:default(QualifiedExpression)); 

				}
				break;

			}
			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("primary", 106);
			LeaveRule("primary", 106);
			LeaveRule_primary();
		}
		DebugLocation(1445, 4);
		} finally { DebugExitRule(GrammarFileName, "primary"); }
		return retval;

	}
	// $ANTLR end "primary"

	private sealed partial class procedure_call_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public ProcedureCall value;
		public procedure_call_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_procedure_call_statement();
	partial void LeaveRule_procedure_call_statement();

	// $ANTLR start "procedure_call_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1447:1: procedure_call_statement[string label] returns [ProcedureCall value] : ^( PROCEDURE_CALL procedure= name (parameters= association_list )? ) ;
	[GrammarRule("procedure_call_statement")]
	private MetaClassCreator.procedure_call_statement_return procedure_call_statement(string label)
	{
		EnterRule_procedure_call_statement();
		EnterRule("procedure_call_statement", 107);
		TraceIn("procedure_call_statement", 107);
		MetaClassCreator.procedure_call_statement_return retval = new MetaClassCreator.procedure_call_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return procedure = default(MetaClassCreator.name_return);
		List<AssociationElement> parameters = default(List<AssociationElement>);

		try { DebugEnterRule(GrammarFileName, "procedure_call_statement");
		DebugLocation(1447, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1449:4: ( ^( PROCEDURE_CALL procedure= name (parameters= association_list )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1449:8: ^( PROCEDURE_CALL procedure= name (parameters= association_list )? )
			{
			DebugLocation(1449, 8);
			DebugLocation(1449, 11);
			Match(input,PROCEDURE_CALL,Follow._PROCEDURE_CALL_in_procedure_call_statement12173); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1450, 22);
			PushFollow(Follow._name_in_procedure_call_statement12190);
			procedure=name();
			PopFollow();

			DebugLocation(1451, 13);

			                retval.value = new ProcedureCall((procedure!=null?procedure.value:default(TemporaryName)).toProcedure(currentScope));
			                retval.value.Label = label;
			            
			DebugLocation(1455, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1455:13: (parameters= association_list )?
			int alt158=2;
			try { DebugEnterSubRule(158);
			try { DebugEnterDecision(158, false);
			int LA158_0 = input.LA(1);

			if ((LA158_0==ASSOCIATION_LIST))
			{
				alt158 = 1;
			}
			} finally { DebugExitDecision(158); }
			switch (alt158)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1456:17: parameters= association_list
				{
				DebugLocation(1456, 27);
				PushFollow(Follow._association_list_in_procedure_call_statement12240);
				parameters=association_list();
				PopFollow();

				DebugLocation(1456, 45);
				 AddRange(retval.value.Parameters, parameters);

				}
				break;

			}
			} finally { DebugExitSubRule(158); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("procedure_call_statement", 107);
			LeaveRule("procedure_call_statement", 107);
			LeaveRule_procedure_call_statement();
		}
		DebugLocation(1459, 4);
		} finally { DebugExitRule(GrammarFileName, "procedure_call_statement"); }
		return retval;

	}
	// $ANTLR end "procedure_call_statement"

	private sealed partial class process_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public IProcessDeclarativeItem value;
		public process_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_process_declarative_item();
	partial void LeaveRule_process_declarative_item();

	// $ANTLR start "process_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1461:1: process_declarative_item returns [IProcessDeclarativeItem value] : ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | variable_declaration | file_declaration | alias_declaration | attribute_specification | attribute_declaration | use_clause | group_template_declaration | group_declaration );
	[GrammarRule("process_declarative_item")]
	private MetaClassCreator.process_declarative_item_return process_declarative_item()
	{
		EnterRule_process_declarative_item();
		EnterRule("process_declarative_item", 108);
		TraceIn("process_declarative_item", 108);
		MetaClassCreator.process_declarative_item_return retval = new MetaClassCreator.process_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.subprogram_declaration_return subprogram_declaration196 = default(MetaClassCreator.subprogram_declaration_return);
		MetaClassCreator.subprogram_body_return subprogram_body197 = default(MetaClassCreator.subprogram_body_return);
		VHDL.type.Type type_declaration198 = default(VHDL.type.Type);
		MetaClassCreator.subtype_declaration_return subtype_declaration199 = default(MetaClassCreator.subtype_declaration_return);
		MetaClassCreator.constant_declaration_return constant_declaration200 = default(MetaClassCreator.constant_declaration_return);
		MetaClassCreator.variable_declaration_return variable_declaration201 = default(MetaClassCreator.variable_declaration_return);
		MetaClassCreator.file_declaration_return file_declaration202 = default(MetaClassCreator.file_declaration_return);
		MetaClassCreator.alias_declaration_return alias_declaration203 = default(MetaClassCreator.alias_declaration_return);
		MetaClassCreator.attribute_specification_return attribute_specification204 = default(MetaClassCreator.attribute_specification_return);
		MetaClassCreator.attribute_declaration_return attribute_declaration205 = default(MetaClassCreator.attribute_declaration_return);
		MetaClassCreator.use_clause_return use_clause206 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.group_template_declaration_return group_template_declaration207 = default(MetaClassCreator.group_template_declaration_return);
		MetaClassCreator.group_declaration_return group_declaration208 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "process_declarative_item");
		DebugLocation(1461, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1462:5: ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | variable_declaration | file_declaration | alias_declaration | attribute_specification | attribute_declaration | use_clause | group_template_declaration | group_declaration )
			int alt159=13;
			try { DebugEnterDecision(159, false);
			switch (input.LA(1))
			{
			case SUBPROGRAM_DECLARATION:
				{
				alt159 = 1;
				}
				break;
			case SUBPROGRAM_BODY:
				{
				alt159 = 2;
				}
				break;
			case FULL_TYPE_DECLARATION:
			case INCOMPLETE_TYPE_DECLARATION:
				{
				alt159 = 3;
				}
				break;
			case SUBTYPE:
				{
				alt159 = 4;
				}
				break;
			case CONSTANT:
				{
				alt159 = 5;
				}
				break;
			case VARIABLE:
				{
				alt159 = 6;
				}
				break;
			case FILE:
				{
				alt159 = 7;
				}
				break;
			case ALIAS:
				{
				alt159 = 8;
				}
				break;
			case ATTRIBUTE_SPECIFICATION:
				{
				alt159 = 9;
				}
				break;
			case ATTRIBUTE_DECLARATION:
				{
				alt159 = 10;
				}
				break;
			case USE:
				{
				alt159 = 11;
				}
				break;
			case GROUP_TEMPLATE_DECLARATION:
				{
				alt159 = 12;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt159 = 13;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 159, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(159); }
			switch (alt159)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1462:9: subprogram_declaration
				{
				DebugLocation(1462, 9);
				PushFollow(Follow._subprogram_declaration_in_process_declarative_item12290);
				subprogram_declaration196=subprogram_declaration();
				PopFollow();

				DebugLocation(1462, 36);
				 retval.value = (subprogram_declaration196!=null?subprogram_declaration196.value:default(SubprogramDeclaration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1463:9: subprogram_body
				{
				DebugLocation(1463, 9);
				PushFollow(Follow._subprogram_body_in_process_declarative_item12306);
				subprogram_body197=subprogram_body();
				PopFollow();

				DebugLocation(1463, 36);
				 retval.value = (subprogram_body197!=null?subprogram_body197.value:default(SubprogramBody)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1464:9: type_declaration
				{
				DebugLocation(1464, 9);
				PushFollow(Follow._type_declaration_in_process_declarative_item12329);
				type_declaration198=type_declaration();
				PopFollow();

				DebugLocation(1464, 36);
				 retval.value = type_declaration198; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1465:9: subtype_declaration
				{
				DebugLocation(1465, 9);
				PushFollow(Follow._subtype_declaration_in_process_declarative_item12351);
				subtype_declaration199=subtype_declaration();
				PopFollow();

				DebugLocation(1465, 36);
				 retval.value = (subtype_declaration199!=null?subtype_declaration199.value:default(Subtype)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1466:9: constant_declaration
				{
				DebugLocation(1466, 9);
				PushFollow(Follow._constant_declaration_in_process_declarative_item12370);
				constant_declaration200=constant_declaration();
				PopFollow();

				DebugLocation(1466, 36);
				 retval.value = (constant_declaration200!=null?constant_declaration200.value:default(ConstantDeclaration)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1467:9: variable_declaration
				{
				DebugLocation(1467, 9);
				PushFollow(Follow._variable_declaration_in_process_declarative_item12388);
				variable_declaration201=variable_declaration();
				PopFollow();

				DebugLocation(1467, 36);
				 retval.value = (variable_declaration201!=null?variable_declaration201.value:default(VariableDeclaration)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1468:9: file_declaration
				{
				DebugLocation(1468, 9);
				PushFollow(Follow._file_declaration_in_process_declarative_item12406);
				file_declaration202=file_declaration();
				PopFollow();

				DebugLocation(1468, 36);
				 retval.value = (file_declaration202!=null?file_declaration202.value:default(FileDeclaration)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1469:9: alias_declaration
				{
				DebugLocation(1469, 9);
				PushFollow(Follow._alias_declaration_in_process_declarative_item12428);
				alias_declaration203=alias_declaration();
				PopFollow();

				DebugLocation(1469, 36);
				 retval.value = (alias_declaration203!=null?alias_declaration203.value:default(Alias)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1470:9: attribute_specification
				{
				DebugLocation(1470, 9);
				PushFollow(Follow._attribute_specification_in_process_declarative_item12449);
				attribute_specification204=attribute_specification();
				PopFollow();

				DebugLocation(1470, 36);
				 retval.value = (attribute_specification204!=null?attribute_specification204.value:default(VHDL.declaration.AttributeSpecification)); 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1471:9: attribute_declaration
				{
				DebugLocation(1471, 9);
				PushFollow(Follow._attribute_declaration_in_process_declarative_item12464);
				attribute_declaration205=attribute_declaration();
				PopFollow();

				DebugLocation(1471, 36);
				 retval.value = (attribute_declaration205!=null?attribute_declaration205.value:default(VHDL.declaration.Attribute)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1472:9: use_clause
				{
				DebugLocation(1472, 9);
				PushFollow(Follow._use_clause_in_process_declarative_item12481);
				use_clause206=use_clause();
				PopFollow();

				DebugLocation(1472, 36);
				 retval.value = (use_clause206!=null?use_clause206.value:default(UseClause)); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1473:9: group_template_declaration
				{
				DebugLocation(1473, 9);
				PushFollow(Follow._group_template_declaration_in_process_declarative_item12509);
				group_template_declaration207=group_template_declaration();
				PopFollow();

				DebugLocation(1473, 36);
				 retval.value = (group_template_declaration207!=null?group_template_declaration207.value:default(GroupTemplate)); 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1474:9: group_declaration
				{
				DebugLocation(1474, 9);
				PushFollow(Follow._group_declaration_in_process_declarative_item12521);
				group_declaration208=group_declaration();
				PopFollow();

				DebugLocation(1474, 36);
				 retval.value = (group_declaration208!=null?group_declaration208.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("process_declarative_item", 108);
			LeaveRule("process_declarative_item", 108);
			LeaveRule_process_declarative_item();
		}
		DebugLocation(1475, 4);
		} finally { DebugExitRule(GrammarFileName, "process_declarative_item"); }
		return retval;

	}
	// $ANTLR end "process_declarative_item"

	private sealed partial class process_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public ProcessStatement value;
		public process_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_process_statement();
	partial void LeaveRule_process_statement();

	// $ANTLR start "process_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1478:1: process_statement[string label, bool isPostponed] returns [ProcessStatement value] : ^( PROCESS (sl= sensitivity_list )? ( IS )? (pdi= process_declarative_item )* (ss= sequential_statement )* ( end_identifier )? ( POSTPONED )? ) ;
	[GrammarRule("process_statement")]
	private MetaClassCreator.process_statement_return process_statement(string label, bool isPostponed)
	{
		EnterRule_process_statement();
		EnterRule("process_statement", 109);
		TraceIn("process_statement", 109);
		MetaClassCreator.process_statement_return retval = new MetaClassCreator.process_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		CommonTree POSTPONED210 = default(CommonTree);
		List<Signal> sl = default(List<Signal>);
		MetaClassCreator.process_declarative_item_return pdi = default(MetaClassCreator.process_declarative_item_return);
		MetaClassCreator.sequential_statement_return ss = default(MetaClassCreator.sequential_statement_return);
		TreeRuleReturnScope<CommonTree> end_identifier209 = default(TreeRuleReturnScope<CommonTree>);


		    retval.value = new ProcessStatement(label);

		    IDeclarativeRegion oldScope = currentScope;
		    retval.value.Parent = oldScope;
		    currentScope = retval.value;

		try { DebugEnterRule(GrammarFileName, "process_statement");
		DebugLocation(1478, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1490:5: ( ^( PROCESS (sl= sensitivity_list )? ( IS )? (pdi= process_declarative_item )* (ss= sequential_statement )* ( end_identifier )? ( POSTPONED )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1490:9: ^( PROCESS (sl= sensitivity_list )? ( IS )? (pdi= process_declarative_item )* (ss= sequential_statement )* ( end_identifier )? ( POSTPONED )? )
			{
			DebugLocation(1490, 9);
			DebugLocation(1490, 12);
			Match(input,PROCESS,Follow._PROCESS_in_process_statement12569); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(1491, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1491:13: (sl= sensitivity_list )?
				int alt160=2;
				try { DebugEnterSubRule(160);
				try { DebugEnterDecision(160, false);
				int LA160_0 = input.LA(1);

				if ((LA160_0==NAME))
				{
					alt160 = 1;
				}
				} finally { DebugExitDecision(160); }
				switch (alt160)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1491:15: sl= sensitivity_list
					{
					DebugLocation(1491, 17);
					PushFollow(Follow._sensitivity_list_in_process_statement12587);
					sl=sensitivity_list();
					PopFollow();

					DebugLocation(1491, 35);
					 AddRange(retval.value.SensitivityList, sl); 

					}
					break;

				}
				} finally { DebugExitSubRule(160); }

				DebugLocation(1492, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1492:13: ( IS )?
				int alt161=2;
				try { DebugEnterSubRule(161);
				try { DebugEnterDecision(161, false);
				int LA161_0 = input.LA(1);

				if ((LA161_0==IS))
				{
					alt161 = 1;
				}
				} finally { DebugExitDecision(161); }
				switch (alt161)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1493:17: IS
					{
					DebugLocation(1493, 17);
					Match(input,IS,Follow._IS_in_process_statement12624); 
					DebugLocation(1494, 17);

					                    Annotations.putAnnotation(retval.value, 
					                        new OptionalIsFormat(true));
					                

					}
					break;

				}
				} finally { DebugExitSubRule(161); }

				DebugLocation(1499, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1499:13: (pdi= process_declarative_item )*
				try { DebugEnterSubRule(162);
				while (true)
				{
					int alt162=2;
					try { DebugEnterDecision(162, false);
					int LA162_0 = input.LA(1);

					if ((LA162_0==ALIAS||(LA162_0>=ATTRIBUTE_DECLARATION && LA162_0<=ATTRIBUTE_SPECIFICATION)||LA162_0==CONSTANT||LA162_0==FILE||LA162_0==FULL_TYPE_DECLARATION||(LA162_0>=GROUP_DECLARATION && LA162_0<=GROUP_TEMPLATE_DECLARATION)||LA162_0==INCOMPLETE_TYPE_DECLARATION||(LA162_0>=SUBPROGRAM_BODY && LA162_0<=SUBTYPE)||LA162_0==USE||LA162_0==VARIABLE))
					{
						alt162 = 1;
					}


					} finally { DebugExitDecision(162); }
					switch ( alt162 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1499:15: pdi= process_declarative_item
						{
						DebugLocation(1499, 18);
						PushFollow(Follow._process_declarative_item_in_process_statement12675);
						pdi=process_declarative_item();
						PopFollow();

						DebugLocation(1499, 44);
						 retval.value.Declarations.Add((pdi!=null?pdi.value:default(IProcessDeclarativeItem))); 

						}
						break;

					default:
						goto loop162;
					}
				}

				loop162:
					;

				} finally { DebugExitSubRule(162); }

				DebugLocation(1500, 13);
				 AddListEndComments((pdi!=null?pdi.value:default(IProcessDeclarativeItem)), (pdi!=null?((CommonTree)pdi.Start):default(CommonTree))); 
				DebugLocation(1501, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1501:13: (ss= sequential_statement )*
				try { DebugEnterSubRule(163);
				while (true)
				{
					int alt163=2;
					try { DebugEnterDecision(163, false);
					int LA163_0 = input.LA(1);

					if ((LA163_0==ASSERT||LA163_0==CASE||LA163_0==EXIT||LA163_0==IF||LA163_0==LABEL_STATEMENT||LA163_0==LOOP||LA163_0==NEXT||LA163_0==NULLTOK||LA163_0==PROCEDURE_CALL||LA163_0==REPORT||LA163_0==RETURN||LA163_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA163_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA163_0<=WAIT)))
					{
						alt163 = 1;
					}


					} finally { DebugExitDecision(163); }
					switch ( alt163 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1501:15: ss= sequential_statement
						{
						DebugLocation(1501, 17);
						PushFollow(Follow._sequential_statement_in_process_statement12712);
						ss=sequential_statement();
						PopFollow();

						DebugLocation(1501, 39);
						 retval.value.Statements.Add((ss!=null?ss.value:default(SequentialStatement))); 

						}
						break;

					default:
						goto loop163;
					}
				}

				loop163:
					;

				} finally { DebugExitSubRule(163); }

				DebugLocation(1502, 13);
				 AddListEndComments((ss!=null?ss.value:default(SequentialStatement)), (ss!=null?((CommonTree)ss.Start):default(CommonTree))); 
				DebugLocation(1503, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1503:13: ( end_identifier )?
				int alt164=2;
				try { DebugEnterSubRule(164);
				try { DebugEnterDecision(164, false);
				int LA164_0 = input.LA(1);

				if ((LA164_0==BASIC_IDENTIFIER||LA164_0==EXTENDED_IDENTIFIER))
				{
					alt164 = 1;
				}
				} finally { DebugExitDecision(164); }
				switch (alt164)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1504:14: end_identifier
					{
					DebugLocation(1504, 14);
					PushFollow(Follow._end_identifier_in_process_statement12760);
					end_identifier209=end_identifier();
					PopFollow();

					DebugLocation(1505, 14);

						            	if(((end_identifier209!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier209.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier209.Start))):null) != null) && (!(end_identifier209!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier209.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier209.Start))):null).Equals(label, StringComparison.InvariantCultureIgnoreCase)))
						            		resolveError((end_identifier209!=null?((CommonTree)end_identifier209.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_PROCESS, string.Format("Mismatched identifier {0}, suggested {1} ", (end_identifier209!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(end_identifier209.Start),input.TreeAdaptor.GetTokenStopIndex(end_identifier209.Start))):null), label));
						            

					}
					break;

				}
				} finally { DebugExitSubRule(164); }

				DebugLocation(1510, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1510:13: ( POSTPONED )?
				int alt165=2;
				try { DebugEnterSubRule(165);
				try { DebugEnterDecision(165, false);
				int LA165_0 = input.LA(1);

				if ((LA165_0==POSTPONED))
				{
					alt165 = 1;
				}
				} finally { DebugExitDecision(165); }
				switch (alt165)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1511:14: POSTPONED
					{
					DebugLocation(1511, 14);
					POSTPONED210=(CommonTree)Match(input,POSTPONED,Follow._POSTPONED_in_process_statement12819); 
					DebugLocation(1512, 14);

						            	if(isPostponed == false)
						            		resolveError(POSTPONED210, ParseError.ParseErrorTypeEnum.UNKNOWN_PROCESS, string.Format("Current process is not posponed "));
						            

					}
					break;

				}
				} finally { DebugExitSubRule(165); }


				Match(input, TokenTypes.Up, null); 
			}


			}


			    currentScope = oldScope;
			    CheckProcess(retval.Start, retval.value);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("process_statement", 109);
			LeaveRule("process_statement", 109);
			LeaveRule_process_statement();
		}
		DebugLocation(1518, 4);
		} finally { DebugExitRule(GrammarFileName, "process_statement"); }
		return retval;

	}
	// $ANTLR end "process_statement"

	private sealed partial class qualified_expression_return : TreeRuleReturnScope<CommonTree>
	{
		public QualifiedExpression value;
		public qualified_expression_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_qualified_expression();
	partial void LeaveRule_qualified_expression();

	// $ANTLR start "qualified_expression"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1521:1: qualified_expression returns [QualifiedExpression value] : ^( QUALIFIED_EXPRESSION type_mark= name aggregate ) ;
	[GrammarRule("qualified_expression")]
	private MetaClassCreator.qualified_expression_return qualified_expression()
	{
		EnterRule_qualified_expression();
		EnterRule("qualified_expression", 110);
		TraceIn("qualified_expression", 110);
		MetaClassCreator.qualified_expression_return retval = new MetaClassCreator.qualified_expression_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return type_mark = default(MetaClassCreator.name_return);
		MetaClassCreator.aggregate_return aggregate211 = default(MetaClassCreator.aggregate_return);

		try { DebugEnterRule(GrammarFileName, "qualified_expression");
		DebugLocation(1521, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1523:5: ( ^( QUALIFIED_EXPRESSION type_mark= name aggregate ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1523:9: ^( QUALIFIED_EXPRESSION type_mark= name aggregate )
			{
			DebugLocation(1523, 9);
			DebugLocation(1523, 12);
			Match(input,QUALIFIED_EXPRESSION,Follow._QUALIFIED_EXPRESSION_in_qualified_expression12890); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1523, 42);
			PushFollow(Follow._name_in_qualified_expression12894);
			type_mark=name();
			PopFollow();

			DebugLocation(1523, 48);
			PushFollow(Follow._aggregate_in_qualified_expression12896);
			aggregate211=aggregate();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1524, 9);

			            retval.value = new QualifiedExpression((type_mark!=null?type_mark.value:default(TemporaryName)).toTypeMark(currentScope), (aggregate211!=null?aggregate211.value:default(Aggregate)));
			        

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("qualified_expression", 110);
			LeaveRule("qualified_expression", 110);
			LeaveRule_qualified_expression();
		}
		DebugLocation(1527, 4);
		} finally { DebugExitRule(GrammarFileName, "qualified_expression"); }
		return retval;

	}
	// $ANTLR end "qualified_expression"

	partial void EnterRule_range();
	partial void LeaveRule_range();

	// $ANTLR start "range"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1529:1: range returns [RangeProvider value] : ( ^( direction left= expression right= expression ) | name );
	[GrammarRule("range")]
	private RangeProvider range()
	{
		EnterRule_range();
		EnterRule("range", 111);
		TraceIn("range", 111);
		RangeProvider value = default(RangeProvider);


		MetaClassCreator.expression_return left = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return right = default(MetaClassCreator.expression_return);
		Range.RangeDirection direction212 = default(Range.RangeDirection);
		MetaClassCreator.name_return name213 = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "range");
		DebugLocation(1529, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1530:5: ( ^( direction left= expression right= expression ) | name )
			int alt166=2;
			try { DebugEnterDecision(166, false);
			int LA166_0 = input.LA(1);

			if ((LA166_0==DOWNTO||LA166_0==TO))
			{
				alt166 = 1;
			}
			else if ((LA166_0==NAME))
			{
				alt166 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 166, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1530:9: ^( direction left= expression right= expression )
				{
				DebugLocation(1530, 9);
				DebugLocation(1530, 12);
				PushFollow(Follow._direction_in_range12933);
				direction212=direction();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(1530, 26);
				PushFollow(Follow._expression_in_range12937);
				left=expression();
				PopFollow();

				DebugLocation(1530, 43);
				PushFollow(Follow._expression_in_range12941);
				right=expression();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1531, 9);
				 value = new Range((left!=null?left.value:default(Expression)), direction212, (right!=null?right.value:default(Expression))); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1532:9: name
				{
				DebugLocation(1532, 9);
				PushFollow(Follow._name_in_range12962);
				name213=name();
				PopFollow();

				DebugLocation(1533, 9);
				 value = (name213!=null?name213.value:default(TemporaryName)).toRangeName(currentScope); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("range", 111);
			LeaveRule("range", 111);
			LeaveRule_range();
		}
		DebugLocation(1534, 4);
		} finally { DebugExitRule(GrammarFileName, "range"); }
		return value;

	}
	// $ANTLR end "range"

	partial void EnterRule_range_constraint();
	partial void LeaveRule_range_constraint();

	// $ANTLR start "range_constraint"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1536:1: range_constraint returns [RangeProvider value] : ^( RANGETOK range ) ;
	[GrammarRule("range_constraint")]
	private RangeProvider range_constraint()
	{
		EnterRule_range_constraint();
		EnterRule("range_constraint", 112);
		TraceIn("range_constraint", 112);
		RangeProvider value = default(RangeProvider);


		RangeProvider range214 = default(RangeProvider);

		try { DebugEnterRule(GrammarFileName, "range_constraint");
		DebugLocation(1536, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1537:5: ( ^( RANGETOK range ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1537:9: ^( RANGETOK range )
			{
			DebugLocation(1537, 9);
			DebugLocation(1537, 12);
			Match(input,RANGETOK,Follow._RANGETOK_in_range_constraint12997); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1537, 21);
			PushFollow(Follow._range_in_range_constraint12999);
			range214=range();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1538, 9);
			 value = range214; 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("range_constraint", 112);
			LeaveRule("range_constraint", 112);
			LeaveRule_range_constraint();
		}
		DebugLocation(1539, 4);
		} finally { DebugExitRule(GrammarFileName, "range_constraint"); }
		return value;

	}
	// $ANTLR end "range_constraint"

	private sealed partial class record_type_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public RecordType value;
		public record_type_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_record_type_definition();
	partial void LeaveRule_record_type_definition();

	// $ANTLR start "record_type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1541:1: record_type_definition[string ident] returns [RecordType value] : ^( RECORD_TYPE_DEFINITION ( identifier_list subtype_indication )+ ) ;
	[GrammarRule("record_type_definition")]
	private MetaClassCreator.record_type_definition_return record_type_definition(string ident)
	{
		EnterRule_record_type_definition();
		EnterRule("record_type_definition", 113);
		TraceIn("record_type_definition", 113);
		MetaClassCreator.record_type_definition_return retval = new MetaClassCreator.record_type_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISubtypeIndication subtype_indication215 = default(ISubtypeIndication);
		List<string> identifier_list216 = default(List<string>);

		 retval.value = new RecordType(ident); 
		try { DebugEnterRule(GrammarFileName, "record_type_definition");
		DebugLocation(1541, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1544:5: ( ^( RECORD_TYPE_DEFINITION ( identifier_list subtype_indication )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1544:9: ^( RECORD_TYPE_DEFINITION ( identifier_list subtype_indication )+ )
			{
			DebugLocation(1544, 9);
			DebugLocation(1544, 12);
			Match(input,RECORD_TYPE_DEFINITION,Follow._RECORD_TYPE_DEFINITION_in_record_type_definition13047); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1545, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1545:13: ( identifier_list subtype_indication )+
			int cnt167=0;
			try { DebugEnterSubRule(167);
			while (true)
			{
				int alt167=2;
				try { DebugEnterDecision(167, false);
				int LA167_0 = input.LA(1);

				if ((LA167_0==BASIC_IDENTIFIER||LA167_0==EXTENDED_IDENTIFIER))
				{
					alt167 = 1;
				}


				} finally { DebugExitDecision(167); }
				switch (alt167)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1546:17: identifier_list subtype_indication
					{
					DebugLocation(1546, 17);
					PushFollow(Follow._identifier_list_in_record_type_definition13080);
					identifier_list216=identifier_list();
					PopFollow();

					DebugLocation(1546, 33);
					PushFollow(Follow._subtype_indication_in_record_type_definition13082);
					subtype_indication215=subtype_indication();
					PopFollow();

					DebugLocation(1547, 17);
					 retval.value.createElement(subtype_indication215, identifier_list216); 

					}
					break;

				default:
					if (cnt167 >= 1)
						goto loop167;

					EarlyExitException eee167 = new EarlyExitException( 167, input );
					DebugRecognitionException(eee167);
					throw eee167;
				}
				cnt167++;
			}
			loop167:
				;

			} finally { DebugExitSubRule(167); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("record_type_definition", 113);
			LeaveRule("record_type_definition", 113);
			LeaveRule_record_type_definition();
		}
		DebugLocation(1550, 4);
		} finally { DebugExitRule(GrammarFileName, "record_type_definition"); }
		return retval;

	}
	// $ANTLR end "record_type_definition"

	partial void EnterRule_relation();
	partial void LeaveRule_relation();

	// $ANTLR start "relation"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1552:1: relation returns [Expression value] : ( ^( relational_operator l= relation r= relation ) | shift_expression );
	[GrammarRule("relation")]
	private Expression relation()
	{
		EnterRule_relation();
		EnterRule("relation", 114);
		TraceIn("relation", 114);
		Expression value = default(Expression);


		Expression l = default(Expression);
		Expression r = default(Expression);
		ExpressionType relational_operator217 = default(ExpressionType);
		Expression shift_expression218 = default(Expression);

		try { DebugEnterRule(GrammarFileName, "relation");
		DebugLocation(1552, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1553:5: ( ^( relational_operator l= relation r= relation ) | shift_expression )
			int alt168=2;
			try { DebugEnterDecision(168, false);
			int LA168_0 = input.LA(1);

			if ((LA168_0==EQ||LA168_0==GE||LA168_0==GT||LA168_0==LE||LA168_0==LT||LA168_0==NEQ))
			{
				alt168 = 1;
			}
			else if ((LA168_0==ABS||LA168_0==AGGREGATE||LA168_0==AMPERSAND||LA168_0==BINANRY_BASED_INTEGER||(LA168_0>=BIT_STRING_LITERAL_BINARY && LA168_0<=BIT_STRING_LITERAL_OCTAL)||LA168_0==CHARACTER_LITERAL||LA168_0==DEC_BASED_INTEGER||LA168_0==DIV||LA168_0==DOUBLESTAR||LA168_0==FLOAT_POINT_LITERAL||LA168_0==HEXA_BASED_INTEGER||(LA168_0>=MINUS && LA168_0<=NAME)||LA168_0==NEW||(LA168_0>=NOT && LA168_0<=OCTAL_BASED_INTEGER)||LA168_0==PHYSICAL_LITERAL||LA168_0==PLUS||LA168_0==QUALIFIED_EXPRESSION||LA168_0==REM||(LA168_0>=ROL && LA168_0<=ROR)||(LA168_0>=SLA && LA168_0<=SLL)||(LA168_0>=SRA && LA168_0<=SRL)))
			{
				alt168 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 168, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(168); }
			switch (alt168)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1553:9: ^( relational_operator l= relation r= relation )
				{
				DebugLocation(1553, 9);
				DebugLocation(1553, 12);
				PushFollow(Follow._relational_operator_in_relation13150);
				relational_operator217=relational_operator();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(1553, 33);
				PushFollow(Follow._relation_in_relation13154);
				l=relation();
				PopFollow();

				DebugLocation(1553, 44);
				PushFollow(Follow._relation_in_relation13158);
				r=relation();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1554, 9);
				 value = ExpressionTypeCreator.create(relational_operator217, l, r); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1555:9: shift_expression
				{
				DebugLocation(1555, 9);
				PushFollow(Follow._shift_expression_in_relation13180);
				shift_expression218=shift_expression();
				PopFollow();

				DebugLocation(1556, 9);
				 value = shift_expression218; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("relation", 114);
			LeaveRule("relation", 114);
			LeaveRule_relation();
		}
		DebugLocation(1557, 4);
		} finally { DebugExitRule(GrammarFileName, "relation"); }
		return value;

	}
	// $ANTLR end "relation"

	partial void EnterRule_relational_operator();
	partial void LeaveRule_relational_operator();

	// $ANTLR start "relational_operator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1559:1: relational_operator returns [ExpressionType value] : ( EQ | NEQ | LT | LE | GT | GE );
	[GrammarRule("relational_operator")]
	private ExpressionType relational_operator()
	{
		EnterRule_relational_operator();
		EnterRule("relational_operator", 115);
		TraceIn("relational_operator", 115);
		ExpressionType value = default(ExpressionType);


		try { DebugEnterRule(GrammarFileName, "relational_operator");
		DebugLocation(1559, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1560:5: ( EQ | NEQ | LT | LE | GT | GE )
			int alt169=6;
			try { DebugEnterDecision(169, false);
			switch (input.LA(1))
			{
			case EQ:
				{
				alt169 = 1;
				}
				break;
			case NEQ:
				{
				alt169 = 2;
				}
				break;
			case LT:
				{
				alt169 = 3;
				}
				break;
			case LE:
				{
				alt169 = 4;
				}
				break;
			case GT:
				{
				alt169 = 5;
				}
				break;
			case GE:
				{
				alt169 = 6;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 169, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(169); }
			switch (alt169)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1560:9: EQ
				{
				DebugLocation(1560, 9);
				Match(input,EQ,Follow._EQ_in_relational_operator13213); 
				DebugLocation(1560, 13);
				 value = ExpressionType.EQ; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1561:9: NEQ
				{
				DebugLocation(1561, 9);
				Match(input,NEQ,Follow._NEQ_in_relational_operator13226); 
				DebugLocation(1561, 13);
				 value = ExpressionType.NEQ; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1562:9: LT
				{
				DebugLocation(1562, 9);
				Match(input,LT,Follow._LT_in_relational_operator13238); 
				DebugLocation(1562, 13);
				 value = ExpressionType.LT; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1563:9: LE
				{
				DebugLocation(1563, 9);
				Match(input,LE,Follow._LE_in_relational_operator13251); 
				DebugLocation(1563, 13);
				 value = ExpressionType.LE; 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1564:9: GT
				{
				DebugLocation(1564, 9);
				Match(input,GT,Follow._GT_in_relational_operator13264); 
				DebugLocation(1564, 13);
				 value = ExpressionType.GT; 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1565:9: GE
				{
				DebugLocation(1565, 9);
				Match(input,GE,Follow._GE_in_relational_operator13277); 
				DebugLocation(1565, 13);
				 value = ExpressionType.GE; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("relational_operator", 115);
			LeaveRule("relational_operator", 115);
			LeaveRule_relational_operator();
		}
		DebugLocation(1566, 4);
		} finally { DebugExitRule(GrammarFileName, "relational_operator"); }
		return value;

	}
	// $ANTLR end "relational_operator"

	private sealed partial class report_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public ReportStatement value;
		public report_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_report_statement();
	partial void LeaveRule_report_statement();

	// $ANTLR start "report_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1568:1: report_statement[string label] returns [ReportStatement value] : ^( REPORT condition= expression (severity= expression )? ) ;
	[GrammarRule("report_statement")]
	private MetaClassCreator.report_statement_return report_statement(string label)
	{
		EnterRule_report_statement();
		EnterRule("report_statement", 116);
		TraceIn("report_statement", 116);
		MetaClassCreator.report_statement_return retval = new MetaClassCreator.report_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.expression_return condition = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return severity = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "report_statement");
		DebugLocation(1568, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1570:5: ( ^( REPORT condition= expression (severity= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1570:9: ^( REPORT condition= expression (severity= expression )? )
			{
			DebugLocation(1570, 9);
			DebugLocation(1570, 12);
			Match(input,REPORT,Follow._REPORT_in_report_statement13311); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1571, 22);
			PushFollow(Follow._expression_in_report_statement13327);
			condition=expression();
			PopFollow();

			DebugLocation(1572, 13);

			                retval.value = new ReportStatement((condition!=null?condition.value:default(Expression)));
			                retval.value.Label = label;
			            
			DebugLocation(1576, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1576:13: (severity= expression )?
			int alt170=2;
			try { DebugEnterSubRule(170);
			try { DebugEnterDecision(170, false);
			int LA170_0 = input.LA(1);

			if ((LA170_0==EXPRESSION))
			{
				alt170 = 1;
			}
			} finally { DebugExitDecision(170); }
			switch (alt170)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1576:15: severity= expression
				{
				DebugLocation(1576, 23);
				PushFollow(Follow._expression_in_report_statement13359);
				severity=expression();
				PopFollow();

				DebugLocation(1576, 35);
				 retval.value.Severity = (severity!=null?severity.value:default(Expression)); 

				}
				break;

			}
			} finally { DebugExitSubRule(170); }


			Match(input, TokenTypes.Up, null); 


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("report_statement", 116);
			LeaveRule("report_statement", 116);
			LeaveRule_report_statement();
		}
		DebugLocation(1578, 4);
		} finally { DebugExitRule(GrammarFileName, "report_statement"); }
		return retval;

	}
	// $ANTLR end "report_statement"

	private sealed partial class return_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public ReturnStatement value = new ReturnStatement();
		public return_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_return_statement();
	partial void LeaveRule_return_statement();

	// $ANTLR start "return_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1580:1: return_statement[string label] returns [ReturnStatement value = new ReturnStatement()] : ^( RETURN ( expression )? ) ;
	[GrammarRule("return_statement")]
	private MetaClassCreator.return_statement_return return_statement(string label)
	{
		EnterRule_return_statement();
		EnterRule("return_statement", 117);
		TraceIn("return_statement", 117);
		MetaClassCreator.return_statement_return retval = new MetaClassCreator.return_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.expression_return expression219 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "return_statement");
		DebugLocation(1580, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1582:5: ( ^( RETURN ( expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1582:9: ^( RETURN ( expression )? )
			{
			DebugLocation(1582, 9);
			DebugLocation(1582, 12);
			Match(input,RETURN,Follow._RETURN_in_return_statement13405); 

			DebugLocation(1583, 13);
			 retval.value.Label = label; 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(1584, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1584:13: ( expression )?
				int alt171=2;
				try { DebugEnterSubRule(171);
				try { DebugEnterDecision(171, false);
				int LA171_0 = input.LA(1);

				if ((LA171_0==EXPRESSION))
				{
					alt171 = 1;
				}
				} finally { DebugExitDecision(171); }
				switch (alt171)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1584:15: expression
					{
					DebugLocation(1584, 15);
					PushFollow(Follow._expression_in_return_statement13435);
					expression219=expression();
					PopFollow();

					DebugLocation(1584, 26);
					 retval.value.ReturnedExpression = (expression219!=null?expression219.value:default(Expression)); 

					}
					break;

				}
				} finally { DebugExitSubRule(171); }


				Match(input, TokenTypes.Up, null); 
			}


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("return_statement", 117);
			LeaveRule("return_statement", 117);
			LeaveRule_return_statement();
		}
		DebugLocation(1586, 4);
		} finally { DebugExitRule(GrammarFileName, "return_statement"); }
		return retval;

	}
	// $ANTLR end "return_statement"

	partial void EnterRule_selected_signal_assignment();
	partial void LeaveRule_selected_signal_assignment();

	// $ANTLR start "selected_signal_assignment"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1589:1: selected_signal_assignment returns [SelectedSignalAssignment value] : expression target_signal ( GUARDED )? ( delay_mechanism )? selected_waveforms ;
	[GrammarRule("selected_signal_assignment")]
	private SelectedSignalAssignment selected_signal_assignment()
	{
		EnterRule_selected_signal_assignment();
		EnterRule("selected_signal_assignment", 118);
		TraceIn("selected_signal_assignment", 118);
		SelectedSignalAssignment value = default(SelectedSignalAssignment);


		MetaClassCreator.expression_return expression220 = default(MetaClassCreator.expression_return);
		ISignalAssignmentTarget target_signal221 = default(ISignalAssignmentTarget);
		DelayMechanism delay_mechanism222 = default(DelayMechanism);
		List<SelectedSignalAssignment.SelectedWaveform> selected_waveforms223 = default(List<SelectedSignalAssignment.SelectedWaveform>);

		 bool isGuarded; 
		try { DebugEnterRule(GrammarFileName, "selected_signal_assignment");
		DebugLocation(1589, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1591:5: ( expression target_signal ( GUARDED )? ( delay_mechanism )? selected_waveforms )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1591:9: expression target_signal ( GUARDED )? ( delay_mechanism )? selected_waveforms
			{
			DebugLocation(1591, 9);
			PushFollow(Follow._expression_in_selected_signal_assignment13479);
			expression220=expression();
			PopFollow();

			DebugLocation(1591, 20);
			PushFollow(Follow._target_signal_in_selected_signal_assignment13481);
			target_signal221=target_signal();
			PopFollow();

			DebugLocation(1592, 9);
			 value = new SelectedSignalAssignment((expression220!=null?expression220.value:default(Expression)), target_signal221); 
			DebugLocation(1593, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1593:9: ( GUARDED )?
			int alt172=2;
			try { DebugEnterSubRule(172);
			try { DebugEnterDecision(172, false);
			int LA172_0 = input.LA(1);

			if ((LA172_0==GUARDED))
			{
				alt172 = 1;
			}
			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1593:11: GUARDED
				{
				DebugLocation(1593, 11);
				Match(input,GUARDED,Follow._GUARDED_in_selected_signal_assignment13503); 
				DebugLocation(1593, 19);
				 value.Guarded = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(172); }

			DebugLocation(1594, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1594:9: ( delay_mechanism )?
			int alt173=2;
			try { DebugEnterSubRule(173);
			try { DebugEnterDecision(173, false);
			int LA173_0 = input.LA(1);

			if ((LA173_0==INERTIAL||LA173_0==TRANSPORT))
			{
				alt173 = 1;
			}
			} finally { DebugExitDecision(173); }
			switch (alt173)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1594:11: delay_mechanism
				{
				DebugLocation(1594, 11);
				PushFollow(Follow._delay_mechanism_in_selected_signal_assignment13520);
				delay_mechanism222=delay_mechanism();
				PopFollow();

				DebugLocation(1594, 27);
				 value.DelayMechanism = delay_mechanism222; 

				}
				break;

			}
			} finally { DebugExitSubRule(173); }

			DebugLocation(1595, 9);
			PushFollow(Follow._selected_waveforms_in_selected_signal_assignment13535);
			selected_waveforms223=selected_waveforms();
			PopFollow();

			DebugLocation(1595, 28);
			 AddRange(value.SelectedWaveforms, selected_waveforms223); 

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("selected_signal_assignment", 118);
			LeaveRule("selected_signal_assignment", 118);
			LeaveRule_selected_signal_assignment();
		}
		DebugLocation(1596, 4);
		} finally { DebugExitRule(GrammarFileName, "selected_signal_assignment"); }
		return value;

	}
	// $ANTLR end "selected_signal_assignment"

	partial void EnterRule_selected_waveforms();
	partial void LeaveRule_selected_waveforms();

	// $ANTLR start "selected_waveforms"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1598:1: selected_waveforms returns [List<SelectedSignalAssignment.SelectedWaveform> value] : ( waveform choices )+ ;
	[GrammarRule("selected_waveforms")]
	private List<SelectedSignalAssignment.SelectedWaveform> selected_waveforms()
	{
		EnterRule_selected_waveforms();
		EnterRule("selected_waveforms", 119);
		TraceIn("selected_waveforms", 119);
		List<SelectedSignalAssignment.SelectedWaveform> value = default(List<SelectedSignalAssignment.SelectedWaveform>);


		List<WaveformElement> waveform224 = default(List<WaveformElement>);
		List<Choice> choices225 = default(List<Choice>);

		 value = new List<SelectedSignalAssignment.SelectedWaveform>(); 
		try { DebugEnterRule(GrammarFileName, "selected_waveforms");
		DebugLocation(1598, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1600:5: ( ( waveform choices )+ )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1600:9: ( waveform choices )+
			{
			DebugLocation(1600, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1600:9: ( waveform choices )+
			int cnt174=0;
			try { DebugEnterSubRule(174);
			while (true)
			{
				int alt174=2;
				try { DebugEnterDecision(174, false);
				int LA174_0 = input.LA(1);

				if ((LA174_0==UNAFFECTED||LA174_0==WAVEFORM))
				{
					alt174 = 1;
				}


				} finally { DebugExitDecision(174); }
				switch (alt174)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1601:13: waveform choices
					{
					DebugLocation(1601, 13);
					PushFollow(Follow._waveform_in_selected_waveforms13579);
					waveform224=waveform();
					PopFollow();

					DebugLocation(1601, 22);
					PushFollow(Follow._choices_in_selected_waveforms13581);
					choices225=choices();
					PopFollow();

					DebugLocation(1602, 13);

					                value.Add(new SelectedSignalAssignment.SelectedWaveform(waveform224, choices225));
					            

					}
					break;

				default:
					if (cnt174 >= 1)
						goto loop174;

					EarlyExitException eee174 = new EarlyExitException( 174, input );
					DebugRecognitionException(eee174);
					throw eee174;
				}
				cnt174++;
			}
			loop174:
				;

			} finally { DebugExitSubRule(174); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("selected_waveforms", 119);
			LeaveRule("selected_waveforms", 119);
			LeaveRule_selected_waveforms();
		}
		DebugLocation(1606, 4);
		} finally { DebugExitRule(GrammarFileName, "selected_waveforms"); }
		return value;

	}
	// $ANTLR end "selected_waveforms"

	partial void EnterRule_sensitivity_list();
	partial void LeaveRule_sensitivity_list();

	// $ANTLR start "sensitivity_list"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1608:1: sensitivity_list returns [List<Signal> value = new List<Signal>()] : (signal= name )+ ;
	[GrammarRule("sensitivity_list")]
	private List<Signal> sensitivity_list()
	{
		EnterRule_sensitivity_list();
		EnterRule("sensitivity_list", 120);
		TraceIn("sensitivity_list", 120);
		List<Signal> value =  new List<Signal>();


		MetaClassCreator.name_return signal = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "sensitivity_list");
		DebugLocation(1608, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1609:5: ( (signal= name )+ )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1609:9: (signal= name )+
			{
			DebugLocation(1609, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1609:9: (signal= name )+
			int cnt175=0;
			try { DebugEnterSubRule(175);
			while (true)
			{
				int alt175=2;
				try { DebugEnterDecision(175, false);
				int LA175_0 = input.LA(1);

				if ((LA175_0==NAME))
				{
					alt175 = 1;
				}


				} finally { DebugExitDecision(175); }
				switch (alt175)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1609:11: signal= name
					{
					DebugLocation(1609, 17);
					PushFollow(Follow._name_in_sensitivity_list13633);
					signal=name();
					PopFollow();

					DebugLocation(1609, 23);
					 value.Add((signal!=null?signal.value:default(TemporaryName)).toSignal(currentScope)); 

					}
					break;

				default:
					if (cnt175 >= 1)
						goto loop175;

					EarlyExitException eee175 = new EarlyExitException( 175, input );
					DebugRecognitionException(eee175);
					throw eee175;
				}
				cnt175++;
			}
			loop175:
				;

			} finally { DebugExitSubRule(175); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("sensitivity_list", 120);
			LeaveRule("sensitivity_list", 120);
			LeaveRule_sensitivity_list();
		}
		DebugLocation(1610, 4);
		} finally { DebugExitRule(GrammarFileName, "sensitivity_list"); }
		return value;

	}
	// $ANTLR end "sensitivity_list"

	private sealed partial class sequential_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public SequentialStatement value;
		public sequential_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_sequential_statement();
	partial void LeaveRule_sequential_statement();

	// $ANTLR start "sequential_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1612:1: sequential_statement returns [SequentialStatement value] : ( ^( LABEL_STATEMENT identifier sequential_statement2[$identifier.text] ) | sequential_statement2[null] );
	[GrammarRule("sequential_statement")]
	private MetaClassCreator.sequential_statement_return sequential_statement()
	{
		EnterRule_sequential_statement();
		EnterRule("sequential_statement", 121);
		TraceIn("sequential_statement", 121);
		MetaClassCreator.sequential_statement_return retval = new MetaClassCreator.sequential_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		TreeRuleReturnScope<CommonTree> identifier226 = default(TreeRuleReturnScope<CommonTree>);
		SequentialStatement sequential_statement2227 = default(SequentialStatement);
		SequentialStatement sequential_statement2228 = default(SequentialStatement);

		try { DebugEnterRule(GrammarFileName, "sequential_statement");
		DebugLocation(1612, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1618:5: ( ^( LABEL_STATEMENT identifier sequential_statement2[$identifier.text] ) | sequential_statement2[null] )
			int alt176=2;
			try { DebugEnterDecision(176, false);
			int LA176_0 = input.LA(1);

			if ((LA176_0==LABEL_STATEMENT))
			{
				alt176 = 1;
			}
			else if ((LA176_0==ASSERT||LA176_0==CASE||LA176_0==EXIT||LA176_0==IF||LA176_0==LOOP||LA176_0==NEXT||LA176_0==NULLTOK||LA176_0==PROCEDURE_CALL||LA176_0==REPORT||LA176_0==RETURN||LA176_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA176_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA176_0<=WAIT)))
			{
				alt176 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 176, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(176); }
			switch (alt176)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1618:9: ^( LABEL_STATEMENT identifier sequential_statement2[$identifier.text] )
				{
				DebugLocation(1618, 9);
				DebugLocation(1618, 12);
				Match(input,LABEL_STATEMENT,Follow._LABEL_STATEMENT_in_sequential_statement13669); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1618, 28);
				PushFollow(Follow._identifier_in_sequential_statement13671);
				identifier226=identifier();
				PopFollow();

				DebugLocation(1618, 39);
				PushFollow(Follow._sequential_statement2_in_sequential_statement13673);
				sequential_statement2227=sequential_statement2((identifier226!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier226.Start),input.TreeAdaptor.GetTokenStopIndex(identifier226.Start))):null));
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1619, 9);
				 retval.value = sequential_statement2227; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1620:9: sequential_statement2[null]
				{
				DebugLocation(1620, 9);
				PushFollow(Follow._sequential_statement2_in_sequential_statement13696);
				sequential_statement2228=sequential_statement2(null);
				PopFollow();

				DebugLocation(1621, 9);
				 retval.value = sequential_statement2228; 

				}
				break;

			}
			 
				AddAnnotations(retval.value, retval.Start);
				retval.value.Parent = currentScope;

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("sequential_statement", 121);
			LeaveRule("sequential_statement", 121);
			LeaveRule_sequential_statement();
		}
		DebugLocation(1622, 4);
		} finally { DebugExitRule(GrammarFileName, "sequential_statement"); }
		return retval;

	}
	// $ANTLR end "sequential_statement"

	partial void EnterRule_sequential_statement2();
	partial void LeaveRule_sequential_statement2();

	// $ANTLR start "sequential_statement2"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1624:1: sequential_statement2[string label] returns [SequentialStatement value] : (s00= wait_statement[$label] |s01= assertion_statement[$label] |s02= report_statement[$label] |s03= signal_assignment_statement[$label] |s04= variable_assignment_statement[$label] |s05= if_statement[$label] |s06= case_statement[$label] |s07= loop_statement[$label] |s08= next_statement[$label] |s09= exit_statement[$label] |s10= return_statement[$label] |s11= null_statement[$label] |s12= procedure_call_statement[$label] );
	[GrammarRule("sequential_statement2")]
	private SequentialStatement sequential_statement2(string label)
	{
		EnterRule_sequential_statement2();
		EnterRule("sequential_statement2", 122);
		TraceIn("sequential_statement2", 122);
		SequentialStatement value = default(SequentialStatement);


		MetaClassCreator.wait_statement_return s00 = default(MetaClassCreator.wait_statement_return);
		MetaClassCreator.assertion_statement_return s01 = default(MetaClassCreator.assertion_statement_return);
		MetaClassCreator.report_statement_return s02 = default(MetaClassCreator.report_statement_return);
		MetaClassCreator.signal_assignment_statement_return s03 = default(MetaClassCreator.signal_assignment_statement_return);
		MetaClassCreator.variable_assignment_statement_return s04 = default(MetaClassCreator.variable_assignment_statement_return);
		MetaClassCreator.if_statement_return s05 = default(MetaClassCreator.if_statement_return);
		MetaClassCreator.case_statement_return s06 = default(MetaClassCreator.case_statement_return);
		MetaClassCreator.loop_statement_return s07 = default(MetaClassCreator.loop_statement_return);
		NextStatement s08 = default(NextStatement);
		MetaClassCreator.exit_statement_return s09 = default(MetaClassCreator.exit_statement_return);
		MetaClassCreator.return_statement_return s10 = default(MetaClassCreator.return_statement_return);
		MetaClassCreator.null_statement_return s11 = default(MetaClassCreator.null_statement_return);
		MetaClassCreator.procedure_call_statement_return s12 = default(MetaClassCreator.procedure_call_statement_return);

		try { DebugEnterRule(GrammarFileName, "sequential_statement2");
		DebugLocation(1624, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1625:5: (s00= wait_statement[$label] |s01= assertion_statement[$label] |s02= report_statement[$label] |s03= signal_assignment_statement[$label] |s04= variable_assignment_statement[$label] |s05= if_statement[$label] |s06= case_statement[$label] |s07= loop_statement[$label] |s08= next_statement[$label] |s09= exit_statement[$label] |s10= return_statement[$label] |s11= null_statement[$label] |s12= procedure_call_statement[$label] )
			int alt177=13;
			try { DebugEnterDecision(177, false);
			switch (input.LA(1))
			{
			case WAIT:
				{
				alt177 = 1;
				}
				break;
			case ASSERT:
				{
				alt177 = 2;
				}
				break;
			case REPORT:
				{
				alt177 = 3;
				}
				break;
			case SIGNAL_ASSIGNMENT_STATEMENT:
				{
				alt177 = 4;
				}
				break;
			case VARIABLE_ASSIGNMENT_STATEMENT:
				{
				alt177 = 5;
				}
				break;
			case IF:
				{
				alt177 = 6;
				}
				break;
			case CASE:
				{
				alt177 = 7;
				}
				break;
			case LOOP:
				{
				alt177 = 8;
				}
				break;
			case NEXT:
				{
				alt177 = 9;
				}
				break;
			case EXIT:
				{
				alt177 = 10;
				}
				break;
			case RETURN:
				{
				alt177 = 11;
				}
				break;
			case NULLTOK:
				{
				alt177 = 12;
				}
				break;
			case PROCEDURE_CALL:
				{
				alt177 = 13;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 177, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1625:7: s00= wait_statement[$label]
				{
				DebugLocation(1625, 10);
				PushFollow(Follow._wait_statement_in_sequential_statement213731);
				s00=wait_statement(label);
				PopFollow();

				DebugLocation(1625, 49);
				 value = (s00!=null?s00.value:default(WaitStatement)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1626:7: s01= assertion_statement[$label]
				{
				DebugLocation(1626, 10);
				PushFollow(Follow._assertion_statement_in_sequential_statement213759);
				s01=assertion_statement(label);
				PopFollow();

				DebugLocation(1626, 49);
				 value = (s01!=null?s01.value:default(AssertionStatement)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1627:7: s02= report_statement[$label]
				{
				DebugLocation(1627, 10);
				PushFollow(Follow._report_statement_in_sequential_statement213782);
				s02=report_statement(label);
				PopFollow();

				DebugLocation(1627, 49);
				 value = (s02!=null?s02.value:default(ReportStatement)); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1628:7: s03= signal_assignment_statement[$label]
				{
				DebugLocation(1628, 10);
				PushFollow(Follow._signal_assignment_statement_in_sequential_statement213808);
				s03=signal_assignment_statement(label);
				PopFollow();

				DebugLocation(1628, 49);
				 value = (s03!=null?s03.value:default(SignalAssignment)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1629:7: s04= variable_assignment_statement[$label]
				{
				DebugLocation(1629, 10);
				PushFollow(Follow._variable_assignment_statement_in_sequential_statement213823);
				s04=variable_assignment_statement(label);
				PopFollow();

				DebugLocation(1629, 49);
				 value = (s04!=null?s04.value:default(VariableAssignment)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1630:7: s05= if_statement[$label]
				{
				DebugLocation(1630, 10);
				PushFollow(Follow._if_statement_in_sequential_statement213836);
				s05=if_statement(label);
				PopFollow();

				DebugLocation(1630, 49);
				 value = (s05!=null?s05.value:default(IfStatement)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1631:7: s06= case_statement[$label]
				{
				DebugLocation(1631, 10);
				PushFollow(Follow._case_statement_in_sequential_statement213866);
				s06=case_statement(label);
				PopFollow();

				DebugLocation(1631, 49);
				 value = (s06!=null?s06.value:default(CaseStatement)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1632:7: s07= loop_statement[$label]
				{
				DebugLocation(1632, 10);
				PushFollow(Follow._loop_statement_in_sequential_statement213894);
				s07=loop_statement(label);
				PopFollow();

				DebugLocation(1632, 49);
				 value = (s07!=null?s07.value:default(LoopStatement)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1633:7: s08= next_statement[$label]
				{
				DebugLocation(1633, 10);
				PushFollow(Follow._next_statement_in_sequential_statement213922);
				s08=next_statement(label);
				PopFollow();

				DebugLocation(1633, 49);
				 value = s08; 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1634:7: s09= exit_statement[$label]
				{
				DebugLocation(1634, 10);
				PushFollow(Follow._exit_statement_in_sequential_statement213950);
				s09=exit_statement(label);
				PopFollow();

				DebugLocation(1634, 49);
				 value = (s09!=null?s09.value:default(ExitStatement)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1635:7: s10= return_statement[$label]
				{
				DebugLocation(1635, 10);
				PushFollow(Follow._return_statement_in_sequential_statement213978);
				s10=return_statement(label);
				PopFollow();

				DebugLocation(1635, 49);
				 value = (s10!=null?s10.value:default(ReturnStatement)); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1636:7: s11= null_statement[$label]
				{
				DebugLocation(1636, 10);
				PushFollow(Follow._null_statement_in_sequential_statement214004);
				s11=null_statement(label);
				PopFollow();

				DebugLocation(1636, 49);
				 value = (s11!=null?s11.value:default(NullStatement)); 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1637:7: s12= procedure_call_statement[$label]
				{
				DebugLocation(1637, 10);
				PushFollow(Follow._procedure_call_statement_in_sequential_statement214032);
				s12=procedure_call_statement(label);
				PopFollow();

				DebugLocation(1637, 49);
				 value = (s12!=null?s12.value:default(ProcedureCall)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("sequential_statement2", 122);
			LeaveRule("sequential_statement2", 122);
			LeaveRule_sequential_statement2();
		}
		DebugLocation(1638, 4);
		} finally { DebugExitRule(GrammarFileName, "sequential_statement2"); }
		return value;

	}
	// $ANTLR end "sequential_statement2"

	partial void EnterRule_shift_expression();
	partial void LeaveRule_shift_expression();

	// $ANTLR start "shift_expression"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1640:1: shift_expression returns [Expression value] : ( ^( shift_operator l= shift_expression r= shift_expression ) | simple_expression );
	[GrammarRule("shift_expression")]
	private Expression shift_expression()
	{
		EnterRule_shift_expression();
		EnterRule("shift_expression", 123);
		TraceIn("shift_expression", 123);
		Expression value = default(Expression);


		Expression l = default(Expression);
		Expression r = default(Expression);
		ExpressionType shift_operator229 = default(ExpressionType);
		Expression simple_expression230 = default(Expression);

		try { DebugEnterRule(GrammarFileName, "shift_expression");
		DebugLocation(1640, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1641:5: ( ^( shift_operator l= shift_expression r= shift_expression ) | simple_expression )
			int alt178=2;
			try { DebugEnterDecision(178, false);
			int LA178_0 = input.LA(1);

			if (((LA178_0>=ROL && LA178_0<=ROR)||(LA178_0>=SLA && LA178_0<=SLL)||(LA178_0>=SRA && LA178_0<=SRL)))
			{
				alt178 = 1;
			}
			else if ((LA178_0==ABS||LA178_0==AGGREGATE||LA178_0==AMPERSAND||LA178_0==BINANRY_BASED_INTEGER||(LA178_0>=BIT_STRING_LITERAL_BINARY && LA178_0<=BIT_STRING_LITERAL_OCTAL)||LA178_0==CHARACTER_LITERAL||LA178_0==DEC_BASED_INTEGER||LA178_0==DIV||LA178_0==DOUBLESTAR||LA178_0==FLOAT_POINT_LITERAL||LA178_0==HEXA_BASED_INTEGER||(LA178_0>=MINUS && LA178_0<=NAME)||LA178_0==NEW||(LA178_0>=NOT && LA178_0<=OCTAL_BASED_INTEGER)||LA178_0==PHYSICAL_LITERAL||LA178_0==PLUS||LA178_0==QUALIFIED_EXPRESSION||LA178_0==REM))
			{
				alt178 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 178, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(178); }
			switch (alt178)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1641:9: ^( shift_operator l= shift_expression r= shift_expression )
				{
				DebugLocation(1641, 9);
				DebugLocation(1641, 12);
				PushFollow(Follow._shift_operator_in_shift_expression14065);
				shift_operator229=shift_operator();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(1641, 28);
				PushFollow(Follow._shift_expression_in_shift_expression14069);
				l=shift_expression();
				PopFollow();

				DebugLocation(1641, 47);
				PushFollow(Follow._shift_expression_in_shift_expression14073);
				r=shift_expression();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1642, 9);
				 value = ExpressionTypeCreator.create(shift_operator229, l, r); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1643:9: simple_expression
				{
				DebugLocation(1643, 9);
				PushFollow(Follow._simple_expression_in_shift_expression14095);
				simple_expression230=simple_expression();
				PopFollow();

				DebugLocation(1644, 9);
				 value = simple_expression230; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("shift_expression", 123);
			LeaveRule("shift_expression", 123);
			LeaveRule_shift_expression();
		}
		DebugLocation(1645, 4);
		} finally { DebugExitRule(GrammarFileName, "shift_expression"); }
		return value;

	}
	// $ANTLR end "shift_expression"

	partial void EnterRule_shift_operator();
	partial void LeaveRule_shift_operator();

	// $ANTLR start "shift_operator"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1647:1: shift_operator returns [ExpressionType value] : ( SLL | SRL | SLA | SRA | ROL | ROR );
	[GrammarRule("shift_operator")]
	private ExpressionType shift_operator()
	{
		EnterRule_shift_operator();
		EnterRule("shift_operator", 124);
		TraceIn("shift_operator", 124);
		ExpressionType value = default(ExpressionType);


		try { DebugEnterRule(GrammarFileName, "shift_operator");
		DebugLocation(1647, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1648:5: ( SLL | SRL | SLA | SRA | ROL | ROR )
			int alt179=6;
			try { DebugEnterDecision(179, false);
			switch (input.LA(1))
			{
			case SLL:
				{
				alt179 = 1;
				}
				break;
			case SRL:
				{
				alt179 = 2;
				}
				break;
			case SLA:
				{
				alt179 = 3;
				}
				break;
			case SRA:
				{
				alt179 = 4;
				}
				break;
			case ROL:
				{
				alt179 = 5;
				}
				break;
			case ROR:
				{
				alt179 = 6;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 179, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(179); }
			switch (alt179)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1648:9: SLL
				{
				DebugLocation(1648, 9);
				Match(input,SLL,Follow._SLL_in_shift_operator14128); 
				DebugLocation(1648, 13);
				 value = ExpressionType.SLL;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1649:9: SRL
				{
				DebugLocation(1649, 9);
				Match(input,SRL,Follow._SRL_in_shift_operator14140); 
				DebugLocation(1649, 13);
				 value = ExpressionType.SRL;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1650:9: SLA
				{
				DebugLocation(1650, 9);
				Match(input,SLA,Follow._SLA_in_shift_operator14152); 
				DebugLocation(1650, 13);
				 value = ExpressionType.SLA;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1651:9: SRA
				{
				DebugLocation(1651, 9);
				Match(input,SRA,Follow._SRA_in_shift_operator14164); 
				DebugLocation(1651, 13);
				 value = ExpressionType.SRA;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1652:9: ROL
				{
				DebugLocation(1652, 9);
				Match(input,ROL,Follow._ROL_in_shift_operator14176); 
				DebugLocation(1652, 13);
				 value = ExpressionType.ROL;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1653:9: ROR
				{
				DebugLocation(1653, 9);
				Match(input,ROR,Follow._ROR_in_shift_operator14188); 
				DebugLocation(1653, 13);
				 value = ExpressionType.ROR;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("shift_operator", 124);
			LeaveRule("shift_operator", 124);
			LeaveRule_shift_operator();
		}
		DebugLocation(1654, 4);
		} finally { DebugExitRule(GrammarFileName, "shift_operator"); }
		return value;

	}
	// $ANTLR end "shift_operator"

	private sealed partial class signal_assignment_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public SignalAssignment value;
		public signal_assignment_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_signal_assignment_statement();
	partial void LeaveRule_signal_assignment_statement();

	// $ANTLR start "signal_assignment_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1656:1: signal_assignment_statement[string label] returns [SignalAssignment value] : ^( SIGNAL_ASSIGNMENT_STATEMENT target_signal ( delay_mechanism )? waveform ) ;
	[GrammarRule("signal_assignment_statement")]
	private MetaClassCreator.signal_assignment_statement_return signal_assignment_statement(string label)
	{
		EnterRule_signal_assignment_statement();
		EnterRule("signal_assignment_statement", 125);
		TraceIn("signal_assignment_statement", 125);
		MetaClassCreator.signal_assignment_statement_return retval = new MetaClassCreator.signal_assignment_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		ISignalAssignmentTarget target_signal231 = default(ISignalAssignmentTarget);
		List<WaveformElement> waveform232 = default(List<WaveformElement>);
		DelayMechanism delay_mechanism233 = default(DelayMechanism);

		try { DebugEnterRule(GrammarFileName, "signal_assignment_statement");
		DebugLocation(1656, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1658:5: ( ^( SIGNAL_ASSIGNMENT_STATEMENT target_signal ( delay_mechanism )? waveform ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1658:9: ^( SIGNAL_ASSIGNMENT_STATEMENT target_signal ( delay_mechanism )? waveform )
			{
			DebugLocation(1658, 9);
			DebugLocation(1658, 12);
			Match(input,SIGNAL_ASSIGNMENT_STATEMENT,Follow._SIGNAL_ASSIGNMENT_STATEMENT_in_signal_assignment_statement14221); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1658, 40);
			PushFollow(Follow._target_signal_in_signal_assignment_statement14223);
			target_signal231=target_signal();
			PopFollow();

			DebugLocation(1658, 54);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1658:54: ( delay_mechanism )?
			int alt180=2;
			try { DebugEnterSubRule(180);
			try { DebugEnterDecision(180, false);
			int LA180_0 = input.LA(1);

			if ((LA180_0==INERTIAL||LA180_0==TRANSPORT))
			{
				alt180 = 1;
			}
			} finally { DebugExitDecision(180); }
			switch (alt180)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1658:54: delay_mechanism
				{
				DebugLocation(1658, 54);
				PushFollow(Follow._delay_mechanism_in_signal_assignment_statement14225);
				delay_mechanism233=delay_mechanism();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(180); }

			DebugLocation(1658, 71);
			PushFollow(Follow._waveform_in_signal_assignment_statement14228);
			waveform232=waveform();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1659, 9);

			            retval.value = new SignalAssignment(target_signal231, waveform232);
			            retval.value.Label = label;
			            retval.value.DelayMechanism = delay_mechanism233;
			        

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("signal_assignment_statement", 125);
			LeaveRule("signal_assignment_statement", 125);
			LeaveRule_signal_assignment_statement();
		}
		DebugLocation(1664, 4);
		} finally { DebugExitRule(GrammarFileName, "signal_assignment_statement"); }
		return retval;

	}
	// $ANTLR end "signal_assignment_statement"

	private sealed partial class signal_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public SignalDeclaration value;
		public signal_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_signal_declaration();
	partial void LeaveRule_signal_declaration();

	// $ANTLR start "signal_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1666:1: signal_declaration returns [SignalDeclaration value] : ^( SIGNAL identifier_list subtype_indication signal_kind ( expression )? ) ;
	[GrammarRule("signal_declaration")]
	private MetaClassCreator.signal_declaration_return signal_declaration()
	{
		EnterRule_signal_declaration();
		EnterRule("signal_declaration", 126);
		TraceIn("signal_declaration", 126);
		MetaClassCreator.signal_declaration_return retval = new MetaClassCreator.signal_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<string> identifier_list234 = default(List<string>);
		ISubtypeIndication subtype_indication235 = default(ISubtypeIndication);
		MetaClassCreator.expression_return expression236 = default(MetaClassCreator.expression_return);
		Signal.KindEnum signal_kind237 = default(Signal.KindEnum);

		try { DebugEnterRule(GrammarFileName, "signal_declaration");
		DebugLocation(1666, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1672:5: ( ^( SIGNAL identifier_list subtype_indication signal_kind ( expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1672:9: ^( SIGNAL identifier_list subtype_indication signal_kind ( expression )? )
			{
			DebugLocation(1672, 9);
			DebugLocation(1672, 12);
			Match(input,SIGNAL,Follow._SIGNAL_in_signal_declaration14271); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1672, 19);
			PushFollow(Follow._identifier_list_in_signal_declaration14273);
			identifier_list234=identifier_list();
			PopFollow();

			DebugLocation(1672, 35);
			PushFollow(Follow._subtype_indication_in_signal_declaration14275);
			subtype_indication235=subtype_indication();
			PopFollow();

			DebugLocation(1672, 54);
			PushFollow(Follow._signal_kind_in_signal_declaration14277);
			signal_kind237=signal_kind();
			PopFollow();

			DebugLocation(1672, 66);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1672:66: ( expression )?
			int alt181=2;
			try { DebugEnterSubRule(181);
			try { DebugEnterDecision(181, false);
			int LA181_0 = input.LA(1);

			if ((LA181_0==EXPRESSION))
			{
				alt181 = 1;
			}
			} finally { DebugExitDecision(181); }
			switch (alt181)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1672:66: expression
				{
				DebugLocation(1672, 66);
				PushFollow(Follow._expression_in_signal_declaration14279);
				expression236=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(181); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1673, 9);

			            List<Signal> signals = new List<Signal>();
			            foreach (string identifier in identifier_list234)
			            {
			                Signal s = new Signal(identifier, subtype_indication235, (expression236!=null?expression236.value:default(Expression)));
			                s.Kind = signal_kind237;
			                signals.Add(s);
			            }
			            retval.value = new SignalDeclaration(signals);
			        

			}


				AddAnnotations(retval.value, retval.Start);
				retval.value.Parent = currentScope;

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("signal_declaration", 126);
			LeaveRule("signal_declaration", 126);
			LeaveRule_signal_declaration();
		}
		DebugLocation(1683, 4);
		} finally { DebugExitRule(GrammarFileName, "signal_declaration"); }
		return retval;

	}
	// $ANTLR end "signal_declaration"

	partial void EnterRule_signal_kind();
	partial void LeaveRule_signal_kind();

	// $ANTLR start "signal_kind"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1685:1: signal_kind returns [Signal.KindEnum value] : ( REGISTER | BUS |);
	[GrammarRule("signal_kind")]
	private Signal.KindEnum signal_kind()
	{
		EnterRule_signal_kind();
		EnterRule("signal_kind", 127);
		TraceIn("signal_kind", 127);
		Signal.KindEnum value = default(Signal.KindEnum);


		try { DebugEnterRule(GrammarFileName, "signal_kind");
		DebugLocation(1685, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1686:5: ( REGISTER | BUS |)
			int alt182=3;
			try { DebugEnterDecision(182, false);
			switch (input.LA(1))
			{
			case REGISTER:
				{
				alt182 = 1;
				}
				break;
			case BUS:
				{
				alt182 = 2;
				}
				break;
			case UP:
			case EXPRESSION:
				{
				alt182 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 182, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(182); }
			switch (alt182)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1686:9: REGISTER
				{
				DebugLocation(1686, 9);
				Match(input,REGISTER,Follow._REGISTER_in_signal_kind14315); 
				DebugLocation(1686, 18);
				 value = Signal.KindEnum.REGISTER; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1687:9: BUS
				{
				DebugLocation(1687, 9);
				Match(input,BUS,Follow._BUS_in_signal_kind14327); 
				DebugLocation(1687, 18);
				 value = Signal.KindEnum.BUS; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1688:18: 
				{
				DebugLocation(1688, 18);
				 value = Signal.KindEnum.DEFAULT; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("signal_kind", 127);
			LeaveRule("signal_kind", 127);
			LeaveRule_signal_kind();
		}
		DebugLocation(1689, 4);
		} finally { DebugExitRule(GrammarFileName, "signal_kind"); }
		return value;

	}
	// $ANTLR end "signal_kind"

	partial void EnterRule_signal_list();
	partial void LeaveRule_signal_list();

	// $ANTLR start "signal_list"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1691:1: signal_list returns [DisconnectionSpecification.SignalList value] : ( ^( SIGNAL_LIST (signal= name )+ ) | OTHERS | ALL );
	[GrammarRule("signal_list")]
	private DisconnectionSpecification.SignalList signal_list()
	{
		EnterRule_signal_list();
		EnterRule("signal_list", 128);
		TraceIn("signal_list", 128);
		DisconnectionSpecification.SignalList value = default(DisconnectionSpecification.SignalList);


		MetaClassCreator.name_return signal = default(MetaClassCreator.name_return);

		 List<Signal> signals = new List<Signal>(); 
		try { DebugEnterRule(GrammarFileName, "signal_list");
		DebugLocation(1691, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1693:5: ( ^( SIGNAL_LIST (signal= name )+ ) | OTHERS | ALL )
			int alt184=3;
			try { DebugEnterDecision(184, false);
			switch (input.LA(1))
			{
			case SIGNAL_LIST:
				{
				alt184 = 1;
				}
				break;
			case OTHERS:
				{
				alt184 = 2;
				}
				break;
			case ALL:
				{
				alt184 = 3;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 184, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(184); }
			switch (alt184)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1693:9: ^( SIGNAL_LIST (signal= name )+ )
				{
				DebugLocation(1693, 9);
				DebugLocation(1693, 12);
				Match(input,SIGNAL_LIST,Follow._SIGNAL_LIST_in_signal_list14383); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1693, 24);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1693:24: (signal= name )+
				int cnt183=0;
				try { DebugEnterSubRule(183);
				while (true)
				{
					int alt183=2;
					try { DebugEnterDecision(183, false);
					int LA183_0 = input.LA(1);

					if ((LA183_0==NAME))
					{
						alt183 = 1;
					}


					} finally { DebugExitDecision(183); }
					switch (alt183)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1693:26: signal= name
						{
						DebugLocation(1693, 32);
						PushFollow(Follow._name_in_signal_list14389);
						signal=name();
						PopFollow();

						DebugLocation(1693, 38);
						 signals.Add((signal!=null?signal.value:default(TemporaryName)).toSignal(currentScope)); 

						}
						break;

					default:
						if (cnt183 >= 1)
							goto loop183;

						EarlyExitException eee183 = new EarlyExitException( 183, input );
						DebugRecognitionException(eee183);
						throw eee183;
					}
					cnt183++;
				}
				loop183:
					;

				} finally { DebugExitSubRule(183); }


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1694, 9);
				 value = new DisconnectionSpecification.SignalList(signals); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1695:9: OTHERS
				{
				DebugLocation(1695, 9);
				Match(input,OTHERS,Follow._OTHERS_in_signal_list14416); 
				DebugLocation(1695, 16);
				 value = DisconnectionSpecification.SignalList.OTHERS; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1696:9: ALL
				{
				DebugLocation(1696, 9);
				Match(input,ALL,Follow._ALL_in_signal_list14428); 
				DebugLocation(1696, 16);
				 value = DisconnectionSpecification.SignalList.ALL; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("signal_list", 128);
			LeaveRule("signal_list", 128);
			LeaveRule_signal_list();
		}
		DebugLocation(1697, 4);
		} finally { DebugExitRule(GrammarFileName, "signal_list"); }
		return value;

	}
	// $ANTLR end "signal_list"

	partial void EnterRule_signature();
	partial void LeaveRule_signature();

	// $ANTLR start "signature"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1699:1: signature returns [Signature value = new Signature();] : ^( SIGNATURE (type_mark1= name )* ( RETURN type_mark2= name )? ) ;
	[GrammarRule("signature")]
	private Signature signature()
	{
		EnterRule_signature();
		EnterRule("signature", 129);
		TraceIn("signature", 129);
		Signature value =  new Signature();;


		MetaClassCreator.name_return type_mark1 = default(MetaClassCreator.name_return);
		MetaClassCreator.name_return type_mark2 = default(MetaClassCreator.name_return);

		try { DebugEnterRule(GrammarFileName, "signature");
		DebugLocation(1699, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1700:5: ( ^( SIGNATURE (type_mark1= name )* ( RETURN type_mark2= name )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1700:9: ^( SIGNATURE (type_mark1= name )* ( RETURN type_mark2= name )? )
			{
			DebugLocation(1700, 9);
			DebugLocation(1700, 12);
			Match(input,SIGNATURE,Follow._SIGNATURE_in_signature14458); 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(1701, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1701:13: (type_mark1= name )*
				try { DebugEnterSubRule(185);
				while (true)
				{
					int alt185=2;
					try { DebugEnterDecision(185, false);
					int LA185_0 = input.LA(1);

					if ((LA185_0==NAME))
					{
						alt185 = 1;
					}


					} finally { DebugExitDecision(185); }
					switch ( alt185 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1701:15: type_mark1= name
						{
						DebugLocation(1701, 25);
						PushFollow(Follow._name_in_signature14477);
						type_mark1=name();
						PopFollow();

						DebugLocation(1701, 31);
						 value.ParameterTypes.Add((type_mark1!=null?type_mark1.value:default(TemporaryName)).toTypeMark(currentScope)); 

						}
						break;

					default:
						goto loop185;
					}
				}

				loop185:
					;

				} finally { DebugExitSubRule(185); }

				DebugLocation(1702, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1702:13: ( RETURN type_mark2= name )?
				int alt186=2;
				try { DebugEnterSubRule(186);
				try { DebugEnterDecision(186, false);
				int LA186_0 = input.LA(1);

				if ((LA186_0==RETURN))
				{
					alt186 = 1;
				}
				} finally { DebugExitDecision(186); }
				switch (alt186)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1702:15: RETURN type_mark2= name
					{
					DebugLocation(1702, 15);
					Match(input,RETURN,Follow._RETURN_in_signature14498); 
					DebugLocation(1702, 32);
					PushFollow(Follow._name_in_signature14502);
					type_mark2=name();
					PopFollow();

					DebugLocation(1702, 38);
					 value.ReturnType = (type_mark2!=null?type_mark2.value:default(TemporaryName)).toTypeMark(currentScope); 

					}
					break;

				}
				} finally { DebugExitSubRule(186); }


				Match(input, TokenTypes.Up, null); 
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("signature", 129);
			LeaveRule("signature", 129);
			LeaveRule_signature();
		}
		DebugLocation(1704, 4);
		} finally { DebugExitRule(GrammarFileName, "signature"); }
		return value;

	}
	// $ANTLR end "signature"

	partial void EnterRule_simple_expression();
	partial void LeaveRule_simple_expression();

	// $ANTLR start "simple_expression"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1706:1: simple_expression returns [Expression value] : ( PLUS | MINUS )? ( ^( adding_operator l= simple_expression r= simple_expression ) |t= term ) ;
	[GrammarRule("simple_expression")]
	private Expression simple_expression()
	{
		EnterRule_simple_expression();
		EnterRule("simple_expression", 130);
		TraceIn("simple_expression", 130);
		Expression value = default(Expression);


		Expression l = default(Expression);
		Expression r = default(Expression);
		Expression t = default(Expression);
		ExpressionType adding_operator238 = default(ExpressionType);


		    bool AddPlus = false;
		    bool AddMinus = false;

		try { DebugEnterRule(GrammarFileName, "simple_expression");
		DebugLocation(1706, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1719:5: ( ( PLUS | MINUS )? ( ^( adding_operator l= simple_expression r= simple_expression ) |t= term ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1719:9: ( PLUS | MINUS )? ( ^( adding_operator l= simple_expression r= simple_expression ) |t= term )
			{
			DebugLocation(1719, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1719:9: ( PLUS | MINUS )?
			int alt187=3;
			try { DebugEnterSubRule(187);
			try { DebugEnterDecision(187, false);
			int LA187_0 = input.LA(1);

			if ((LA187_0==PLUS))
			{
				int LA187_1 = input.LA(2);

				if ((LA187_1==ABS||LA187_1==AGGREGATE||LA187_1==AMPERSAND||LA187_1==BINANRY_BASED_INTEGER||(LA187_1>=BIT_STRING_LITERAL_BINARY && LA187_1<=BIT_STRING_LITERAL_OCTAL)||LA187_1==CHARACTER_LITERAL||LA187_1==DEC_BASED_INTEGER||LA187_1==DIV||LA187_1==DOUBLESTAR||LA187_1==FLOAT_POINT_LITERAL||LA187_1==HEXA_BASED_INTEGER||(LA187_1>=MINUS && LA187_1<=NAME)||LA187_1==NEW||(LA187_1>=NOT && LA187_1<=OCTAL_BASED_INTEGER)||LA187_1==PHYSICAL_LITERAL||LA187_1==PLUS||LA187_1==QUALIFIED_EXPRESSION||LA187_1==REM))
				{
					alt187 = 1;
				}
			}
			else if ((LA187_0==MINUS))
			{
				int LA187_2 = input.LA(2);

				if ((LA187_2==ABS||LA187_2==AGGREGATE||LA187_2==AMPERSAND||LA187_2==BINANRY_BASED_INTEGER||(LA187_2>=BIT_STRING_LITERAL_BINARY && LA187_2<=BIT_STRING_LITERAL_OCTAL)||LA187_2==CHARACTER_LITERAL||LA187_2==DEC_BASED_INTEGER||LA187_2==DIV||LA187_2==DOUBLESTAR||LA187_2==FLOAT_POINT_LITERAL||LA187_2==HEXA_BASED_INTEGER||(LA187_2>=MINUS && LA187_2<=NAME)||LA187_2==NEW||(LA187_2>=NOT && LA187_2<=OCTAL_BASED_INTEGER)||LA187_2==PHYSICAL_LITERAL||LA187_2==PLUS||LA187_2==QUALIFIED_EXPRESSION||LA187_2==REM))
				{
					alt187 = 2;
				}
			}
			} finally { DebugExitDecision(187); }
			switch (alt187)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1720:17: PLUS
				{
				DebugLocation(1720, 17);
				Match(input,PLUS,Follow._PLUS_in_simple_expression14568); 
				DebugLocation(1720, 23);
				 AddPlus = true; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1721:17: MINUS
				{
				DebugLocation(1721, 17);
				Match(input,MINUS,Follow._MINUS_in_simple_expression14589); 
				DebugLocation(1721, 23);
				 AddMinus = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(187); }

			DebugLocation(1723, 9);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1723:9: ( ^( adding_operator l= simple_expression r= simple_expression ) |t= term )
			int alt188=2;
			try { DebugEnterSubRule(188);
			try { DebugEnterDecision(188, false);
			int LA188_0 = input.LA(1);

			if ((LA188_0==AMPERSAND||LA188_0==MINUS||LA188_0==PLUS))
			{
				alt188 = 1;
			}
			else if ((LA188_0==ABS||LA188_0==AGGREGATE||LA188_0==BINANRY_BASED_INTEGER||(LA188_0>=BIT_STRING_LITERAL_BINARY && LA188_0<=BIT_STRING_LITERAL_OCTAL)||LA188_0==CHARACTER_LITERAL||LA188_0==DEC_BASED_INTEGER||LA188_0==DIV||LA188_0==DOUBLESTAR||LA188_0==FLOAT_POINT_LITERAL||LA188_0==HEXA_BASED_INTEGER||(LA188_0>=MOD && LA188_0<=NAME)||LA188_0==NEW||(LA188_0>=NOT && LA188_0<=OCTAL_BASED_INTEGER)||LA188_0==PHYSICAL_LITERAL||LA188_0==QUALIFIED_EXPRESSION||LA188_0==REM))
			{
				alt188 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 188, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(188); }
			switch (alt188)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1724:17: ^( adding_operator l= simple_expression r= simple_expression )
				{
				DebugLocation(1724, 17);
				DebugLocation(1724, 20);
				PushFollow(Follow._adding_operator_in_simple_expression14632);
				adding_operator238=adding_operator();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(1724, 37);
				PushFollow(Follow._simple_expression_in_simple_expression14636);
				l=simple_expression();
				PopFollow();

				DebugLocation(1724, 57);
				PushFollow(Follow._simple_expression_in_simple_expression14640);
				r=simple_expression();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1725, 17);
				 value = ExpressionTypeCreator.create(adding_operator238, l, r); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1726:17: t= term
				{
				DebugLocation(1726, 18);
				PushFollow(Follow._term_in_simple_expression14680);
				t=term();
				PopFollow();

				DebugLocation(1727, 17);
				 value = t; 

				}
				break;

			}
			} finally { DebugExitSubRule(188); }


			}


			    if (AddPlus) {
			        value = new Plus(value);
			    }
			    if (AddMinus) {
			        value = new Minus(value);
			    }

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("simple_expression", 130);
			LeaveRule("simple_expression", 130);
			LeaveRule_simple_expression();
		}
		DebugLocation(1729, 4);
		} finally { DebugExitRule(GrammarFileName, "simple_expression"); }
		return value;

	}
	// $ANTLR end "simple_expression"

	private sealed partial class subprogram_body_return : TreeRuleReturnScope<CommonTree>
	{
		public SubprogramBody value;
		public subprogram_body_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_subprogram_body();
	partial void LeaveRule_subprogram_body();

	// $ANTLR start "subprogram_body"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1731:1: subprogram_body returns [SubprogramBody value] : ^( SUBPROGRAM_BODY sp= subprogram_specification (sdi= subprogram_declarative_item )* (ss= sequential_statement )* ) ;
	[GrammarRule("subprogram_body")]
	private MetaClassCreator.subprogram_body_return subprogram_body()
	{
		EnterRule_subprogram_body();
		EnterRule("subprogram_body", 131);
		TraceIn("subprogram_body", 131);
		MetaClassCreator.subprogram_body_return retval = new MetaClassCreator.subprogram_body_return(this);
		retval.Start = (CommonTree)input.LT(1);

		SubprogramDeclaration sp = default(SubprogramDeclaration);
		MetaClassCreator.subprogram_declarative_item_return sdi = default(MetaClassCreator.subprogram_declarative_item_return);
		MetaClassCreator.sequential_statement_return ss = default(MetaClassCreator.sequential_statement_return);

		 IDeclarativeRegion oldScope = currentScope; 
		try { DebugEnterRule(GrammarFileName, "subprogram_body");
		DebugLocation(1731, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1737:5: ( ^( SUBPROGRAM_BODY sp= subprogram_specification (sdi= subprogram_declarative_item )* (ss= sequential_statement )* ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1737:9: ^( SUBPROGRAM_BODY sp= subprogram_specification (sdi= subprogram_declarative_item )* (ss= sequential_statement )* )
			{
			DebugLocation(1737, 9);
			DebugLocation(1737, 12);
			Match(input,SUBPROGRAM_BODY,Follow._SUBPROGRAM_BODY_in_subprogram_body14743); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1738, 15);
			PushFollow(Follow._subprogram_specification_in_subprogram_body14759);
			sp=subprogram_specification();
			PopFollow();

			DebugLocation(1739, 13);

			                if (sp is FunctionDeclaration)
			                {
			                    retval.value = new FunctionBody((FunctionDeclaration) sp);
			                }
			                else
			                 if (sp is ProcedureDeclaration)
			                 {
			                    retval.value = new ProcedureBody((ProcedureDeclaration) sp);
			                 }
			                 else
			                 {
			                    throw new Exception("Illegal Expression");
			                 }

			                retval.value.Parent = oldScope;
			                currentScope = retval.value;
			            
			DebugLocation(1757, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1757:13: (sdi= subprogram_declarative_item )*
			try { DebugEnterSubRule(189);
			while (true)
			{
				int alt189=2;
				try { DebugEnterDecision(189, false);
				int LA189_0 = input.LA(1);

				if ((LA189_0==ALIAS||(LA189_0>=ATTRIBUTE_DECLARATION && LA189_0<=ATTRIBUTE_SPECIFICATION)||LA189_0==CONSTANT||LA189_0==FILE||LA189_0==FULL_TYPE_DECLARATION||(LA189_0>=GROUP_DECLARATION && LA189_0<=GROUP_TEMPLATE_DECLARATION)||LA189_0==INCOMPLETE_TYPE_DECLARATION||(LA189_0>=SUBPROGRAM_BODY && LA189_0<=SUBTYPE)||LA189_0==USE||LA189_0==VARIABLE))
				{
					alt189 = 1;
				}


				} finally { DebugExitDecision(189); }
				switch ( alt189 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1757:15: sdi= subprogram_declarative_item
					{
					DebugLocation(1757, 18);
					PushFollow(Follow._subprogram_declarative_item_in_subprogram_body14791);
					sdi=subprogram_declarative_item();
					PopFollow();

					DebugLocation(1757, 47);
					 retval.value.Declarations.Add((sdi!=null?sdi.value:default(ISubprogramDeclarativeItem))); 

					}
					break;

				default:
					goto loop189;
				}
			}

			loop189:
				;

			} finally { DebugExitSubRule(189); }

			DebugLocation(1758, 13);
			 AddListEndComments((sdi!=null?sdi.value:default(ISubprogramDeclarativeItem)), (sdi!=null?((CommonTree)sdi.Start):default(CommonTree))); 
			DebugLocation(1759, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1759:13: (ss= sequential_statement )*
			try { DebugEnterSubRule(190);
			while (true)
			{
				int alt190=2;
				try { DebugEnterDecision(190, false);
				int LA190_0 = input.LA(1);

				if ((LA190_0==ASSERT||LA190_0==CASE||LA190_0==EXIT||LA190_0==IF||LA190_0==LABEL_STATEMENT||LA190_0==LOOP||LA190_0==NEXT||LA190_0==NULLTOK||LA190_0==PROCEDURE_CALL||LA190_0==REPORT||LA190_0==RETURN||LA190_0==SIGNAL_ASSIGNMENT_STATEMENT||(LA190_0>=VARIABLE_ASSIGNMENT_STATEMENT && LA190_0<=WAIT)))
				{
					alt190 = 1;
				}


				} finally { DebugExitDecision(190); }
				switch ( alt190 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1759:15: ss= sequential_statement
					{
					DebugLocation(1759, 17);
					PushFollow(Follow._sequential_statement_in_subprogram_body14828);
					ss=sequential_statement();
					PopFollow();

					DebugLocation(1759, 39);
					 retval.value.Statements.Add((ss!=null?ss.value:default(SequentialStatement))); 

					}
					break;

				default:
					goto loop190;
				}
			}

			loop190:
				;

			} finally { DebugExitSubRule(190); }

			DebugLocation(1760, 13);
			 AddListEndComments((ss!=null?ss.value:default(SequentialStatement)), (ss!=null?((CommonTree)ss.Start):default(CommonTree))); 

			Match(input, TokenTypes.Up, null); 


			}


			    currentScope = oldScope;
			    AddAnnotations(retval.value, retval.Start);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("subprogram_body", 131);
			LeaveRule("subprogram_body", 131);
			LeaveRule_subprogram_body();
		}
		DebugLocation(1762, 4);
		} finally { DebugExitRule(GrammarFileName, "subprogram_body"); }
		return retval;

	}
	// $ANTLR end "subprogram_body"

	private sealed partial class subprogram_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public SubprogramDeclaration value;
		public subprogram_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_subprogram_declaration();
	partial void LeaveRule_subprogram_declaration();

	// $ANTLR start "subprogram_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1764:1: subprogram_declaration returns [SubprogramDeclaration value] : ^( SUBPROGRAM_DECLARATION subprogram_specification ) ;
	[GrammarRule("subprogram_declaration")]
	private MetaClassCreator.subprogram_declaration_return subprogram_declaration()
	{
		EnterRule_subprogram_declaration();
		EnterRule("subprogram_declaration", 132);
		TraceIn("subprogram_declaration", 132);
		MetaClassCreator.subprogram_declaration_return retval = new MetaClassCreator.subprogram_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		SubprogramDeclaration subprogram_specification239 = default(SubprogramDeclaration);

		try { DebugEnterRule(GrammarFileName, "subprogram_declaration");
		DebugLocation(1764, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1766:5: ( ^( SUBPROGRAM_DECLARATION subprogram_specification ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1766:9: ^( SUBPROGRAM_DECLARATION subprogram_specification )
			{
			DebugLocation(1766, 9);
			DebugLocation(1766, 12);
			Match(input,SUBPROGRAM_DECLARATION,Follow._SUBPROGRAM_DECLARATION_in_subprogram_declaration14887); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1766, 35);
			PushFollow(Follow._subprogram_specification_in_subprogram_declaration14889);
			subprogram_specification239=subprogram_specification();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1767, 9);
			 retval.value = subprogram_specification239; 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("subprogram_declaration", 132);
			LeaveRule("subprogram_declaration", 132);
			LeaveRule_subprogram_declaration();
		}
		DebugLocation(1768, 4);
		} finally { DebugExitRule(GrammarFileName, "subprogram_declaration"); }
		return retval;

	}
	// $ANTLR end "subprogram_declaration"

	private sealed partial class subprogram_declarative_item_return : TreeRuleReturnScope<CommonTree>
	{
		public ISubprogramDeclarativeItem value;
		public subprogram_declarative_item_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_subprogram_declarative_item();
	partial void LeaveRule_subprogram_declarative_item();

	// $ANTLR start "subprogram_declarative_item"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1770:1: subprogram_declarative_item returns [ISubprogramDeclarativeItem value] : ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | variable_declaration | file_declaration | alias_declaration | attribute_specification | attribute_declaration | use_clause | group_template_declaration | group_declaration );
	[GrammarRule("subprogram_declarative_item")]
	private MetaClassCreator.subprogram_declarative_item_return subprogram_declarative_item()
	{
		EnterRule_subprogram_declarative_item();
		EnterRule("subprogram_declarative_item", 133);
		TraceIn("subprogram_declarative_item", 133);
		MetaClassCreator.subprogram_declarative_item_return retval = new MetaClassCreator.subprogram_declarative_item_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.subprogram_declaration_return subprogram_declaration240 = default(MetaClassCreator.subprogram_declaration_return);
		MetaClassCreator.subprogram_body_return subprogram_body241 = default(MetaClassCreator.subprogram_body_return);
		VHDL.type.Type type_declaration242 = default(VHDL.type.Type);
		MetaClassCreator.subtype_declaration_return subtype_declaration243 = default(MetaClassCreator.subtype_declaration_return);
		MetaClassCreator.constant_declaration_return constant_declaration244 = default(MetaClassCreator.constant_declaration_return);
		MetaClassCreator.variable_declaration_return variable_declaration245 = default(MetaClassCreator.variable_declaration_return);
		MetaClassCreator.file_declaration_return file_declaration246 = default(MetaClassCreator.file_declaration_return);
		MetaClassCreator.alias_declaration_return alias_declaration247 = default(MetaClassCreator.alias_declaration_return);
		MetaClassCreator.attribute_specification_return attribute_specification248 = default(MetaClassCreator.attribute_specification_return);
		MetaClassCreator.attribute_declaration_return attribute_declaration249 = default(MetaClassCreator.attribute_declaration_return);
		MetaClassCreator.use_clause_return use_clause250 = default(MetaClassCreator.use_clause_return);
		MetaClassCreator.group_template_declaration_return group_template_declaration251 = default(MetaClassCreator.group_template_declaration_return);
		MetaClassCreator.group_declaration_return group_declaration252 = default(MetaClassCreator.group_declaration_return);

		try { DebugEnterRule(GrammarFileName, "subprogram_declarative_item");
		DebugLocation(1770, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1771:5: ( subprogram_declaration | subprogram_body | type_declaration | subtype_declaration | constant_declaration | variable_declaration | file_declaration | alias_declaration | attribute_specification | attribute_declaration | use_clause | group_template_declaration | group_declaration )
			int alt191=13;
			try { DebugEnterDecision(191, false);
			switch (input.LA(1))
			{
			case SUBPROGRAM_DECLARATION:
				{
				alt191 = 1;
				}
				break;
			case SUBPROGRAM_BODY:
				{
				alt191 = 2;
				}
				break;
			case FULL_TYPE_DECLARATION:
			case INCOMPLETE_TYPE_DECLARATION:
				{
				alt191 = 3;
				}
				break;
			case SUBTYPE:
				{
				alt191 = 4;
				}
				break;
			case CONSTANT:
				{
				alt191 = 5;
				}
				break;
			case VARIABLE:
				{
				alt191 = 6;
				}
				break;
			case FILE:
				{
				alt191 = 7;
				}
				break;
			case ALIAS:
				{
				alt191 = 8;
				}
				break;
			case ATTRIBUTE_SPECIFICATION:
				{
				alt191 = 9;
				}
				break;
			case ATTRIBUTE_DECLARATION:
				{
				alt191 = 10;
				}
				break;
			case USE:
				{
				alt191 = 11;
				}
				break;
			case GROUP_TEMPLATE_DECLARATION:
				{
				alt191 = 12;
				}
				break;
			case GROUP_DECLARATION:
				{
				alt191 = 13;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 191, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(191); }
			switch (alt191)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1771:9: subprogram_declaration
				{
				DebugLocation(1771, 9);
				PushFollow(Follow._subprogram_declaration_in_subprogram_declarative_item14924);
				subprogram_declaration240=subprogram_declaration();
				PopFollow();

				DebugLocation(1771, 36);
				 retval.value = (subprogram_declaration240!=null?subprogram_declaration240.value:default(SubprogramDeclaration)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1772:9: subprogram_body
				{
				DebugLocation(1772, 9);
				PushFollow(Follow._subprogram_body_in_subprogram_declarative_item14940);
				subprogram_body241=subprogram_body();
				PopFollow();

				DebugLocation(1772, 36);
				 retval.value = (subprogram_body241!=null?subprogram_body241.value:default(SubprogramBody)); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1773:9: type_declaration
				{
				DebugLocation(1773, 9);
				PushFollow(Follow._type_declaration_in_subprogram_declarative_item14963);
				type_declaration242=type_declaration();
				PopFollow();

				DebugLocation(1773, 36);
				 retval.value = type_declaration242; 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1774:9: subtype_declaration
				{
				DebugLocation(1774, 9);
				PushFollow(Follow._subtype_declaration_in_subprogram_declarative_item14985);
				subtype_declaration243=subtype_declaration();
				PopFollow();

				DebugLocation(1774, 36);
				 retval.value = (subtype_declaration243!=null?subtype_declaration243.value:default(Subtype)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1775:9: constant_declaration
				{
				DebugLocation(1775, 9);
				PushFollow(Follow._constant_declaration_in_subprogram_declarative_item15004);
				constant_declaration244=constant_declaration();
				PopFollow();

				DebugLocation(1775, 36);
				 retval.value = (constant_declaration244!=null?constant_declaration244.value:default(ConstantDeclaration)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1776:9: variable_declaration
				{
				DebugLocation(1776, 9);
				PushFollow(Follow._variable_declaration_in_subprogram_declarative_item15022);
				variable_declaration245=variable_declaration();
				PopFollow();

				DebugLocation(1776, 36);
				 retval.value = (variable_declaration245!=null?variable_declaration245.value:default(VariableDeclaration)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1777:9: file_declaration
				{
				DebugLocation(1777, 9);
				PushFollow(Follow._file_declaration_in_subprogram_declarative_item15040);
				file_declaration246=file_declaration();
				PopFollow();

				DebugLocation(1777, 36);
				 retval.value = (file_declaration246!=null?file_declaration246.value:default(FileDeclaration)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1778:9: alias_declaration
				{
				DebugLocation(1778, 9);
				PushFollow(Follow._alias_declaration_in_subprogram_declarative_item15062);
				alias_declaration247=alias_declaration();
				PopFollow();

				DebugLocation(1778, 36);
				 retval.value = (alias_declaration247!=null?alias_declaration247.value:default(Alias)); 

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1779:9: attribute_specification
				{
				DebugLocation(1779, 9);
				PushFollow(Follow._attribute_specification_in_subprogram_declarative_item15083);
				attribute_specification248=attribute_specification();
				PopFollow();

				DebugLocation(1779, 36);
				 retval.value = (attribute_specification248!=null?attribute_specification248.value:default(VHDL.declaration.AttributeSpecification)); 

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1780:9: attribute_declaration
				{
				DebugLocation(1780, 9);
				PushFollow(Follow._attribute_declaration_in_subprogram_declarative_item15098);
				attribute_declaration249=attribute_declaration();
				PopFollow();

				DebugLocation(1780, 36);
				 retval.value = (attribute_declaration249!=null?attribute_declaration249.value:default(VHDL.declaration.Attribute)); 

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1781:9: use_clause
				{
				DebugLocation(1781, 9);
				PushFollow(Follow._use_clause_in_subprogram_declarative_item15115);
				use_clause250=use_clause();
				PopFollow();

				DebugLocation(1781, 36);
				 retval.value = (use_clause250!=null?use_clause250.value:default(UseClause)); 

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1782:9: group_template_declaration
				{
				DebugLocation(1782, 9);
				PushFollow(Follow._group_template_declaration_in_subprogram_declarative_item15143);
				group_template_declaration251=group_template_declaration();
				PopFollow();

				DebugLocation(1782, 36);
				 retval.value = (group_template_declaration251!=null?group_template_declaration251.value:default(GroupTemplate)); 

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1783:9: group_declaration
				{
				DebugLocation(1783, 9);
				PushFollow(Follow._group_declaration_in_subprogram_declarative_item15155);
				group_declaration252=group_declaration();
				PopFollow();

				DebugLocation(1783, 36);
				 retval.value = (group_declaration252!=null?group_declaration252.value:default(Group)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("subprogram_declarative_item", 133);
			LeaveRule("subprogram_declarative_item", 133);
			LeaveRule_subprogram_declarative_item();
		}
		DebugLocation(1784, 4);
		} finally { DebugExitRule(GrammarFileName, "subprogram_declarative_item"); }
		return retval;

	}
	// $ANTLR end "subprogram_declarative_item"

	partial void EnterRule_subprogram_specification();
	partial void LeaveRule_subprogram_specification();

	// $ANTLR start "subprogram_specification"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1786:1: subprogram_specification returns [SubprogramDeclaration value] : ( ^( PROCEDURE designator (id= interface_declaration )* ) | ^( FUNCTION ( PURE )? ( IMPURE )? designator type_mark= name (id= interface_declaration )* ) );
	[GrammarRule("subprogram_specification")]
	private SubprogramDeclaration subprogram_specification()
	{
		EnterRule_subprogram_specification();
		EnterRule("subprogram_specification", 134);
		TraceIn("subprogram_specification", 134);
		SubprogramDeclaration value = default(SubprogramDeclaration);


		IVhdlObjectProvider id = default(IVhdlObjectProvider);
		MetaClassCreator.name_return type_mark = default(MetaClassCreator.name_return);
		TreeRuleReturnScope<CommonTree> designator253 = default(TreeRuleReturnScope<CommonTree>);
		TreeRuleReturnScope<CommonTree> designator254 = default(TreeRuleReturnScope<CommonTree>);

		 bool impure = false; 
		try { DebugEnterRule(GrammarFileName, "subprogram_specification");
		DebugLocation(1786, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1788:5: ( ^( PROCEDURE designator (id= interface_declaration )* ) | ^( FUNCTION ( PURE )? ( IMPURE )? designator type_mark= name (id= interface_declaration )* ) )
			int alt196=2;
			try { DebugEnterDecision(196, false);
			int LA196_0 = input.LA(1);

			if ((LA196_0==PROCEDURE))
			{
				alt196 = 1;
			}
			else if ((LA196_0==FUNCTION))
			{
				alt196 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 196, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(196); }
			switch (alt196)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1788:9: ^( PROCEDURE designator (id= interface_declaration )* )
				{
				DebugLocation(1788, 9);
				DebugLocation(1788, 12);
				Match(input,PROCEDURE,Follow._PROCEDURE_in_subprogram_specification15196); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1789, 13);
				PushFollow(Follow._designator_in_subprogram_specification15210);
				designator253=designator();
				PopFollow();

				DebugLocation(1789, 24);
				 value = new ProcedureDeclaration((designator253!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(designator253.Start),input.TreeAdaptor.GetTokenStopIndex(designator253.Start))):null)); 
				DebugLocation(1790, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1790:13: (id= interface_declaration )*
				try { DebugEnterSubRule(192);
				while (true)
				{
					int alt192=2;
					try { DebugEnterDecision(192, false);
					int LA192_0 = input.LA(1);

					if (((LA192_0>=INTERFACE_CONSTANT_DECLARATION && LA192_0<=INTERFACE_VARIABLE_DECLARATION)))
					{
						alt192 = 1;
					}


					} finally { DebugExitDecision(192); }
					switch ( alt192 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1790:15: id= interface_declaration
						{
						DebugLocation(1790, 17);
						PushFollow(Follow._interface_declaration_in_subprogram_specification15230);
						id=interface_declaration();
						PopFollow();

						DebugLocation(1790, 40);
						 value.Parameters.Add(id); 

						}
						break;

					default:
						goto loop192;
					}
				}

				loop192:
					;

				} finally { DebugExitSubRule(192); }


				Match(input, TokenTypes.Up, null); 


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1792:9: ^( FUNCTION ( PURE )? ( IMPURE )? designator type_mark= name (id= interface_declaration )* )
				{
				DebugLocation(1792, 9);
				DebugLocation(1792, 12);
				Match(input,FUNCTION,Follow._FUNCTION_in_subprogram_specification15257); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1793, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1793:13: ( PURE )?
				int alt193=2;
				try { DebugEnterSubRule(193);
				try { DebugEnterDecision(193, false);
				int LA193_0 = input.LA(1);

				if ((LA193_0==PURE))
				{
					alt193 = 1;
				}
				} finally { DebugExitDecision(193); }
				switch (alt193)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1793:13: PURE
					{
					DebugLocation(1793, 13);
					Match(input,PURE,Follow._PURE_in_subprogram_specification15271); 

					}
					break;

				}
				} finally { DebugExitSubRule(193); }

				DebugLocation(1793, 19);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1793:19: ( IMPURE )?
				int alt194=2;
				try { DebugEnterSubRule(194);
				try { DebugEnterDecision(194, false);
				int LA194_0 = input.LA(1);

				if ((LA194_0==IMPURE))
				{
					alt194 = 1;
				}
				} finally { DebugExitDecision(194); }
				switch (alt194)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1793:21: IMPURE
					{
					DebugLocation(1793, 21);
					Match(input,IMPURE,Follow._IMPURE_in_subprogram_specification15276); 
					DebugLocation(1793, 28);
					 impure = true; 

					}
					break;

				}
				} finally { DebugExitSubRule(194); }

				DebugLocation(1793, 50);
				PushFollow(Follow._designator_in_subprogram_specification15283);
				designator254=designator();
				PopFollow();

				DebugLocation(1793, 70);
				PushFollow(Follow._name_in_subprogram_specification15287);
				type_mark=name();
				PopFollow();

				DebugLocation(1794, 13);

				                ISubtypeIndication type = (type_mark!=null?type_mark.value:default(TemporaryName)).toTypeMark(currentScope);
				                FunctionDeclaration fd = new FunctionDeclaration((designator254!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(designator254.Start),input.TreeAdaptor.GetTokenStopIndex(designator254.Start))):null), type);
				                fd.Impure = impure;
				                value = fd;
				            
				DebugLocation(1800, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1800:13: (id= interface_declaration )*
				try { DebugEnterSubRule(195);
				while (true)
				{
					int alt195=2;
					try { DebugEnterDecision(195, false);
					int LA195_0 = input.LA(1);

					if (((LA195_0>=INTERFACE_CONSTANT_DECLARATION && LA195_0<=INTERFACE_VARIABLE_DECLARATION)))
					{
						alt195 = 1;
					}


					} finally { DebugExitDecision(195); }
					switch ( alt195 )
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1800:15: id= interface_declaration
						{
						DebugLocation(1800, 17);
						PushFollow(Follow._interface_declaration_in_subprogram_specification15319);
						id=interface_declaration();
						PopFollow();

						DebugLocation(1800, 40);
						 value.Parameters.Add(id); 

						}
						break;

					default:
						goto loop195;
					}
				}

				loop195:
					;

				} finally { DebugExitSubRule(195); }


				Match(input, TokenTypes.Up, null); 


				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("subprogram_specification", 134);
			LeaveRule("subprogram_specification", 134);
			LeaveRule_subprogram_specification();
		}
		DebugLocation(1802, 4);
		} finally { DebugExitRule(GrammarFileName, "subprogram_specification"); }
		return value;

	}
	// $ANTLR end "subprogram_specification"

	private sealed partial class subtype_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public Subtype value;
		public subtype_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_subtype_declaration();
	partial void LeaveRule_subtype_declaration();

	// $ANTLR start "subtype_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1804:1: subtype_declaration returns [Subtype value] : ^( SUBTYPE identifier subtype_indication ) ;
	[GrammarRule("subtype_declaration")]
	private MetaClassCreator.subtype_declaration_return subtype_declaration()
	{
		EnterRule_subtype_declaration();
		EnterRule("subtype_declaration", 135);
		TraceIn("subtype_declaration", 135);
		MetaClassCreator.subtype_declaration_return retval = new MetaClassCreator.subtype_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		TreeRuleReturnScope<CommonTree> identifier255 = default(TreeRuleReturnScope<CommonTree>);
		ISubtypeIndication subtype_indication256 = default(ISubtypeIndication);

		try { DebugEnterRule(GrammarFileName, "subtype_declaration");
		DebugLocation(1804, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1806:5: ( ^( SUBTYPE identifier subtype_indication ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1806:9: ^( SUBTYPE identifier subtype_indication )
			{
			DebugLocation(1806, 9);
			DebugLocation(1806, 12);
			Match(input,SUBTYPE,Follow._SUBTYPE_in_subtype_declaration15364); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1806, 20);
			PushFollow(Follow._identifier_in_subtype_declaration15366);
			identifier255=identifier();
			PopFollow();

			DebugLocation(1806, 31);
			PushFollow(Follow._subtype_indication_in_subtype_declaration15368);
			subtype_indication256=subtype_indication();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1807, 9);
			 retval.value = new Subtype((identifier255!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier255.Start),input.TreeAdaptor.GetTokenStopIndex(identifier255.Start))):null), subtype_indication256); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("subtype_declaration", 135);
			LeaveRule("subtype_declaration", 135);
			LeaveRule_subtype_declaration();
		}
		DebugLocation(1808, 4);
		} finally { DebugExitRule(GrammarFileName, "subtype_declaration"); }
		return retval;

	}
	// $ANTLR end "subtype_declaration"

	partial void EnterRule_subtype_indication();
	partial void LeaveRule_subtype_indication();

	// $ANTLR start "subtype_indication"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1812:1: subtype_indication returns [ISubtypeIndication value] : ^( SUBTYPE_INDICATION type_mark= name (resolution_function= name )? ( range_constraint | index_constraint )? ) ;
	[GrammarRule("subtype_indication")]
	private ISubtypeIndication subtype_indication()
	{
		EnterRule_subtype_indication();
		EnterRule("subtype_indication", 136);
		TraceIn("subtype_indication", 136);
		ISubtypeIndication value = default(ISubtypeIndication);


		MetaClassCreator.name_return type_mark = default(MetaClassCreator.name_return);
		MetaClassCreator.name_return resolution_function = default(MetaClassCreator.name_return);
		RangeProvider range_constraint257 = default(RangeProvider);
		List<DiscreteRange> index_constraint258 = default(List<DiscreteRange>);

		try { DebugEnterRule(GrammarFileName, "subtype_indication");
		DebugLocation(1812, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1813:5: ( ^( SUBTYPE_INDICATION type_mark= name (resolution_function= name )? ( range_constraint | index_constraint )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1813:9: ^( SUBTYPE_INDICATION type_mark= name (resolution_function= name )? ( range_constraint | index_constraint )? )
			{
			DebugLocation(1813, 9);
			DebugLocation(1813, 12);
			Match(input,SUBTYPE_INDICATION,Follow._SUBTYPE_INDICATION_in_subtype_indication15407); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1814, 22);
			PushFollow(Follow._name_in_subtype_indication15423);
			type_mark=name();
			PopFollow();

			DebugLocation(1814, 28);
			 value = (type_mark!=null?type_mark.value:default(TemporaryName)).toTypeMark(currentScope); 
			DebugLocation(1815, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1815:13: (resolution_function= name )?
			int alt197=2;
			try { DebugEnterSubRule(197);
			try { DebugEnterDecision(197, false);
			int LA197_0 = input.LA(1);

			if ((LA197_0==NAME))
			{
				alt197 = 1;
			}
			} finally { DebugExitDecision(197); }
			switch (alt197)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1816:17: resolution_function= name
				{
				DebugLocation(1816, 36);
				PushFollow(Follow._name_in_subtype_indication15459);
				resolution_function=name();
				PopFollow();

				DebugLocation(1817, 17);
				 value = new ResolvedSubtypeIndication((resolution_function!=null?resolution_function.value:default(TemporaryName)).toFunction(currentScope), value); 

				}
				break;

			}
			} finally { DebugExitSubRule(197); }

			DebugLocation(1819, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1819:13: ( range_constraint | index_constraint )?
			int alt198=3;
			try { DebugEnterSubRule(198);
			try { DebugEnterDecision(198, false);
			int LA198_0 = input.LA(1);

			if ((LA198_0==RANGETOK))
			{
				alt198 = 1;
			}
			else if ((LA198_0==INDEX_CONSTRAINT))
			{
				alt198 = 2;
			}
			} finally { DebugExitDecision(198); }
			switch (alt198)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1820:21: range_constraint
				{
				DebugLocation(1820, 21);
				PushFollow(Follow._range_constraint_in_subtype_indication15528);
				range_constraint257=range_constraint();
				PopFollow();

				DebugLocation(1821, 21);
				 value = new RangeSubtypeIndication(value, range_constraint257); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1822:21: index_constraint
				{
				DebugLocation(1822, 21);
				PushFollow(Follow._index_constraint_in_subtype_indication15572);
				index_constraint258=index_constraint();
				PopFollow();

				DebugLocation(1823, 21);
				 value = new IndexSubtypeIndication(value, index_constraint258); 

				}
				break;

			}
			} finally { DebugExitSubRule(198); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("subtype_indication", 136);
			LeaveRule("subtype_indication", 136);
			LeaveRule_subtype_indication();
		}
		DebugLocation(1826, 4);
		} finally { DebugExitRule(GrammarFileName, "subtype_indication"); }
		return value;

	}
	// $ANTLR end "subtype_indication"

	partial void EnterRule_suffix();
	partial void LeaveRule_suffix();

	// $ANTLR start "suffix"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1828:1: suffix : ( identifier | CHARACTER_LITERAL | STRING_LITERAL | ALL );
	[GrammarRule("suffix")]
	private TreeRuleReturnScope<CommonTree> suffix()
	{
		EnterRule_suffix();
		EnterRule("suffix", 137);
		TraceIn("suffix", 137);
		TreeRuleReturnScope<CommonTree> retval = new TreeRuleReturnScope<CommonTree>();
		retval.Start = (CommonTree)input.LT(1);

		try { DebugEnterRule(GrammarFileName, "suffix");
		DebugLocation(1828, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1829:5: ( identifier | CHARACTER_LITERAL | STRING_LITERAL | ALL )
			int alt199=4;
			try { DebugEnterDecision(199, false);
			switch (input.LA(1))
			{
			case BASIC_IDENTIFIER:
			case EXTENDED_IDENTIFIER:
				{
				alt199 = 1;
				}
				break;
			case CHARACTER_LITERAL:
				{
				alt199 = 2;
				}
				break;
			case STRING_LITERAL:
				{
				alt199 = 3;
				}
				break;
			case ALL:
				{
				alt199 = 4;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 199, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(199); }
			switch (alt199)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1829:9: identifier
				{
				DebugLocation(1829, 9);
				PushFollow(Follow._identifier_in_suffix15638);
				identifier();
				PopFollow();


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1830:9: CHARACTER_LITERAL
				{
				DebugLocation(1830, 9);
				Match(input,CHARACTER_LITERAL,Follow._CHARACTER_LITERAL_in_suffix15648); 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1831:9: STRING_LITERAL
				{
				DebugLocation(1831, 9);
				Match(input,STRING_LITERAL,Follow._STRING_LITERAL_in_suffix15658); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1832:9: ALL
				{
				DebugLocation(1832, 9);
				Match(input,ALL,Follow._ALL_in_suffix15668); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("suffix", 137);
			LeaveRule("suffix", 137);
			LeaveRule_suffix();
		}
		DebugLocation(1833, 4);
		} finally { DebugExitRule(GrammarFileName, "suffix"); }
		return retval;

	}
	// $ANTLR end "suffix"

	partial void EnterRule_target_signal();
	partial void LeaveRule_target_signal();

	// $ANTLR start "target_signal"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1835:1: target_signal returns [ISignalAssignmentTarget value] : (signal= name | aggregate );
	[GrammarRule("target_signal")]
	private ISignalAssignmentTarget target_signal()
	{
		EnterRule_target_signal();
		EnterRule("target_signal", 138);
		TraceIn("target_signal", 138);
		ISignalAssignmentTarget value = default(ISignalAssignmentTarget);


		MetaClassCreator.name_return signal = default(MetaClassCreator.name_return);
		MetaClassCreator.aggregate_return aggregate259 = default(MetaClassCreator.aggregate_return);

		try { DebugEnterRule(GrammarFileName, "target_signal");
		DebugLocation(1835, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1836:5: (signal= name | aggregate )
			int alt200=2;
			try { DebugEnterDecision(200, false);
			int LA200_0 = input.LA(1);

			if ((LA200_0==NAME))
			{
				alt200 = 1;
			}
			else if ((LA200_0==AGGREGATE))
			{
				alt200 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 200, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(200); }
			switch (alt200)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1836:9: signal= name
				{
				DebugLocation(1836, 15);
				PushFollow(Follow._name_in_target_signal15693);
				signal=name();
				PopFollow();

				DebugLocation(1836, 21);
				 value = (signal!=null?signal.value:default(TemporaryName)).toSignalTarget(currentScope); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1837:9: aggregate
				{
				DebugLocation(1837, 9);
				PushFollow(Follow._aggregate_in_target_signal15705);
				aggregate259=aggregate();
				PopFollow();

				DebugLocation(1837, 19);
				 value = (aggregate259!=null?aggregate259.value:default(Aggregate)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("target_signal", 138);
			LeaveRule("target_signal", 138);
			LeaveRule_target_signal();
		}
		DebugLocation(1838, 4);
		} finally { DebugExitRule(GrammarFileName, "target_signal"); }
		return value;

	}
	// $ANTLR end "target_signal"

	partial void EnterRule_target_variable();
	partial void LeaveRule_target_variable();

	// $ANTLR start "target_variable"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1840:1: target_variable returns [IVariableAssignmentTarget value] : (variable= name | aggregate );
	[GrammarRule("target_variable")]
	private IVariableAssignmentTarget target_variable()
	{
		EnterRule_target_variable();
		EnterRule("target_variable", 139);
		TraceIn("target_variable", 139);
		IVariableAssignmentTarget value = default(IVariableAssignmentTarget);


		MetaClassCreator.name_return variable = default(MetaClassCreator.name_return);
		MetaClassCreator.aggregate_return aggregate260 = default(MetaClassCreator.aggregate_return);

		try { DebugEnterRule(GrammarFileName, "target_variable");
		DebugLocation(1840, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1841:5: (variable= name | aggregate )
			int alt201=2;
			try { DebugEnterDecision(201, false);
			int LA201_0 = input.LA(1);

			if ((LA201_0==NAME))
			{
				alt201 = 1;
			}
			else if ((LA201_0==AGGREGATE))
			{
				alt201 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 201, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(201); }
			switch (alt201)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1841:9: variable= name
				{
				DebugLocation(1841, 17);
				PushFollow(Follow._name_in_target_variable15732);
				variable=name();
				PopFollow();

				DebugLocation(1841, 23);
				 value = (variable!=null?variable.value:default(TemporaryName)).toVariableTarget(currentScope); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1842:9: aggregate
				{
				DebugLocation(1842, 9);
				PushFollow(Follow._aggregate_in_target_variable15744);
				aggregate260=aggregate();
				PopFollow();

				DebugLocation(1842, 19);
				 value = (aggregate260!=null?aggregate260.value:default(Aggregate)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("target_variable", 139);
			LeaveRule("target_variable", 139);
			LeaveRule_target_variable();
		}
		DebugLocation(1843, 4);
		} finally { DebugExitRule(GrammarFileName, "target_variable"); }
		return value;

	}
	// $ANTLR end "target_variable"

	partial void EnterRule_term();
	partial void LeaveRule_term();

	// $ANTLR start "term"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1845:1: term returns [Expression value] : ( ^( multiplying_operator l= term r= term ) | factor );
	[GrammarRule("term")]
	private Expression term()
	{
		EnterRule_term();
		EnterRule("term", 140);
		TraceIn("term", 140);
		Expression value = default(Expression);


		Expression l = default(Expression);
		Expression r = default(Expression);
		ExpressionType multiplying_operator261 = default(ExpressionType);
		Expression factor262 = default(Expression);

		try { DebugEnterRule(GrammarFileName, "term");
		DebugLocation(1845, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1846:5: ( ^( multiplying_operator l= term r= term ) | factor )
			int alt202=2;
			try { DebugEnterDecision(202, false);
			int LA202_0 = input.LA(1);

			if ((LA202_0==DIV||(LA202_0>=MOD && LA202_0<=MUL)||LA202_0==REM))
			{
				alt202 = 1;
			}
			else if ((LA202_0==ABS||LA202_0==AGGREGATE||LA202_0==BINANRY_BASED_INTEGER||(LA202_0>=BIT_STRING_LITERAL_BINARY && LA202_0<=BIT_STRING_LITERAL_OCTAL)||LA202_0==CHARACTER_LITERAL||LA202_0==DEC_BASED_INTEGER||LA202_0==DOUBLESTAR||LA202_0==FLOAT_POINT_LITERAL||LA202_0==HEXA_BASED_INTEGER||LA202_0==NAME||LA202_0==NEW||(LA202_0>=NOT && LA202_0<=OCTAL_BASED_INTEGER)||LA202_0==PHYSICAL_LITERAL||LA202_0==QUALIFIED_EXPRESSION))
			{
				alt202 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 202, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(202); }
			switch (alt202)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1846:9: ^( multiplying_operator l= term r= term )
				{
				DebugLocation(1846, 9);
				DebugLocation(1846, 12);
				PushFollow(Follow._multiplying_operator_in_term15771);
				multiplying_operator261=multiplying_operator();
				PopFollow();


				Match(input, TokenTypes.Down, null); 
				DebugLocation(1846, 34);
				PushFollow(Follow._term_in_term15775);
				l=term();
				PopFollow();

				DebugLocation(1846, 41);
				PushFollow(Follow._term_in_term15779);
				r=term();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1847, 9);
				 value = ExpressionTypeCreator.create(multiplying_operator261, l, r); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1848:9: factor
				{
				DebugLocation(1848, 9);
				PushFollow(Follow._factor_in_term15801);
				factor262=factor();
				PopFollow();

				DebugLocation(1849, 9);
				 value = factor262; 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("term", 140);
			LeaveRule("term", 140);
			LeaveRule_term();
		}
		DebugLocation(1850, 4);
		} finally { DebugExitRule(GrammarFileName, "term"); }
		return value;

	}
	// $ANTLR end "term"

	partial void EnterRule_type_declaration();
	partial void LeaveRule_type_declaration();

	// $ANTLR start "type_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1852:1: type_declaration returns [VHDL.type.Type value] : ( ^( FULL_TYPE_DECLARATION identifier type_definition[$identifier.text] ) | ^( INCOMPLETE_TYPE_DECLARATION identifier ) );
	[GrammarRule("type_declaration")]
	private VHDL.type.Type type_declaration()
	{
		EnterRule_type_declaration();
		EnterRule("type_declaration", 141);
		TraceIn("type_declaration", 141);
		VHDL.type.Type value = default(VHDL.type.Type);


		TreeRuleReturnScope<CommonTree> identifier263 = default(TreeRuleReturnScope<CommonTree>);
		VHDL.type.Type type_definition264 = default(VHDL.type.Type);
		TreeRuleReturnScope<CommonTree> identifier265 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "type_declaration");
		DebugLocation(1852, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1853:5: ( ^( FULL_TYPE_DECLARATION identifier type_definition[$identifier.text] ) | ^( INCOMPLETE_TYPE_DECLARATION identifier ) )
			int alt203=2;
			try { DebugEnterDecision(203, false);
			int LA203_0 = input.LA(1);

			if ((LA203_0==FULL_TYPE_DECLARATION))
			{
				alt203 = 1;
			}
			else if ((LA203_0==INCOMPLETE_TYPE_DECLARATION))
			{
				alt203 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 203, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(203); }
			switch (alt203)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1853:9: ^( FULL_TYPE_DECLARATION identifier type_definition[$identifier.text] )
				{
				DebugLocation(1853, 9);
				DebugLocation(1853, 12);
				Match(input,FULL_TYPE_DECLARATION,Follow._FULL_TYPE_DECLARATION_in_type_declaration15836); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1853, 34);
				PushFollow(Follow._identifier_in_type_declaration15838);
				identifier263=identifier();
				PopFollow();

				DebugLocation(1853, 45);
				PushFollow(Follow._type_definition_in_type_declaration15840);
				type_definition264=type_definition((identifier263!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier263.Start),input.TreeAdaptor.GetTokenStopIndex(identifier263.Start))):null));
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1854, 9);
				 value = type_definition264; 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1855:9: ^( INCOMPLETE_TYPE_DECLARATION identifier )
				{
				DebugLocation(1855, 9);
				DebugLocation(1855, 12);
				Match(input,INCOMPLETE_TYPE_DECLARATION,Follow._INCOMPLETE_TYPE_DECLARATION_in_type_declaration15865); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1855, 40);
				PushFollow(Follow._identifier_in_type_declaration15867);
				identifier265=identifier();
				PopFollow();


				Match(input, TokenTypes.Up, null); 

				DebugLocation(1856, 9);
				 value = new IncompleteType((identifier265!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier265.Start),input.TreeAdaptor.GetTokenStopIndex(identifier265.Start))):null)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("type_declaration", 141);
			LeaveRule("type_declaration", 141);
			LeaveRule_type_declaration();
		}
		DebugLocation(1857, 4);
		} finally { DebugExitRule(GrammarFileName, "type_declaration"); }
		return value;

	}
	// $ANTLR end "type_declaration"

	partial void EnterRule_type_definition();
	partial void LeaveRule_type_definition();

	// $ANTLR start "type_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1859:1: type_definition[String identifier] returns [VHDL.type.Type value] : (ptd= physical_type_definition[$identifier] |etd= enumeration_type_definition[$identifier] |ioftd= integer_or_float_type_definition[$identifier] |uad= unconstrained_array_definition[$identifier] |cas= constrained_array_definition[$identifier] |rtd= record_type_definition[$identifier] |atd= access_type_definition[$identifier] |ftd= file_type_definition[$identifier] );
	[GrammarRule("type_definition")]
	private VHDL.type.Type type_definition(String identifier)
	{
		EnterRule_type_definition();
		EnterRule("type_definition", 142);
		TraceIn("type_definition", 142);
		VHDL.type.Type value = default(VHDL.type.Type);


		MetaClassCreator.physical_type_definition_return ptd = default(MetaClassCreator.physical_type_definition_return);
		EnumerationType etd = default(EnumerationType);
		MetaClassCreator.integer_or_float_type_definition_return ioftd = default(MetaClassCreator.integer_or_float_type_definition_return);
		MetaClassCreator.unconstrained_array_definition_return uad = default(MetaClassCreator.unconstrained_array_definition_return);
		MetaClassCreator.constrained_array_definition_return cas = default(MetaClassCreator.constrained_array_definition_return);
		MetaClassCreator.record_type_definition_return rtd = default(MetaClassCreator.record_type_definition_return);
		MetaClassCreator.access_type_definition_return atd = default(MetaClassCreator.access_type_definition_return);
		MetaClassCreator.file_type_definition_return ftd = default(MetaClassCreator.file_type_definition_return);

		try { DebugEnterRule(GrammarFileName, "type_definition");
		DebugLocation(1859, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1860:5: (ptd= physical_type_definition[$identifier] |etd= enumeration_type_definition[$identifier] |ioftd= integer_or_float_type_definition[$identifier] |uad= unconstrained_array_definition[$identifier] |cas= constrained_array_definition[$identifier] |rtd= record_type_definition[$identifier] |atd= access_type_definition[$identifier] |ftd= file_type_definition[$identifier] )
			int alt204=8;
			try { DebugEnterDecision(204, false);
			switch (input.LA(1))
			{
			case PHYSICAL_TYPE_DEFINITION:
				{
				alt204 = 1;
				}
				break;
			case ENUMERATION_TYPE_DEFINITION:
				{
				alt204 = 2;
				}
				break;
			case INTEGER_OR_FLOAT_TYPE_DEFINITION:
				{
				alt204 = 3;
				}
				break;
			case UNCONSTRAINED_ARRAY_DEFINITION:
				{
				alt204 = 4;
				}
				break;
			case CONSTRAINED_ARRAY_DEFINITION:
				{
				alt204 = 5;
				}
				break;
			case RECORD_TYPE_DEFINITION:
				{
				alt204 = 6;
				}
				break;
			case ACCESS:
				{
				alt204 = 7;
				}
				break;
			case FILE_TYPE_DEFINITION:
				{
				alt204 = 8;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 204, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(204); }
			switch (alt204)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1860:7: ptd= physical_type_definition[$identifier]
				{
				DebugLocation(1860, 10);
				PushFollow(Follow._physical_type_definition_in_type_definition15903);
				ptd=physical_type_definition(identifier);
				PopFollow();

				DebugLocation(1860, 59);
				 value = (ptd!=null?ptd.value:default(PhysicalType)); 

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1861:7: etd= enumeration_type_definition[$identifier]
				{
				DebugLocation(1861, 10);
				PushFollow(Follow._enumeration_type_definition_in_type_definition15926);
				etd=enumeration_type_definition(identifier);
				PopFollow();

				DebugLocation(1861, 59);
				 value = etd; 

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1862:7: ioftd= integer_or_float_type_definition[$identifier]
				{
				DebugLocation(1862, 12);
				PushFollow(Follow._integer_or_float_type_definition_in_type_definition15946);
				ioftd=integer_or_float_type_definition(identifier);
				PopFollow();

				DebugLocation(1862, 59);
				 value = (ioftd!=null?ioftd.value:default(IntegerType)); 

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1863:7: uad= unconstrained_array_definition[$identifier]
				{
				DebugLocation(1863, 10);
				PushFollow(Follow._unconstrained_array_definition_in_type_definition15959);
				uad=unconstrained_array_definition(identifier);
				PopFollow();

				DebugLocation(1863, 59);
				 value = (uad!=null?uad.value:default(UnconstrainedArray)); 

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1864:7: cas= constrained_array_definition[$identifier]
				{
				DebugLocation(1864, 10);
				PushFollow(Follow._constrained_array_definition_in_type_definition15976);
				cas=constrained_array_definition(identifier);
				PopFollow();

				DebugLocation(1864, 59);
				 value = (cas!=null?cas.value:default(ConstrainedArray)); 

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1865:7: rtd= record_type_definition[$identifier]
				{
				DebugLocation(1865, 10);
				PushFollow(Follow._record_type_definition_in_type_definition15995);
				rtd=record_type_definition(identifier);
				PopFollow();

				DebugLocation(1865, 59);
				 value = (rtd!=null?rtd.value:default(RecordType)); 

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1866:7: atd= access_type_definition[$identifier]
				{
				DebugLocation(1866, 10);
				PushFollow(Follow._access_type_definition_in_type_definition16020);
				atd=access_type_definition(identifier);
				PopFollow();

				DebugLocation(1866, 59);
				 value = (atd!=null?atd.value:default(AccessType)); 

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1867:7: ftd= file_type_definition[$identifier]
				{
				DebugLocation(1867, 10);
				PushFollow(Follow._file_type_definition_in_type_definition16045);
				ftd=file_type_definition(identifier);
				PopFollow();

				DebugLocation(1867, 59);
				 value = (ftd!=null?ftd.value:default(FileType)); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("type_definition", 142);
			LeaveRule("type_definition", 142);
			LeaveRule_type_definition();
		}
		DebugLocation(1868, 4);
		} finally { DebugExitRule(GrammarFileName, "type_definition"); }
		return value;

	}
	// $ANTLR end "type_definition"

	private sealed partial class unconstrained_array_definition_return : TreeRuleReturnScope<CommonTree>
	{
		public UnconstrainedArray value;
		public unconstrained_array_definition_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_unconstrained_array_definition();
	partial void LeaveRule_unconstrained_array_definition();

	// $ANTLR start "unconstrained_array_definition"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1870:1: unconstrained_array_definition[string ident] returns [UnconstrainedArray value] : ^( UNCONSTRAINED_ARRAY_DEFINITION (index_subtype= name )+ element_type= subtype_indication ) ;
	[GrammarRule("unconstrained_array_definition")]
	private MetaClassCreator.unconstrained_array_definition_return unconstrained_array_definition(string ident)
	{
		EnterRule_unconstrained_array_definition();
		EnterRule("unconstrained_array_definition", 143);
		TraceIn("unconstrained_array_definition", 143);
		MetaClassCreator.unconstrained_array_definition_return retval = new MetaClassCreator.unconstrained_array_definition_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return index_subtype = default(MetaClassCreator.name_return);
		ISubtypeIndication element_type = default(ISubtypeIndication);

		 List<ISubtypeIndication> indexSubtypes = new List<ISubtypeIndication>(); 
		try { DebugEnterRule(GrammarFileName, "unconstrained_array_definition");
		DebugLocation(1870, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1873:5: ( ^( UNCONSTRAINED_ARRAY_DEFINITION (index_subtype= name )+ element_type= subtype_indication ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1873:9: ^( UNCONSTRAINED_ARRAY_DEFINITION (index_subtype= name )+ element_type= subtype_indication )
			{
			DebugLocation(1873, 9);
			DebugLocation(1873, 12);
			Match(input,UNCONSTRAINED_ARRAY_DEFINITION,Follow._UNCONSTRAINED_ARRAY_DEFINITION_in_unconstrained_array_definition16098); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1874, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1874:13: (index_subtype= name )+
			int cnt205=0;
			try { DebugEnterSubRule(205);
			while (true)
			{
				int alt205=2;
				try { DebugEnterDecision(205, false);
				int LA205_0 = input.LA(1);

				if ((LA205_0==NAME))
				{
					alt205 = 1;
				}


				} finally { DebugExitDecision(205); }
				switch (alt205)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1874:15: index_subtype= name
					{
					DebugLocation(1874, 28);
					PushFollow(Follow._name_in_unconstrained_array_definition16116);
					index_subtype=name();
					PopFollow();

					DebugLocation(1874, 34);
					 indexSubtypes.Add((index_subtype!=null?index_subtype.value:default(TemporaryName)).toTypeMark(currentScope)); 

					}
					break;

				default:
					if (cnt205 >= 1)
						goto loop205;

					EarlyExitException eee205 = new EarlyExitException( 205, input );
					DebugRecognitionException(eee205);
					throw eee205;
				}
				cnt205++;
			}
			loop205:
				;

			} finally { DebugExitSubRule(205); }

			DebugLocation(1875, 25);
			PushFollow(Follow._subtype_indication_in_unconstrained_array_definition16137);
			element_type=subtype_indication();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1877, 9);
			 retval.value = new UnconstrainedArray(ident, element_type, indexSubtypes); 

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("unconstrained_array_definition", 143);
			LeaveRule("unconstrained_array_definition", 143);
			LeaveRule_unconstrained_array_definition();
		}
		DebugLocation(1878, 4);
		} finally { DebugExitRule(GrammarFileName, "unconstrained_array_definition"); }
		return retval;

	}
	// $ANTLR end "unconstrained_array_definition"

	private sealed partial class use_clause_return : TreeRuleReturnScope<CommonTree>
	{
		public UseClause value;
		public use_clause_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_use_clause();
	partial void LeaveRule_use_clause();

	// $ANTLR start "use_clause"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1881:1: use_clause returns [UseClause value] : ^( USE (selected_name= name )+ ) ;
	[GrammarRule("use_clause")]
	private MetaClassCreator.use_clause_return use_clause()
	{
		EnterRule_use_clause();
		EnterRule("use_clause", 144);
		TraceIn("use_clause", 144);
		MetaClassCreator.use_clause_return retval = new MetaClassCreator.use_clause_return(this);
		retval.Start = (CommonTree)input.LT(1);

		MetaClassCreator.name_return selected_name = default(MetaClassCreator.name_return);

		 List<string> names = new List<string>(); 
		try { DebugEnterRule(GrammarFileName, "use_clause");
		DebugLocation(1881, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1889:5: ( ^( USE (selected_name= name )+ ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1889:9: ^( USE (selected_name= name )+ )
			{
			DebugLocation(1889, 9);
			DebugLocation(1889, 12);
			Match(input,USE,Follow._USE_in_use_clause16194); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1889, 16);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1889:16: (selected_name= name )+
			int cnt206=0;
			try { DebugEnterSubRule(206);
			while (true)
			{
				int alt206=2;
				try { DebugEnterDecision(206, false);
				int LA206_0 = input.LA(1);

				if ((LA206_0==NAME))
				{
					alt206 = 1;
				}


				} finally { DebugExitDecision(206); }
				switch (alt206)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1889:18: selected_name= name
					{
					DebugLocation(1889, 31);
					PushFollow(Follow._name_in_use_clause16200);
					selected_name=name();
					PopFollow();

					DebugLocation(1889, 37);
					 names.Add((selected_name!=null?selected_name.value:default(TemporaryName)).toUseClauseName(currentScope)); 

					}
					break;

				default:
					if (cnt206 >= 1)
						goto loop206;

					EarlyExitException eee206 = new EarlyExitException( 206, input );
					DebugRecognitionException(eee206);
					throw eee206;
				}
				cnt206++;
			}
			loop206:
				;

			} finally { DebugExitSubRule(206); }


			Match(input, TokenTypes.Up, null); 


			}


			    retval.value = new UseClause(names);
			    AddAnnotations(retval.value, retval.Start);
			    CheckUseClause(retval.Start, retval.value);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("use_clause", 144);
			LeaveRule("use_clause", 144);
			LeaveRule_use_clause();
		}
		DebugLocation(1890, 4);
		} finally { DebugExitRule(GrammarFileName, "use_clause"); }
		return retval;

	}
	// $ANTLR end "use_clause"

	private sealed partial class variable_assignment_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public VariableAssignment value;
		public variable_assignment_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_variable_assignment_statement();
	partial void LeaveRule_variable_assignment_statement();

	// $ANTLR start "variable_assignment_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1892:1: variable_assignment_statement[string label] returns [VariableAssignment value] : ^( VARIABLE_ASSIGNMENT_STATEMENT target_variable expression ) ;
	[GrammarRule("variable_assignment_statement")]
	private MetaClassCreator.variable_assignment_statement_return variable_assignment_statement(string label)
	{
		EnterRule_variable_assignment_statement();
		EnterRule("variable_assignment_statement", 145);
		TraceIn("variable_assignment_statement", 145);
		MetaClassCreator.variable_assignment_statement_return retval = new MetaClassCreator.variable_assignment_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		IVariableAssignmentTarget target_variable266 = default(IVariableAssignmentTarget);
		MetaClassCreator.expression_return expression267 = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "variable_assignment_statement");
		DebugLocation(1892, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1894:5: ( ^( VARIABLE_ASSIGNMENT_STATEMENT target_variable expression ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1894:9: ^( VARIABLE_ASSIGNMENT_STATEMENT target_variable expression )
			{
			DebugLocation(1894, 9);
			DebugLocation(1894, 12);
			Match(input,VARIABLE_ASSIGNMENT_STATEMENT,Follow._VARIABLE_ASSIGNMENT_STATEMENT_in_variable_assignment_statement16238); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1894, 42);
			PushFollow(Follow._target_variable_in_variable_assignment_statement16240);
			target_variable266=target_variable();
			PopFollow();

			DebugLocation(1894, 58);
			PushFollow(Follow._expression_in_variable_assignment_statement16242);
			expression267=expression();
			PopFollow();


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1895, 9);

			            retval.value = new VariableAssignment(target_variable266, (expression267!=null?expression267.value:default(Expression)));
			            retval.value.Label = label;
			        

			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("variable_assignment_statement", 145);
			LeaveRule("variable_assignment_statement", 145);
			LeaveRule_variable_assignment_statement();
		}
		DebugLocation(1899, 4);
		} finally { DebugExitRule(GrammarFileName, "variable_assignment_statement"); }
		return retval;

	}
	// $ANTLR end "variable_assignment_statement"

	private sealed partial class variable_declaration_return : TreeRuleReturnScope<CommonTree>
	{
		public VariableDeclaration value;
		public variable_declaration_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_variable_declaration();
	partial void LeaveRule_variable_declaration();

	// $ANTLR start "variable_declaration"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1901:1: variable_declaration returns [VariableDeclaration value] : ^( VARIABLE ( SHARED )? identifier_list subtype_indication ( expression )? ) ;
	[GrammarRule("variable_declaration")]
	private MetaClassCreator.variable_declaration_return variable_declaration()
	{
		EnterRule_variable_declaration();
		EnterRule("variable_declaration", 146);
		TraceIn("variable_declaration", 146);
		MetaClassCreator.variable_declaration_return retval = new MetaClassCreator.variable_declaration_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<string> identifier_list268 = default(List<string>);
		ISubtypeIndication subtype_indication269 = default(ISubtypeIndication);
		MetaClassCreator.expression_return expression270 = default(MetaClassCreator.expression_return);

		 bool isShared = false; 
		try { DebugEnterRule(GrammarFileName, "variable_declaration");
		DebugLocation(1901, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1908:5: ( ^( VARIABLE ( SHARED )? identifier_list subtype_indication ( expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1908:9: ^( VARIABLE ( SHARED )? identifier_list subtype_indication ( expression )? )
			{
			DebugLocation(1908, 9);
			DebugLocation(1908, 12);
			Match(input,VARIABLE,Follow._VARIABLE_in_variable_declaration16290); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1909, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1909:13: ( SHARED )?
			int alt207=2;
			try { DebugEnterSubRule(207);
			try { DebugEnterDecision(207, false);
			int LA207_0 = input.LA(1);

			if ((LA207_0==SHARED))
			{
				alt207 = 1;
			}
			} finally { DebugExitDecision(207); }
			switch (alt207)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1909:15: SHARED
				{
				DebugLocation(1909, 15);
				Match(input,SHARED,Follow._SHARED_in_variable_declaration16306); 
				DebugLocation(1909, 22);
				 isShared = true; 

				}
				break;

			}
			} finally { DebugExitSubRule(207); }

			DebugLocation(1910, 13);
			PushFollow(Follow._identifier_list_in_variable_declaration16325);
			identifier_list268=identifier_list();
			PopFollow();

			DebugLocation(1910, 29);
			PushFollow(Follow._subtype_indication_in_variable_declaration16327);
			subtype_indication269=subtype_indication();
			PopFollow();

			DebugLocation(1910, 48);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1910:48: ( expression )?
			int alt208=2;
			try { DebugEnterSubRule(208);
			try { DebugEnterDecision(208, false);
			int LA208_0 = input.LA(1);

			if ((LA208_0==EXPRESSION))
			{
				alt208 = 1;
			}
			} finally { DebugExitDecision(208); }
			switch (alt208)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1910:48: expression
				{
				DebugLocation(1910, 48);
				PushFollow(Follow._expression_in_variable_declaration16329);
				expression270=expression();
				PopFollow();


				}
				break;

			}
			} finally { DebugExitSubRule(208); }


			Match(input, TokenTypes.Up, null); 

			DebugLocation(1912, 9);

			            List<Variable> variables = new List<Variable>();
			            foreach (string identifier in identifier_list268) {
			                Variable v = new Variable(identifier, subtype_indication269, (expression270!=null?expression270.value:default(Expression)));
			                v.Shared = isShared;
			                variables.Add(v);
			            }
			            retval.value = new VariableDeclaration(variables);
			        

			}


				AddAnnotations(retval.value, retval.Start);
				retval.value.Parent = currentScope;

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("variable_declaration", 146);
			LeaveRule("variable_declaration", 146);
			LeaveRule_variable_declaration();
		}
		DebugLocation(1921, 4);
		} finally { DebugExitRule(GrammarFileName, "variable_declaration"); }
		return retval;

	}
	// $ANTLR end "variable_declaration"

	private sealed partial class wait_statement_return : TreeRuleReturnScope<CommonTree>
	{
		public WaitStatement value = new WaitStatement();
		public wait_statement_return(MetaClassCreator grammar) {OnCreated(grammar);}
		partial void OnCreated(MetaClassCreator grammar);
	}

	partial void EnterRule_wait_statement();
	partial void LeaveRule_wait_statement();

	// $ANTLR start "wait_statement"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1923:1: wait_statement[string label] returns [WaitStatement value = new WaitStatement()] : ^( WAIT ( ^( ON sl= sensitivity_list ) )? ( ^( UNTIL condition= expression ) )? ( ^( FOR timeout= expression ) )? ) ;
	[GrammarRule("wait_statement")]
	private MetaClassCreator.wait_statement_return wait_statement(string label)
	{
		EnterRule_wait_statement();
		EnterRule("wait_statement", 147);
		TraceIn("wait_statement", 147);
		MetaClassCreator.wait_statement_return retval = new MetaClassCreator.wait_statement_return(this);
		retval.Start = (CommonTree)input.LT(1);

		List<Signal> sl = default(List<Signal>);
		MetaClassCreator.expression_return condition = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return timeout = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "wait_statement");
		DebugLocation(1923, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1925:5: ( ^( WAIT ( ^( ON sl= sensitivity_list ) )? ( ^( UNTIL condition= expression ) )? ( ^( FOR timeout= expression ) )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1925:9: ^( WAIT ( ^( ON sl= sensitivity_list ) )? ( ^( UNTIL condition= expression ) )? ( ^( FOR timeout= expression ) )? )
			{
			DebugLocation(1925, 9);
			DebugLocation(1925, 12);
			Match(input,WAIT,Follow._WAIT_in_wait_statement16381); 

			DebugLocation(1926, 13);
			 retval.value.Label = label; 

			if (input.LA(1) == TokenTypes.Down)
			{
				Match(input, TokenTypes.Down, null); 
				DebugLocation(1927, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1927:13: ( ^( ON sl= sensitivity_list ) )?
				int alt209=2;
				try { DebugEnterSubRule(209);
				try { DebugEnterDecision(209, false);
				int LA209_0 = input.LA(1);

				if ((LA209_0==ON))
				{
					alt209 = 1;
				}
				} finally { DebugExitDecision(209); }
				switch (alt209)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1927:15: ^( ON sl= sensitivity_list )
					{
					DebugLocation(1927, 15);
					DebugLocation(1927, 17);
					Match(input,ON,Follow._ON_in_wait_statement16412); 

					Match(input, TokenTypes.Down, null); 
					DebugLocation(1927, 22);
					PushFollow(Follow._sensitivity_list_in_wait_statement16416);
					sl=sensitivity_list();
					PopFollow();


					Match(input, TokenTypes.Up, null); 

					DebugLocation(1927, 41);
					 AddRange(retval.value.SensitivityList, sl); 

					}
					break;

				}
				} finally { DebugExitSubRule(209); }

				DebugLocation(1928, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1928:13: ( ^( UNTIL condition= expression ) )?
				int alt210=2;
				try { DebugEnterSubRule(210);
				try { DebugEnterDecision(210, false);
				int LA210_0 = input.LA(1);

				if ((LA210_0==UNTIL))
				{
					alt210 = 1;
				}
				} finally { DebugExitDecision(210); }
				switch (alt210)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1928:15: ^( UNTIL condition= expression )
					{
					DebugLocation(1928, 15);
					DebugLocation(1928, 17);
					Match(input,UNTIL,Follow._UNTIL_in_wait_statement16439); 

					Match(input, TokenTypes.Down, null); 
					DebugLocation(1928, 32);
					PushFollow(Follow._expression_in_wait_statement16443);
					condition=expression();
					PopFollow();


					Match(input, TokenTypes.Up, null); 

					DebugLocation(1928, 45);
					 retval.value.Condition = (condition!=null?condition.value:default(Expression)); 

					}
					break;

				}
				} finally { DebugExitSubRule(210); }

				DebugLocation(1929, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1929:13: ( ^( FOR timeout= expression ) )?
				int alt211=2;
				try { DebugEnterSubRule(211);
				try { DebugEnterDecision(211, false);
				int LA211_0 = input.LA(1);

				if ((LA211_0==FOR))
				{
					alt211 = 1;
				}
				} finally { DebugExitDecision(211); }
				switch (alt211)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1929:15: ^( FOR timeout= expression )
					{
					DebugLocation(1929, 15);
					DebugLocation(1929, 17);
					Match(input,FOR,Follow._FOR_in_wait_statement16466); 

					Match(input, TokenTypes.Down, null); 
					DebugLocation(1929, 28);
					PushFollow(Follow._expression_in_wait_statement16470);
					timeout=expression();
					PopFollow();


					Match(input, TokenTypes.Up, null); 

					DebugLocation(1929, 41);
					 retval.value.Timeout = (timeout!=null?timeout.value:default(Expression)); 

					}
					break;

				}
				} finally { DebugExitSubRule(211); }


				Match(input, TokenTypes.Up, null); 
			}


			}

			 AddAnnotations(retval.value, retval.Start); 
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("wait_statement", 147);
			LeaveRule("wait_statement", 147);
			LeaveRule_wait_statement();
		}
		DebugLocation(1931, 4);
		} finally { DebugExitRule(GrammarFileName, "wait_statement"); }
		return retval;

	}
	// $ANTLR end "wait_statement"

	partial void EnterRule_waveform();
	partial void LeaveRule_waveform();

	// $ANTLR start "waveform"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1933:1: waveform returns [List<WaveformElement> value = new List<WaveformElement>()] : ( ^( WAVEFORM ( waveform_element )+ ) | UNAFFECTED );
	[GrammarRule("waveform")]
	private List<WaveformElement> waveform()
	{
		EnterRule_waveform();
		EnterRule("waveform", 148);
		TraceIn("waveform", 148);
		List<WaveformElement> value =  new List<WaveformElement>();


		WaveformElement waveform_element271 = default(WaveformElement);

		try { DebugEnterRule(GrammarFileName, "waveform");
		DebugLocation(1933, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1934:5: ( ^( WAVEFORM ( waveform_element )+ ) | UNAFFECTED )
			int alt213=2;
			try { DebugEnterDecision(213, false);
			int LA213_0 = input.LA(1);

			if ((LA213_0==WAVEFORM))
			{
				alt213 = 1;
			}
			else if ((LA213_0==UNAFFECTED))
			{
				alt213 = 2;
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 213, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(213); }
			switch (alt213)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1934:9: ^( WAVEFORM ( waveform_element )+ )
				{
				DebugLocation(1934, 9);
				DebugLocation(1934, 12);
				Match(input,WAVEFORM,Follow._WAVEFORM_in_waveform16511); 

				Match(input, TokenTypes.Down, null); 
				DebugLocation(1935, 13);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1935:13: ( waveform_element )+
				int cnt212=0;
				try { DebugEnterSubRule(212);
				while (true)
				{
					int alt212=2;
					try { DebugEnterDecision(212, false);
					int LA212_0 = input.LA(1);

					if ((LA212_0==WAVEFORM_ELEMENT))
					{
						alt212 = 1;
					}


					} finally { DebugExitDecision(212); }
					switch (alt212)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1935:15: waveform_element
						{
						DebugLocation(1935, 15);
						PushFollow(Follow._waveform_element_in_waveform16527);
						waveform_element271=waveform_element();
						PopFollow();

						DebugLocation(1935, 32);
						 value.Add(waveform_element271); 

						}
						break;

					default:
						if (cnt212 >= 1)
							goto loop212;

						EarlyExitException eee212 = new EarlyExitException( 212, input );
						DebugRecognitionException(eee212);
						throw eee212;
					}
					cnt212++;
				}
				loop212:
					;

				} finally { DebugExitSubRule(212); }


				Match(input, TokenTypes.Up, null); 


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1937:9: UNAFFECTED
				{
				DebugLocation(1937, 9);
				Match(input,UNAFFECTED,Follow._UNAFFECTED_in_waveform16552); 

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("waveform", 148);
			LeaveRule("waveform", 148);
			LeaveRule_waveform();
		}
		DebugLocation(1938, 4);
		} finally { DebugExitRule(GrammarFileName, "waveform"); }
		return value;

	}
	// $ANTLR end "waveform"

	partial void EnterRule_waveform_element();
	partial void LeaveRule_waveform_element();

	// $ANTLR start "waveform_element"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1940:1: waveform_element returns [WaveformElement value] : ^( WAVEFORM_ELEMENT val= expression (after= expression )? ) ;
	[GrammarRule("waveform_element")]
	private WaveformElement waveform_element()
	{
		EnterRule_waveform_element();
		EnterRule("waveform_element", 149);
		TraceIn("waveform_element", 149);
		WaveformElement value = default(WaveformElement);


		MetaClassCreator.expression_return val = default(MetaClassCreator.expression_return);
		MetaClassCreator.expression_return after = default(MetaClassCreator.expression_return);

		try { DebugEnterRule(GrammarFileName, "waveform_element");
		DebugLocation(1940, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1941:5: ( ^( WAVEFORM_ELEMENT val= expression (after= expression )? ) )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1941:9: ^( WAVEFORM_ELEMENT val= expression (after= expression )? )
			{
			DebugLocation(1941, 9);
			DebugLocation(1941, 12);
			Match(input,WAVEFORM_ELEMENT,Follow._WAVEFORM_ELEMENT_in_waveform_element16578); 

			Match(input, TokenTypes.Down, null); 
			DebugLocation(1942, 16);
			PushFollow(Follow._expression_in_waveform_element16594);
			val=expression();
			PopFollow();

			DebugLocation(1942, 28);
			 value = new WaveformElement((val!=null?val.value:default(Expression))); 
			DebugLocation(1943, 13);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1943:13: (after= expression )?
			int alt214=2;
			try { DebugEnterSubRule(214);
			try { DebugEnterDecision(214, false);
			int LA214_0 = input.LA(1);

			if ((LA214_0==EXPRESSION))
			{
				alt214 = 1;
			}
			} finally { DebugExitDecision(214); }
			switch (alt214)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1943:15: after= expression
				{
				DebugLocation(1943, 20);
				PushFollow(Follow._expression_in_waveform_element16614);
				after=expression();
				PopFollow();

				DebugLocation(1943, 32);
				 value.After = (after!=null?after.value:default(Expression)); 

				}
				break;

			}
			} finally { DebugExitSubRule(214); }


			Match(input, TokenTypes.Up, null); 


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("waveform_element", 149);
			LeaveRule("waveform_element", 149);
			LeaveRule_waveform_element();
		}
		DebugLocation(1945, 4);
		} finally { DebugExitRule(GrammarFileName, "waveform_element"); }
		return value;

	}
	// $ANTLR end "waveform_element"

	partial void EnterRule_loop_label();
	partial void LeaveRule_loop_label();

	// $ANTLR start "loop_label"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1949:1: loop_label returns [LoopStatement value] : identifier ;
	[GrammarRule("loop_label")]
	private LoopStatement loop_label()
	{
		EnterRule_loop_label();
		EnterRule("loop_label", 150);
		TraceIn("loop_label", 150);
		LoopStatement value = default(LoopStatement);


		TreeRuleReturnScope<CommonTree> identifier272 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "loop_label");
		DebugLocation(1949, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1950:5: ( identifier )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1950:9: identifier
			{
			DebugLocation(1950, 9);
			PushFollow(Follow._identifier_in_loop_label16654);
			identifier272=identifier();
			PopFollow();

			DebugLocation(1951, 9);

			            value = resolve<LoopStatement>((identifier272!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier272.Start),input.TreeAdaptor.GetTokenStopIndex(identifier272.Start))):null));
			            if (value == null) {
			                resolveError((identifier272!=null?((CommonTree)identifier272.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_LOOP, (identifier272!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier272.Start),input.TreeAdaptor.GetTokenStopIndex(identifier272.Start))):null));
			                value = new LoopStatement();
			                value.Label = (identifier272!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier272.Start),input.TreeAdaptor.GetTokenStopIndex(identifier272.Start))):null);
			            }
			        

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("loop_label", 150);
			LeaveRule("loop_label", 150);
			LeaveRule_loop_label();
		}
		DebugLocation(1959, 4);
		} finally { DebugExitRule(GrammarFileName, "loop_label"); }
		return value;

	}
	// $ANTLR end "loop_label"

	partial void EnterRule_package_simple_name();
	partial void LeaveRule_package_simple_name();

	// $ANTLR start "package_simple_name"
	// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1961:1: package_simple_name returns [PackageDeclaration value] : identifier ;
	[GrammarRule("package_simple_name")]
	private PackageDeclaration package_simple_name()
	{
		EnterRule_package_simple_name();
		EnterRule("package_simple_name", 151);
		TraceIn("package_simple_name", 151);
		PackageDeclaration value = default(PackageDeclaration);


		TreeRuleReturnScope<CommonTree> identifier273 = default(TreeRuleReturnScope<CommonTree>);

		try { DebugEnterRule(GrammarFileName, "package_simple_name");
		DebugLocation(1961, 4);
		try
		{
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1962:5: ( identifier )
			DebugEnterAlt(1);
			// D:\\CurrentProjects\\Compiler\\VHDL\\vhdl_grammar\\MetaClassCreator.g:1962:9: identifier
			{
			DebugLocation(1962, 9);
			PushFollow(Follow._identifier_in_package_simple_name16687);
			identifier273=identifier();
			PopFollow();

			DebugLocation(1963, 9);

			            value = resolve<PackageDeclaration>((identifier273!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier273.Start),input.TreeAdaptor.GetTokenStopIndex(identifier273.Start))):null));
			            if (value == null) {
			                resolveError((identifier273!=null?((CommonTree)identifier273.Start):default(CommonTree)), ParseError.ParseErrorTypeEnum.UNKNOWN_PACKAGE, (identifier273!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier273.Start),input.TreeAdaptor.GetTokenStopIndex(identifier273.Start))):null));
			                value = new PackageDeclaration((identifier273!=null?(input.TokenStream.ToString(input.TreeAdaptor.GetTokenStartIndex(identifier273.Start),input.TreeAdaptor.GetTokenStopIndex(identifier273.Start))):null));
			            }
			        

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("package_simple_name", 151);
			LeaveRule("package_simple_name", 151);
			LeaveRule_package_simple_name();
		}
		DebugLocation(1970, 4);
		} finally { DebugExitRule(GrammarFileName, "package_simple_name"); }
		return value;

	}
	// $ANTLR end "package_simple_name"
	#endregion Rules


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _DEC_BASED_INTEGER_in_abstract_literal103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BINANRY_BASED_INTEGER_in_abstract_literal114 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OCTAL_BASED_INTEGER_in_abstract_literal126 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _HEXA_BASED_INTEGER_in_abstract_literal138 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ACCESS_in_access_type_definition181 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _subtype_indication_in_access_type_definition183 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _PLUS_in_adding_operator218 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_adding_operator235 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _AMPERSAND_in_adding_operator251 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _AGGREGATE_in_aggregate288 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _choices_in_aggregate340 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_aggregate381 = new BitSet(new ulong[]{0x10000000008UL,0x200UL});
		public static readonly BitSet _ALIAS_in_alias_declaration455 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _alias_designator_in_alias_declaration469 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_alias_declaration471 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_alias_declaration474 = new BitSet(new ulong[]{0x8UL,0x0UL,0x4000000000000UL});
		public static readonly BitSet _signature_in_alias_declaration504 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _identifier_in_alias_designator557 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_LITERAL_in_alias_designator567 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STRING_LITERAL_in_alias_designator577 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEW_in_allocator607 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _subtype_indication_in_allocator643 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _qualified_expression_in_allocator687 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _ARCHITECTURE_in_architecture_body770 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_architecture_body784 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_architecture_body788 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006800000UL,0x500UL});
		public static readonly BitSet _block_declarative_item_in_architecture_body820 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006800000UL,0x500UL});
		public static readonly BitSet _concurrent_statement_in_architecture_body857 = new BitSet(new ulong[]{0x1000001010008UL,0x80000000400UL,0x80006800000UL});
		public static readonly BitSet _end_identifier_in_architecture_body883 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _ASSERT_in_assertion_statement939 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_assertion_statement955 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000000UL});
		public static readonly BitSet _REPORT_in_assertion_statement996 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_assertion_statement1000 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _SEVERITY_in_assertion_statement1023 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_assertion_statement1027 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _name_in_association_element1073 = new BitSet(new ulong[]{0x0UL,0x200UL,0x800UL});
		public static readonly BitSet _expression_in_association_element1103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPEN_in_association_element1123 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_association_element1160 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPEN_in_association_element1172 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSOCIATION_LIST_in_association_list1212 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _association_element_in_association_list1231 = new BitSet(new ulong[]{0x8UL,0x800000000000200UL,0x800UL});
		public static readonly BitSet _ATTRIBUTE_DECLARATION_in_attribute_declaration1276 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_attribute_declaration1278 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_attribute_declaration1282 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _identifier_in_attribute_designator1323 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ATTRIBUTE_SPECIFICATION_in_attribute_specification1355 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _attribute_designator_in_attribute_specification1357 = new BitSet(new ulong[]{0x14108001002200UL,0x4040000410C04UL,0x1200800001012000UL,0x422UL});
		public static readonly BitSet _entity_name_list_in_attribute_specification1359 = new BitSet(new ulong[]{0x14100000002000UL,0x4040000410804UL,0x1000800001010000UL,0x422UL});
		public static readonly BitSet _entity_class_in_attribute_specification1361 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_attribute_specification1363 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _BLOCK_CONFIGURATION_in_block_configuration1405 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _block_specification_in_block_configuration1419 = new BitSet(new ulong[]{0x200100000008UL,0x0UL,0x0UL,0x100UL});
		public static readonly BitSet _use_clause_in_block_configuration1439 = new BitSet(new ulong[]{0x200100000008UL,0x0UL,0x0UL,0x100UL});
		public static readonly BitSet _configuration_item_in_block_configuration1462 = new BitSet(new ulong[]{0x200100000008UL});
		public static readonly BitSet _subprogram_declaration_in_block_declarative_item1500 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subprogram_body_in_block_declarative_item1517 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_declaration_in_block_declarative_item1541 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_declaration_in_block_declarative_item1564 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declaration_in_block_declarative_item1584 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signal_declaration_in_block_declarative_item1603 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declaration_in_block_declarative_item1624 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_declaration_in_block_declarative_item1643 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _alias_declaration_in_block_declarative_item1666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _component_declaration_in_block_declarative_item1688 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_specification_in_block_declarative_item1706 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_declaration_in_block_declarative_item1722 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _configuration_specification_in_block_declarative_item1740 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _disconnection_specification_in_block_declarative_item1752 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_block_declarative_item1764 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_template_declaration_in_block_declarative_item1793 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_block_declarative_item1806 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _name_in_block_specification1845 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BLOCK_STATEMENT_in_block_statement1892 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_block_statement1924 = new BitSet(new ulong[]{0x219100001190108UL,0xA0081988C00UL,0x1C00880006E00000UL,0x500UL});
		public static readonly BitSet _IS_in_block_statement1961 = new BitSet(new ulong[]{0x219100001190108UL,0x80081988C00UL,0x1C00880006E00000UL,0x500UL});
		public static readonly BitSet _generic_clause_in_block_statement2012 = new BitSet(new ulong[]{0x219100001190108UL,0x80081908C00UL,0x1C00880006E00000UL,0x500UL});
		public static readonly BitSet _generic_map_aspect_in_block_statement2035 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006E00000UL,0x500UL});
		public static readonly BitSet _port_clause_in_block_statement2058 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006C00000UL,0x500UL});
		public static readonly BitSet _port_map_aspect_in_block_statement2081 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006800000UL,0x500UL});
		public static readonly BitSet _block_declarative_item_in_block_statement2104 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006800000UL,0x500UL});
		public static readonly BitSet _concurrent_statement_in_block_statement2141 = new BitSet(new ulong[]{0x1000001010008UL,0x80000000400UL,0x80006800000UL});
		public static readonly BitSet _end_identifier_in_block_statement2174 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _CASE_in_case_statement2230 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_case_statement2245 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _choices_in_case_statement2293 = new BitSet(new ulong[]{0x14001010008UL,0x8080010000480UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _sequential_statement_in_case_statement2332 = new BitSet(new ulong[]{0x14001010008UL,0x8080010000480UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _end_identifier_in_case_statement2366 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _discrete_range_in_choice2414 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_choice2426 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OTHERS_in_choice2442 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHOICES_in_choices2477 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _choice_in_choices2481 = new BitSet(new ulong[]{0x4400000000000008UL,0x200UL,0x8000000000002000UL});
		public static readonly BitSet _COMPONENT_CONFIGURATION_in_component_configuration2518 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _component_specification_in_component_configuration2532 = new BitSet(new ulong[]{0x4000100000008UL,0x100004UL,0x400800UL});
		public static readonly BitSet _entity_aspect_in_component_configuration2564 = new BitSet(new ulong[]{0x100000008UL,0x100000UL,0x400000UL});
		public static readonly BitSet _generic_map_aspect_in_component_configuration2587 = new BitSet(new ulong[]{0x100000008UL,0x0UL,0x400000UL});
		public static readonly BitSet _port_map_aspect_in_component_configuration2610 = new BitSet(new ulong[]{0x100000008UL});
		public static readonly BitSet _block_configuration_in_component_configuration2633 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _COMPONENT_in_component_declaration2683 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_component_declaration2698 = new BitSet(new ulong[]{0x1000008UL,0x20000080400UL,0x200000UL});
		public static readonly BitSet _IS_in_component_declaration2744 = new BitSet(new ulong[]{0x1000008UL,0x80400UL,0x200000UL});
		public static readonly BitSet _generic_clause_in_component_declaration2795 = new BitSet(new ulong[]{0x1000008UL,0x400UL,0x200000UL});
		public static readonly BitSet _port_clause_in_component_declaration2818 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _end_identifier_in_component_declaration2837 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _COMPONENT_INSTANTIATION_STATEMENT_in_component_instantiation_statement2889 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _instantiated_unit_in_component_instantiation_statement2903 = new BitSet(new ulong[]{0x8UL,0x100000UL,0x400000UL});
		public static readonly BitSet _generic_map_aspect_in_component_instantiation_statement2924 = new BitSet(new ulong[]{0x8UL,0x0UL,0x400000UL});
		public static readonly BitSet _port_map_aspect_in_component_instantiation_statement2947 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INSTANTIATION_LIST_in_component_specification2997 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_component_specification3001 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _name_in_component_specification3020 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OTHERS_in_component_specification3040 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_component_specification3044 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ALL_in_component_specification3064 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_component_specification3068 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_concurrent_assertion_statement3105 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_concurrent_assertion_statement3121 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000000UL});
		public static readonly BitSet _REPORT_in_concurrent_assertion_statement3151 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_concurrent_assertion_statement3155 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _SEVERITY_in_concurrent_assertion_statement3176 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_concurrent_assertion_statement3180 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _PROCEDURE_CALL_in_concurrent_procedure_call_statement3222 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_concurrent_procedure_call_statement3236 = new BitSet(new ulong[]{0x20008UL});
		public static readonly BitSet _association_list_in_concurrent_procedure_call_statement3284 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _CONDITIONAL_SIGNAL_ASSIGNMENT_STATEMENT_in_concurrent_signal_assignment_statement3354 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _conditional_signal_assignment_in_concurrent_signal_assignment_statement3358 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _SELECTED_SIGNAL_ASSIGNMENT_STATEMENT_in_concurrent_signal_assignment_statement3382 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _selected_signal_assignment_in_concurrent_signal_assignment_statement3386 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _target_signal_in_conditional_signal_assignment3428 = new BitSet(new ulong[]{0x2000000000000UL,0x204000000UL,0x0UL,0x1UL});
		public static readonly BitSet _GUARDED_in_conditional_signal_assignment3437 = new BitSet(new ulong[]{0x2000000000000UL,0x200000000UL,0x0UL,0x1UL});
		public static readonly BitSet _delay_mechanism_in_conditional_signal_assignment3447 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _conditional_waveforms_in_conditional_signal_assignment3463 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LABEL_STATEMENT_in_concurrent_statement3503 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_concurrent_statement3505 = new BitSet(new ulong[]{0x1800200010000UL,0x40000UL,0x80006800000UL});
		public static readonly BitSet _concurrent_statement_optional_label_in_concurrent_statement3543 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _concurrent_statement_with_label_in_concurrent_statement3590 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _concurrent_statement_optional_label_in_concurrent_statement3649 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _concurrent_statement_optional_label2_in_concurrent_statement_optional_label3686 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _POSTPONED_in_concurrent_statement_optional_label3709 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _concurrent_statement_optional_label2_in_concurrent_statement_optional_label3713 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _process_statement_in_concurrent_statement_optional_label23752 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _concurrent_procedure_call_statement_in_concurrent_statement_optional_label23790 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _concurrent_assertion_statement_in_concurrent_statement_optional_label23808 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _concurrent_signal_assignment_statement_in_concurrent_statement_optional_label23832 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_statement_in_concurrent_statement_with_label3861 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _component_instantiation_statement_in_concurrent_statement_with_label3895 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _generate_statement_in_concurrent_statement_with_label3910 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CONDITIONAL_WAVEFORMS_in_conditional_waveforms3955 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _waveform_in_conditional_waveforms3989 = new BitSet(new ulong[]{0x8UL,0x200UL,0x0UL,0x2004UL});
		public static readonly BitSet _expression_in_conditional_waveforms4027 = new BitSet(new ulong[]{0x8UL,0x0UL,0x0UL,0x2004UL});
		public static readonly BitSet _CONFIGURATION_in_configuration_declaration4111 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_configuration_declaration4113 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_configuration_declaration4117 = new BitSet(new ulong[]{0x100100000UL,0x800000UL,0x0UL,0x100UL});
		public static readonly BitSet _configuration_declarative_item_in_configuration_declaration4135 = new BitSet(new ulong[]{0x100100000UL,0x800000UL,0x0UL,0x100UL});
		public static readonly BitSet _block_configuration_in_configuration_declaration4170 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _end_identifier_in_configuration_declaration4198 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _use_clause_in_configuration_declarative_item4246 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_specification_in_configuration_declarative_item4271 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_configuration_declarative_item4283 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_configuration_in_configuration_item4314 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _component_configuration_in_configuration_item4330 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CONFIGURATION_SPECIFICATION_in_configuration_specification4362 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _component_specification_in_configuration_specification4379 = new BitSet(new ulong[]{0x4000000000008UL,0x100004UL,0x400800UL});
		public static readonly BitSet _entity_aspect_in_configuration_specification4399 = new BitSet(new ulong[]{0x8UL,0x100000UL,0x400000UL});
		public static readonly BitSet _generic_map_aspect_in_configuration_specification4422 = new BitSet(new ulong[]{0x8UL,0x0UL,0x400000UL});
		public static readonly BitSet _port_map_aspect_in_configuration_specification4445 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _CONSTANT_in_constant_declaration4491 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_list_in_constant_declaration4493 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_constant_declaration4497 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_constant_declaration4501 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _CONSTRAINED_ARRAY_DEFINITION_in_constrained_array_definition4545 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _index_constraint_in_constrained_array_definition4549 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_constrained_array_definition4553 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _library_clause_in_context_item4588 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_context_item4600 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRANSPORT_in_delay_mechanism4634 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INERTIAL_in_delay_mechanism4648 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_delay_mechanism4668 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _context_item_in_design_file4759 = new BitSet(new ulong[]{0x4000000002000UL,0x1000000000004UL,0x30000UL,0x100UL});
		public static readonly BitSet _primary_unit_in_design_file4825 = new BitSet(new ulong[]{0x4000000002000UL,0x1000000000004UL,0x30000UL,0x100UL});
		public static readonly BitSet _secondary_unit_in_design_file4864 = new BitSet(new ulong[]{0x4000000002000UL,0x1000000000004UL,0x30000UL,0x100UL});
		public static readonly BitSet _EOF_in_design_file4949 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_designator4968 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STRING_LITERAL_in_designator4978 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TO_in_direction5001 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOWNTO_in_direction5017 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DISCONNECT_in_disconnection_specification5049 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _signal_list_in_disconnection_specification5053 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_disconnection_specification5057 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_disconnection_specification5061 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _direction_in_discrete_range5098 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_discrete_range5102 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_discrete_range5106 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _DISCRETE_RANGE_in_discrete_range5129 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_discrete_range5145 = new BitSet(new ulong[]{0x8UL,0x100000000UL,0x20000000UL});
		public static readonly BitSet _range_constraint_in_discrete_range5181 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _index_constraint_in_discrete_range5225 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _ENTITY_in_entity_aspect5337 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_entity_aspect5341 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _identifier_in_entity_aspect5345 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _CONFIGURATION_in_entity_aspect5370 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_entity_aspect5374 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _OPEN_in_entity_aspect5396 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENTITY_in_entity_class5429 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ARCHITECTURE_in_entity_class5448 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CONFIGURATION_in_entity_class5461 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PROCEDURE_in_entity_class5473 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FUNCTION_in_entity_class5489 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PACKAGE_in_entity_class5506 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TYPE_in_entity_class5524 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUBTYPE_in_entity_class5545 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CONSTANT_in_entity_class5563 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIGNAL_in_entity_class5580 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _VARIABLE_in_entity_class5599 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _COMPONENT_in_entity_class5616 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LABEL_in_entity_class5632 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LITERAL_in_entity_class5652 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UNITS_in_entity_class5670 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GROUP_in_entity_class5690 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FILE_in_entity_class5710 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENTITY_in_entity_declaration5758 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_entity_declaration5772 = new BitSet(new ulong[]{0x210000001180108UL,0x81888C08UL,0x1C00800000200000UL,0x500UL});
		public static readonly BitSet _generic_clause_in_entity_declaration5804 = new BitSet(new ulong[]{0x210000001180108UL,0x81808C08UL,0x1C00800000200000UL,0x500UL});
		public static readonly BitSet _port_clause_in_entity_declaration5827 = new BitSet(new ulong[]{0x210000001180108UL,0x81808C08UL,0x1C00800000000000UL,0x500UL});
		public static readonly BitSet _entity_declarative_item_in_entity_declaration5850 = new BitSet(new ulong[]{0x210000001180108UL,0x81808C08UL,0x1C00800000000000UL,0x500UL});
		public static readonly BitSet _entity_statement_in_entity_declaration5887 = new BitSet(new ulong[]{0x1000008UL,0x408UL});
		public static readonly BitSet _end_identifier_in_entity_declaration5920 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _subprogram_declaration_in_entity_declarative_item5968 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subprogram_body_in_entity_declarative_item5985 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_declaration_in_entity_declarative_item6009 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_declaration_in_entity_declarative_item6032 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declaration_in_entity_declarative_item6052 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declaration_in_entity_declarative_item6071 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signal_declaration_in_entity_declarative_item6090 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_declaration_in_entity_declarative_item6111 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _alias_declaration_in_entity_declarative_item6134 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_specification_in_entity_declarative_item6156 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_declaration_in_entity_declarative_item6172 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _disconnection_specification_in_entity_declarative_item6190 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_entity_declarative_item6202 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_template_declaration_in_entity_declarative_item6231 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_entity_declarative_item6244 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _entity_tag_in_entity_designator6280 = new BitSet(new ulong[]{0x2UL,0x0UL,0x4000000000000UL});
		public static readonly BitSet _signature_in_entity_designator6282 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _entity_designator_in_entity_name_list6340 = new BitSet(new ulong[]{0x8001000002UL,0x400UL,0x200000000000000UL});
		public static readonly BitSet _OTHERS_in_entity_name_list6363 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ALL_in_entity_name_list6375 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENTITY_STATEMENT_in_entity_statement6412 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_entity_statement6414 = new BitSet(new ulong[]{0x10000UL,0x0UL,0x6800000UL});
		public static readonly BitSet _POSTPONED_in_entity_statement6419 = new BitSet(new ulong[]{0x10000UL,0x0UL,0x6000000UL});
		public static readonly BitSet _concurrent_assertion_statement_in_entity_statement6462 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _process_statement_in_entity_statement6509 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _concurrent_procedure_call_statement_in_entity_statement6556 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _identifier_in_entity_tag6636 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_LITERAL_in_entity_tag6646 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STRING_LITERAL_in_entity_tag6656 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENUMERATION_TYPE_DEFINITION_in_enumeration_type_definition6687 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_enumeration_type_definition6723 = new BitSet(new ulong[]{0x8001000008UL,0x400UL});
		public static readonly BitSet _CHARACTER_LITERAL_in_enumeration_type_definition6759 = new BitSet(new ulong[]{0x8001000008UL,0x400UL});
		public static readonly BitSet _EXIT_in_exit_statement6817 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _loop_label_in_exit_statement6847 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_exit_statement6868 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _EXPRESSION_in_expression6914 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression2_in_expression6916 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _logical_operator_in_expression26947 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression2_in_expression26951 = new BitSet(new ulong[]{0x2880008074000C90UL,0xF4020000A022020UL,0x1980188101411EEUL,0x180000UL});
		public static readonly BitSet _expression2_in_expression26955 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _relation_in_expression26977 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DOUBLESTAR_in_factor7012 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _primary_in_factor7016 = new BitSet(new ulong[]{0x80008074000080UL,0x800000008002000UL,0x10040188UL});
		public static readonly BitSet _primary_in_factor7020 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _ABS_in_factor7036 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _primary_in_factor7038 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _NOT_in_factor7073 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _primary_in_factor7075 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _primary_in_factor7108 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FILE_in_file_declaration7168 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_list_in_file_declaration7170 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_file_declaration7174 = new BitSet(new ulong[]{0x8UL,0x200UL,0x800UL});
		public static readonly BitSet _OPEN_in_file_declaration7192 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_file_declaration7196 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _expression_in_file_declaration7204 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _FILE_TYPE_DEFINITION_in_file_type_definition7260 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_file_type_definition7264 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _GENERATE_in_generate_statement7313 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _generation_scheme_in_generate_statement7327 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006800000UL,0x500UL});
		public static readonly BitSet _block_declarative_item_in_generate_statement7360 = new BitSet(new ulong[]{0x219100001190108UL,0x80081808C00UL,0x1C00880006800000UL,0x500UL});
		public static readonly BitSet _concurrent_statement_in_generate_statement7397 = new BitSet(new ulong[]{0x1000001010008UL,0x80000000400UL,0x80006800000UL});
		public static readonly BitSet _end_identifier_in_generate_statement7430 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _FOR_in_generation_scheme7479 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_in_generation_scheme7481 = new BitSet(new ulong[]{0x4400000000000000UL,0x0UL,0x8000000000000000UL});
		public static readonly BitSet _discrete_range_in_generation_scheme7483 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IF_in_generation_scheme7503 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_generation_scheme7505 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GENERIC_in_generic_clause7545 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _interface_constant_declaration_in_generic_clause7563 = new BitSet(new ulong[]{0x8UL,0x2000000000UL});
		public static readonly BitSet _GENERIC_MAP_in_generic_map_aspect7617 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _association_list_in_generic_map_aspect7619 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _name_in_group_constituent7642 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_LITERAL_in_group_constituent7652 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GROUP_DECLARATION_in_group_declaration7685 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_group_declaration7699 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_group_declaration7703 = new BitSet(new ulong[]{0x8000000000UL,0x800000000000000UL});
		public static readonly BitSet _group_constituent_in_group_declaration7735 = new BitSet(new ulong[]{0x8000000008UL,0x800000000000000UL});
		public static readonly BitSet _GROUP_TEMPLATE_DECLARATION_in_group_template_declaration7780 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_group_template_declaration7794 = new BitSet(new ulong[]{0x14100000002000UL,0x4040000410804UL,0x1000800001010000UL,0x422UL});
		public static readonly BitSet _entity_class_in_group_template_declaration7830 = new BitSet(new ulong[]{0x14100800002008UL,0x4040000410804UL,0x1000800001010000UL,0x422UL});
		public static readonly BitSet _BOX_in_group_template_declaration7852 = new BitSet(new ulong[]{0x14100000002008UL,0x4040000410804UL,0x1000800001010000UL,0x422UL});
		public static readonly BitSet _identifier_in_identifier_list7936 = new BitSet(new ulong[]{0x1000002UL,0x400UL});
		public static readonly BitSet _identifier_in_end_identifier7955 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IF_in_if_statement7981 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_if_statement7997 = new BitSet(new ulong[]{0x8000004001010008UL,0x8080010000481UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _sequential_statement_in_if_statement8029 = new BitSet(new ulong[]{0x8000004001010008UL,0x8080010000481UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _ELSIF_in_if_statement8082 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_if_statement8106 = new BitSet(new ulong[]{0x4000010008UL,0x8080010000080UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _sequential_statement_in_if_statement8154 = new BitSet(new ulong[]{0x4000010008UL,0x8080010000080UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _ELSE_in_if_statement8248 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _sequential_statement_in_if_statement8274 = new BitSet(new ulong[]{0x4000010008UL,0x8080010000080UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _end_identifier_in_if_statement8348 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INDEX_CONSTRAINT_in_index_constraint8398 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _discrete_range_in_index_constraint8402 = new BitSet(new ulong[]{0x4400000000000008UL,0x0UL,0x8000000000000000UL});
		public static readonly BitSet _COMPONENT_INSTANCE_in_instantiated_unit8440 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _COMPONENT_in_instantiated_unit8456 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_instantiated_unit8477 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _ENTITY_in_instantiated_unit8509 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_instantiated_unit8513 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _identifier_in_instantiated_unit8551 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _CONFIGURATION_in_instantiated_unit8649 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_instantiated_unit8653 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INTEGER_OR_FLOAT_TYPE_DEFINITION_in_integer_or_float_type_definition8697 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _range_constraint_in_integer_or_float_type_definition8699 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INTERFACE_CONSTANT_DECLARATION_in_interface_constant_declaration8745 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _CONSTANT_in_interface_constant_declaration8761 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_list_in_interface_constant_declaration8780 = new BitSet(new ulong[]{0x0UL,0x40000000UL,0x2000000000000000UL});
		public static readonly BitSet _IN_in_interface_constant_declaration8796 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_interface_constant_declaration8817 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_interface_constant_declaration8833 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _interface_signal_declaration_in_interface_declaration8879 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_constant_declaration_in_interface_declaration8895 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_variable_declaration_in_interface_declaration8909 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interface_file_declaration_in_interface_declaration8923 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTERFACE_FILE_DECLARATION_in_interface_file_declaration8954 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _FILE_in_interface_file_declaration8956 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_list_in_interface_file_declaration8958 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_interface_file_declaration8960 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INTERFACE_SIGNAL_DECLARATION_in_interface_signal_declaration9006 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _SIGNAL_in_interface_signal_declaration9022 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_list_in_interface_signal_declaration9041 = new BitSet(new ulong[]{0x1000000000UL,0x2000440000000UL,0x2000000000008000UL});
		public static readonly BitSet _mode_in_interface_signal_declaration9057 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_interface_signal_declaration9078 = new BitSet(new ulong[]{0x2000000008UL,0x200UL});
		public static readonly BitSet _BUS_in_interface_signal_declaration9094 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_interface_signal_declaration9115 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INTERFACE_VARIABLE_DECLARATION_in_interface_variable_declaration9165 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _VARIABLE_in_interface_variable_declaration9181 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_list_in_interface_variable_declaration9200 = new BitSet(new ulong[]{0x1000000000UL,0x2000440000000UL,0x2000000000008000UL});
		public static readonly BitSet _mode_in_interface_variable_declaration9216 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_interface_variable_declaration9237 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_interface_variable_declaration9253 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _WHILE_in_iteration_scheme9299 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_iteration_scheme9301 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _FOR_in_iteration_scheme9325 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_iteration_scheme9327 = new BitSet(new ulong[]{0x4400000000000000UL,0x0UL,0x8000000000000000UL});
		public static readonly BitSet _discrete_range_in_iteration_scheme9329 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _UNCONDITIONAL_LOOP_in_iteration_scheme9351 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LIBRARY_in_library_clause9391 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _logical_name_list_in_library_clause9393 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _entity_declaration_in_primary_unit9429 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _configuration_declaration_in_primary_unit9449 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _package_declaration_in_primary_unit9462 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _architecture_body_in_secondary_unit9497 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _package_body_in_secondary_unit9518 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_logical_name_list9559 = new BitSet(new ulong[]{0x1000002UL,0x400UL});
		public static readonly BitSet _AND_in_logical_operator9587 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OR_in_logical_operator9600 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NAND_in_logical_operator9614 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NOR_in_logical_operator9626 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _XOR_in_logical_operator9639 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _XNOR_in_logical_operator9652 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOOP_in_loop_statement9690 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _iteration_scheme_in_loop_statement9692 = new BitSet(new ulong[]{0x4001010008UL,0x8080010000480UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _sequential_statement_in_loop_statement9724 = new BitSet(new ulong[]{0x4001010008UL,0x8080010000480UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _end_identifier_in_loop_statement9757 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _IN_in_mode9805 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OUT_in_mode9822 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INOUT_in_mode9838 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BUFFER_in_mode9852 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LINKAGE_in_mode9865 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MUL_in_multiplying_operator9890 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DIV_in_multiplying_operator9902 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MOD_in_multiplying_operator9914 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _REM_in_multiplying_operator9926 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NAME_in_name9962 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_name9984 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _STRING_LITERAL_in_name10028 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _name_indexed_part_in_name10100 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _name_slice_part_in_name10126 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _name_attribute_part_in_name10154 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _name_selected_part_in_name10178 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _association_list_in_name10203 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _name_indexed_or_slice_part_in_name10247 = new BitSet(new ulong[]{0x20008UL,0xF000000000000000UL,0x1UL});
		public static readonly BitSet _NAME_ATTRIBUTE_PART_in_name_attribute_part10319 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _signature_in_name_attribute_part10321 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_in_name_attribute_part10324 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_name_attribute_part10326 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _NAME_INDEXED_PART_in_name_indexed_part10369 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_name_indexed_part10385 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _NAME_SELECTED_PART_in_name_selected_part10436 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _suffix_in_name_selected_part10438 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _NAME_SLICE_PART_in_name_slice_part10475 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _discrete_range_in_name_slice_part10477 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _NAME_INDEXED_OR_SLICE_PART_in_name_indexed_or_slice_part10514 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_name_indexed_or_slice_part10516 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _NEXT_in_next_statement10554 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _loop_label_in_next_statement10584 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_next_statement10605 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _NULLTOK_in_null_statement10649 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PACKAGE_BODY_in_package_body10696 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _package_simple_name_in_package_body10712 = new BitSet(new ulong[]{0x10000001000108UL,0x81808C00UL,0x1C00000000000000UL,0x500UL});
		public static readonly BitSet _package_body_declarative_item_in_package_body10744 = new BitSet(new ulong[]{0x10000001000108UL,0x81808C00UL,0x1C00000000000000UL,0x500UL});
		public static readonly BitSet _end_identifier_in_package_body10777 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _subprogram_declaration_in_package_body_declarative_item10825 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subprogram_body_in_package_body_declarative_item10841 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_declaration_in_package_body_declarative_item10864 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_declaration_in_package_body_declarative_item10886 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declaration_in_package_body_declarative_item10905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declaration_in_package_body_declarative_item10923 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_declaration_in_package_body_declarative_item10941 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _alias_declaration_in_package_body_declarative_item10963 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_package_body_declarative_item10984 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_template_declaration_in_package_body_declarative_item11012 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_package_body_declarative_item11024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PACKAGE_in_package_declaration11075 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_package_declaration11089 = new BitSet(new ulong[]{0x210100001180108UL,0x81808C00UL,0x1800800000000000UL,0x500UL});
		public static readonly BitSet _package_declarative_item_in_package_declaration11121 = new BitSet(new ulong[]{0x210100001180108UL,0x81808C00UL,0x1800800000000000UL,0x500UL});
		public static readonly BitSet _end_identifier_in_package_declaration11147 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _subprogram_declaration_in_package_declarative_item11195 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_declaration_in_package_declarative_item11212 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_declaration_in_package_declarative_item11235 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declaration_in_package_declarative_item11255 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signal_declaration_in_package_declarative_item11274 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declaration_in_package_declarative_item11295 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_declaration_in_package_declarative_item11314 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _alias_declaration_in_package_declarative_item11337 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _component_declaration_in_package_declarative_item11359 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_specification_in_package_declarative_item11377 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_declaration_in_package_declarative_item11393 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _disconnection_specification_in_package_declarative_item11411 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_package_declarative_item11423 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_template_declaration_in_package_declarative_item11452 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_package_declarative_item11465 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PHYSICAL_TYPE_DEFINITION_in_physical_type_definition11509 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _range_constraint_in_physical_type_definition11523 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_in_physical_type_definition11527 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _identifier_in_physical_type_definition11575 = new BitSet(new ulong[]{0x80000004000000UL,0x800000008000000UL,0x100UL});
		public static readonly BitSet _abstract_literal_in_physical_type_definition11621 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_physical_type_definition11625 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _name_in_physical_type_definition11679 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _end_identifier_in_physical_type_definition11752 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _PORT_in_port_clause11807 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _interface_signal_declaration_in_port_clause11825 = new BitSet(new ulong[]{0x8UL,0x8000000000UL});
		public static readonly BitSet _PORT_MAP_in_port_map_aspect11879 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _association_list_in_port_map_aspect11881 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _abstract_literal_in_primary11925 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PHYSICAL_LITERAL_in_primary11936 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _abstract_literal_in_primary11938 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_in_primary11940 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _FLOAT_POINT_LITERAL_in_primary11961 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_LITERAL_in_primary11973 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BIT_STRING_LITERAL_BINARY_in_primary11993 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BIT_STRING_LITERAL_OCTAL_in_primary12013 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BIT_STRING_LITERAL_HEX_in_primary12033 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULLTOK_in_primary12053 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _aggregate_in_primary12073 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _allocator_in_primary12093 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _name_in_primary12113 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qualified_expression_in_primary12133 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PROCEDURE_CALL_in_procedure_call_statement12173 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_procedure_call_statement12190 = new BitSet(new ulong[]{0x20008UL});
		public static readonly BitSet _association_list_in_procedure_call_statement12240 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _subprogram_declaration_in_process_declarative_item12290 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subprogram_body_in_process_declarative_item12306 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_declaration_in_process_declarative_item12329 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_declaration_in_process_declarative_item12351 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declaration_in_process_declarative_item12370 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declaration_in_process_declarative_item12388 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_declaration_in_process_declarative_item12406 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _alias_declaration_in_process_declarative_item12428 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_specification_in_process_declarative_item12449 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_declaration_in_process_declarative_item12464 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_process_declarative_item12481 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_template_declaration_in_process_declarative_item12509 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_process_declarative_item12521 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PROCESS_in_process_statement12569 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _sensitivity_list_in_process_statement12587 = new BitSet(new ulong[]{0x10004001190108UL,0x80A0091808C80UL,0x1C01005002800090UL,0x1D00UL});
		public static readonly BitSet _IS_in_process_statement12624 = new BitSet(new ulong[]{0x10004001190108UL,0x8080091808C80UL,0x1C01005002800090UL,0x1D00UL});
		public static readonly BitSet _process_declarative_item_in_process_statement12675 = new BitSet(new ulong[]{0x10004001190108UL,0x8080091808C80UL,0x1C01005002800090UL,0x1D00UL});
		public static readonly BitSet _sequential_statement_in_process_statement12712 = new BitSet(new ulong[]{0x4001010008UL,0x8080010000480UL,0x1005002800090UL,0x1800UL});
		public static readonly BitSet _end_identifier_in_process_statement12760 = new BitSet(new ulong[]{0x8UL,0x0UL,0x800000UL});
		public static readonly BitSet _POSTPONED_in_process_statement12819 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _QUALIFIED_EXPRESSION_in_qualified_expression12890 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_qualified_expression12894 = new BitSet(new ulong[]{0x80UL});
		public static readonly BitSet _aggregate_in_qualified_expression12896 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _direction_in_range12933 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_range12937 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_range12941 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _name_in_range12962 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RANGETOK_in_range_constraint12997 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _range_in_range_constraint12999 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _RECORD_TYPE_DEFINITION_in_record_type_definition13047 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_list_in_record_type_definition13080 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_record_type_definition13082 = new BitSet(new ulong[]{0x1000008UL,0x400UL});
		public static readonly BitSet _relational_operator_in_relation13150 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _relation_in_relation13154 = new BitSet(new ulong[]{0x2880008074000490UL,0xF4020000A022020UL,0x1980188101401CCUL});
		public static readonly BitSet _relation_in_relation13158 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _shift_expression_in_relation13180 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EQ_in_relational_operator13213 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NEQ_in_relational_operator13226 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LT_in_relational_operator13238 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LE_in_relational_operator13251 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GT_in_relational_operator13264 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GE_in_relational_operator13277 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _REPORT_in_report_statement13311 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_report_statement13327 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_report_statement13359 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _RETURN_in_return_statement13405 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_return_statement13435 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _expression_in_selected_signal_assignment13479 = new BitSet(new ulong[]{0x80UL,0x800000000000000UL});
		public static readonly BitSet _target_signal_in_selected_signal_assignment13481 = new BitSet(new ulong[]{0x0UL,0x204000000UL,0x0UL,0x2005UL});
		public static readonly BitSet _GUARDED_in_selected_signal_assignment13503 = new BitSet(new ulong[]{0x0UL,0x200000000UL,0x0UL,0x2005UL});
		public static readonly BitSet _delay_mechanism_in_selected_signal_assignment13520 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x2004UL});
		public static readonly BitSet _selected_waveforms_in_selected_signal_assignment13535 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _waveform_in_selected_waveforms13579 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _choices_in_selected_waveforms13581 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x2004UL});
		public static readonly BitSet _name_in_sensitivity_list13633 = new BitSet(new ulong[]{0x2UL,0x800000000000000UL});
		public static readonly BitSet _LABEL_STATEMENT_in_sequential_statement13669 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_sequential_statement13671 = new BitSet(new ulong[]{0x4000010000UL,0x8000010000080UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _sequential_statement2_in_sequential_statement13673 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _sequential_statement2_in_sequential_statement13696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _wait_statement_in_sequential_statement213731 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _assertion_statement_in_sequential_statement213759 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _report_statement_in_sequential_statement213782 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signal_assignment_statement_in_sequential_statement213808 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_assignment_statement_in_sequential_statement213823 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _if_statement_in_sequential_statement213836 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _case_statement_in_sequential_statement213866 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _loop_statement_in_sequential_statement213894 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _next_statement_in_sequential_statement213922 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _exit_statement_in_sequential_statement213950 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _return_statement_in_sequential_statement213978 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _null_statement_in_sequential_statement214004 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _procedure_call_statement_in_sequential_statement214032 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _shift_operator_in_shift_expression14065 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _shift_expression_in_shift_expression14069 = new BitSet(new ulong[]{0x2880008074000490UL,0xF00000008002000UL,0x1980188101401C8UL});
		public static readonly BitSet _shift_expression_in_shift_expression14073 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _simple_expression_in_shift_expression14095 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SLL_in_shift_operator14128 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SRL_in_shift_operator14140 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SLA_in_shift_operator14152 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SRA_in_shift_operator14164 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ROL_in_shift_operator14176 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ROR_in_shift_operator14188 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIGNAL_ASSIGNMENT_STATEMENT_in_signal_assignment_statement14221 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _target_signal_in_signal_assignment_statement14223 = new BitSet(new ulong[]{0x0UL,0x200000000UL,0x0UL,0x2005UL});
		public static readonly BitSet _delay_mechanism_in_signal_assignment_statement14225 = new BitSet(new ulong[]{0x0UL,0x0UL,0x0UL,0x2004UL});
		public static readonly BitSet _waveform_in_signal_assignment_statement14228 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _SIGNAL_in_signal_declaration14271 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_list_in_signal_declaration14273 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_signal_declaration14275 = new BitSet(new ulong[]{0x2000000008UL,0x200UL,0x200000000UL});
		public static readonly BitSet _signal_kind_in_signal_declaration14277 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_signal_declaration14279 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _REGISTER_in_signal_kind14315 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BUS_in_signal_kind14327 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIGNAL_LIST_in_signal_list14383 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_signal_list14389 = new BitSet(new ulong[]{0x8UL,0x800000000000000UL});
		public static readonly BitSet _OTHERS_in_signal_list14416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ALL_in_signal_list14428 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIGNATURE_in_signature14458 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_signature14477 = new BitSet(new ulong[]{0x8UL,0x800000000000000UL,0x4000000000UL});
		public static readonly BitSet _RETURN_in_signature14498 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_signature14502 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _PLUS_in_simple_expression14568 = new BitSet(new ulong[]{0x2880008074000490UL,0xF00000008002000UL,0x8101401C8UL});
		public static readonly BitSet _MINUS_in_simple_expression14589 = new BitSet(new ulong[]{0x2880008074000490UL,0xF00000008002000UL,0x8101401C8UL});
		public static readonly BitSet _adding_operator_in_simple_expression14632 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _simple_expression_in_simple_expression14636 = new BitSet(new ulong[]{0x2880008074000490UL,0xF00000008002000UL,0x8101401C8UL});
		public static readonly BitSet _simple_expression_in_simple_expression14640 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _term_in_simple_expression14680 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SUBPROGRAM_BODY_in_subprogram_body14743 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _subprogram_specification_in_subprogram_body14759 = new BitSet(new ulong[]{0x10004000190108UL,0x8080091808880UL,0x1C01005002000090UL,0x1D00UL});
		public static readonly BitSet _subprogram_declarative_item_in_subprogram_body14791 = new BitSet(new ulong[]{0x10004000190108UL,0x8080091808880UL,0x1C01005002000090UL,0x1D00UL});
		public static readonly BitSet _sequential_statement_in_subprogram_body14828 = new BitSet(new ulong[]{0x4000010008UL,0x8080010000080UL,0x1005002000090UL,0x1800UL});
		public static readonly BitSet _SUBPROGRAM_DECLARATION_in_subprogram_declaration14887 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _subprogram_specification_in_subprogram_declaration14889 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _subprogram_declaration_in_subprogram_declarative_item14924 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subprogram_body_in_subprogram_declarative_item14940 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_declaration_in_subprogram_declarative_item14963 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_declaration_in_subprogram_declarative_item14985 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_declaration_in_subprogram_declarative_item15004 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variable_declaration_in_subprogram_declarative_item15022 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_declaration_in_subprogram_declarative_item15040 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _alias_declaration_in_subprogram_declarative_item15062 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_specification_in_subprogram_declarative_item15083 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _attribute_declaration_in_subprogram_declarative_item15098 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _use_clause_in_subprogram_declarative_item15115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_template_declaration_in_subprogram_declarative_item15143 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _group_declaration_in_subprogram_declarative_item15155 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PROCEDURE_in_subprogram_specification15196 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _designator_in_subprogram_specification15210 = new BitSet(new ulong[]{0x8UL,0x1E000000000UL});
		public static readonly BitSet _interface_declaration_in_subprogram_specification15230 = new BitSet(new ulong[]{0x8UL,0x1E000000000UL});
		public static readonly BitSet _FUNCTION_in_subprogram_specification15257 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _PURE_in_subprogram_specification15271 = new BitSet(new ulong[]{0x1000000UL,0x20000400UL,0x200000000000000UL});
		public static readonly BitSet _IMPURE_in_subprogram_specification15276 = new BitSet(new ulong[]{0x1000000UL,0x400UL,0x200000000000000UL});
		public static readonly BitSet _designator_in_subprogram_specification15283 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL});
		public static readonly BitSet _name_in_subprogram_specification15287 = new BitSet(new ulong[]{0x8UL,0x1E000000000UL});
		public static readonly BitSet _interface_declaration_in_subprogram_specification15319 = new BitSet(new ulong[]{0x8UL,0x1E000000000UL});
		public static readonly BitSet _SUBTYPE_in_subtype_declaration15364 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_subtype_declaration15366 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_subtype_declaration15368 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _SUBTYPE_INDICATION_in_subtype_indication15407 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_subtype_indication15423 = new BitSet(new ulong[]{0x8UL,0x800000100000000UL,0x20000000UL});
		public static readonly BitSet _name_in_subtype_indication15459 = new BitSet(new ulong[]{0x8UL,0x100000000UL,0x20000000UL});
		public static readonly BitSet _range_constraint_in_subtype_indication15528 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _index_constraint_in_subtype_indication15572 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _identifier_in_suffix15638 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_LITERAL_in_suffix15648 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _STRING_LITERAL_in_suffix15658 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ALL_in_suffix15668 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _name_in_target_signal15693 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _aggregate_in_target_signal15705 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _name_in_target_variable15732 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _aggregate_in_target_variable15744 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _multiplying_operator_in_term15771 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _term_in_term15775 = new BitSet(new ulong[]{0x2880008074000090UL,0xE00000008002000UL,0x8100401C8UL});
		public static readonly BitSet _term_in_term15779 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _factor_in_term15801 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FULL_TYPE_DECLARATION_in_type_declaration15836 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_type_declaration15838 = new BitSet(new ulong[]{0x20000000000020UL,0x1000001010UL,0x100080000UL,0x10UL});
		public static readonly BitSet _type_definition_in_type_declaration15840 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _INCOMPLETE_TYPE_DECLARATION_in_type_declaration15865 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _identifier_in_type_declaration15867 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _physical_type_definition_in_type_definition15903 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumeration_type_definition_in_type_definition15926 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _integer_or_float_type_definition_in_type_definition15946 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unconstrained_array_definition_in_type_definition15959 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constrained_array_definition_in_type_definition15976 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _record_type_definition_in_type_definition15995 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _access_type_definition_in_type_definition16020 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _file_type_definition_in_type_definition16045 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UNCONSTRAINED_ARRAY_DEFINITION_in_unconstrained_array_definition16098 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_unconstrained_array_definition16116 = new BitSet(new ulong[]{0x0UL,0x800000000000000UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_unconstrained_array_definition16137 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _USE_in_use_clause16194 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _name_in_use_clause16200 = new BitSet(new ulong[]{0x8UL,0x800000000000000UL});
		public static readonly BitSet _VARIABLE_ASSIGNMENT_STATEMENT_in_variable_assignment_statement16238 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _target_variable_in_variable_assignment_statement16240 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _expression_in_variable_assignment_statement16242 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _VARIABLE_in_variable_declaration16290 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _SHARED_in_variable_declaration16306 = new BitSet(new ulong[]{0x1000000UL,0x400UL});
		public static readonly BitSet _identifier_list_in_variable_declaration16325 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000000000UL});
		public static readonly BitSet _subtype_indication_in_variable_declaration16327 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_variable_declaration16329 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _WAIT_in_wait_statement16381 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _ON_in_wait_statement16412 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _sensitivity_list_in_wait_statement16416 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _UNTIL_in_wait_statement16439 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_wait_statement16443 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _FOR_in_wait_statement16466 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_wait_statement16470 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _WAVEFORM_in_waveform16511 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _waveform_element_in_waveform16527 = new BitSet(new ulong[]{0x8UL,0x0UL,0x0UL,0x4000UL});
		public static readonly BitSet _UNAFFECTED_in_waveform16552 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _WAVEFORM_ELEMENT_in_waveform_element16578 = new BitSet(new ulong[]{0x4UL});
		public static readonly BitSet _expression_in_waveform_element16594 = new BitSet(new ulong[]{0x8UL,0x200UL});
		public static readonly BitSet _expression_in_waveform_element16614 = new BitSet(new ulong[]{0x8UL});
		public static readonly BitSet _identifier_in_loop_label16654 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifier_in_package_simple_name16687 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}
